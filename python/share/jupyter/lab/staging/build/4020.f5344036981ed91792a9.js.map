{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/languages/analyzer.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/languages/python.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/languages/r.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/languages/chooser.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/editors/codemirror/tokens.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/editors/codemirror/extension.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/jumpers/jumper.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/history.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/jumpers/fileeditor.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/notebook_private.js","webpack://@jupyterlab/application-top/./node_modules/@krassowski/jupyterlab_go_to_definition/lib/jumpers/notebook.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/index.css?615e","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/statusbar.css?bffe","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/components/statusbar.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/tokens.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/icons/kite-logo.svg","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/components/status_model.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/magics/maps.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/connection_manager.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/virtual/document.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/console.css?f976","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/virtual/console.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/virtual/editor.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/virtual/editors/file_editor.js","webpack://@jupyterlab/application-top/./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/lsp.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/converter.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/components/completion.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/codemirror/cm_adapter.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/positioning.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/codemirror/feature.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/codemirror/features/completion.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/codemirror/features/selection.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/components/free_tooltip.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/kite_completer.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/kite_model.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/jl_adapter.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/file_editor.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/extractors/regexp.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/magics/rpy2.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/extractors/defaults.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/magics/defaults.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/virtual/editors/notebook.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/adapters/jupyterlab/notebook.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/command_manager.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/kite_commands.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/kite_onboarding.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/kite_accessible.css?f916","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/kite_accessible.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/manager.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/index.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/lib/utils.js","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/console.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/highlight.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/index.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/kite_accessible.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/logo.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/statusbar.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/variables/base.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/variables/cm-themes.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/variables/jupyterlab-dark.css","webpack://@jupyterlab/application-top/./node_modules/@kiteco/jupyterlab-kite/style/variables/jupyterlab-light.css"],"names":["TokenContext","constructor","token","tokens","index","this","length","value","_previous","_closestMeaningfulTokenWithIndex","_next","undefined","type","offset","LanguageAnalyzer","tokensProvider","supportsKernel","isCrossFileReference","context","guessReferencePath","referencePathQuery","definitionLocationQuery","_maybe_setup_tokens","getTokens","_get_token_index","findIndex","t","isDefinition","i","token_context","isVariableDefinition","definitionRules","bind","nameMatches","name","getDefinitions","variable","Array","from","filter","isAssignment","isTokenInSameAssignmentExpression","testedToken","originToken","tokensSet","Set","getTokenAt","add","tokensBetween","assignments","firstAssignment","sort","a","b","terminatingTokens","_selectTerminatingTokens","terminatorsAfterAssignment","LanguageWithOptionalSemicolons","openedBrackets","openingBrackets","closingBrackets","includes","terminator","push","traverse_left","previous","step_on","is_sep","simple_next","exists","traverse_right","next","simple_previous","tokenIndex","direction","nextMeaningfulToken","nextToken","evaluateSkippingBrackets","indexShift","callback","allowNegativeBrackets","result","python_setup","PythonAnalyzer","super","arguments","isStandaloneAssignment","isImport","isWithStatement","isForLoopOrComprehension","isTupleUnpacking","isStoreMagic","isRMagicOutput","siblings","_is_magic_switch","candidate","key","max_args","is_switch","switch","_is_magic_export","magic","export_arg","nargs","switch_test","magic_token","percent","before_previous","_breadcrumbs","allow_import_dots_upfront","parts","is_dot","reverse","_imports_breadcrumbs","join","test","prefix","PathExt","commaExpected","lastToken","RAnalyzer","isForLoop","slice","chooseLanguageAnalyzer","language","console","warn","CodeMirrorTokensProvider","editor","position","getPositionAt","getTokenForPosition","HANDLERS_ON","getModifierState","event","modifierKey","shiftKey","altKey","ctrlKey","metaKey","CodeMirrorExtension","jumper","connect","getOption","setOption","target","button","classes","indexOf","className","lookupName","textContent","selectToken","jump_to_definition","mouseEvent","origin","preventDefault","stopPropagation","cellTokens","typeFilterOn","lookupType","classFilter","usagesBeforeTarget","_countUsagesBefore","matchedTokensCount","j","error","classFilterOn","sibling","root","getRootNode","max_iter","stop_condition","node","nodeType","isEqualNode","nextSibling","previousSibling","parentNode","lastChild","hasCellMagic","cell_magic_lang_to_tokenizer","bash","R","python","python2","version","python3","javascript","js","svg","html","latex","movement_keys","modifiers","system_keys","CodeJumper","_getLanguageAnalyzerForCell","cell_editor","magic_name","hasOwnProperty","cm","analyzerClass","_findLastDefinition","stopIndex","definitionToken","definitionIndex","editors","analyzer","definitions","in_earlier_cell","filtered","otherToken","cellIndex","go_to_position","document_widget","column","line_number","input_number","document_jumper","line","document_jumper_type","jumpers","get","document_manager","jump_position","getJumpPosition","jump","global_jump","is_symlink","openOrReveal","uri","revealed","then","editor_index","editor_widget","title","label","content","disposable","addKeydownHandler","dialog_promise","showDialog","body","buttons","Dialog","accept","dispose","catch","try_to_open_document","path","widget","services","contents","handle_path_from_kernel","response","fallback_paths","obj","data","JSON","parse","text","header","msg_type","log","queryKernel","code","kernel","request","stop_on_error","silent","future","requestExecute","onIOPub","jump_to_cross_file_reference","cell_of_origin_analyzer","potential_paths","cwd","prefixed_with_cwd","map","concat","msg","handle_kernel_inspect","fallback","inspect_and_jump","Map","DB_ENTRY","JumpHistory","model_db","ensure_history_is_ready","jump_history","has","createList","store","stringify","recollect","last_position","undo","FileEditorJumper","history","model","modelDB","setLanguageFromMime","mimeType","mimeTypeChanged","session","mimeChanged","newValue","mime","replace","setSelection","start","end","focus","cell_of_origin_editor","jump_back","previous_position","getOffset","getOffsetAt","set","_ensureFocus","notebook","force","activeCell","mode","hasFocus","contains","document","activeElement","NB_CELL_CLASS","_findCell","classList","ArrayExt","widgets","parentElement","_findTargetCell","elementFromPoint","clientX","clientY","NotebookJumper","notebook_widget","_a","sessionContext","basePath","split","cell","languageInfo","metadata","setTimeout","deselectAll","activeCellIndex","activeEditor","after_jump","cells","iter","cell_index","code_cell","executionCount","options","insert","singleton","update","KiteStatus","VDomRenderer","addClass","item","caption","render","activeDocument","file_extension","setHidden","fetchKiteInstalled","props","reloadRequired","style","cursor","onClick","window","location","reload","GroupItem","Object","assign","spacing","message","tooltip","icon","react","top","kind","TextItem","source","ILanguageServerManager","URL_NS","KiteStatusModel","VDomModel","_icon","LabIcon","svgstr","_kiteStatus","_installed","_disconnected","_connectionClosed","_onChange","stateChanged","emit","_adapter","bindprops","ServerConnection","kiteInstalledUrl","method","ok","statusText","installed","json","err","URLExt","PageConfig","status","adapter","short","long","status_message","changed","_connection_manager","connection_manager","connected","disconnect","initialized","closed","documents_changed","virtual_editor","virtual_document","connections","id_path","MagicsMap","magic_overrides","m","RegExp","pattern","replacement","_override_for","match","ReversibleMagicsMap","overrides","override","CellMagicsMap","override_for","LineMagicsMap","replace_all","raw_lines","substituted_lines","skip_inspect","lines","reverse_replace_all","DocumentConnectionManager","on_new_connection","connection","on","e","Error","forEachDocumentOfConnection","ignored_languages","capabilities","closed_manually","documents","Signal","language_server_manager","kite_status_model","Private","setLanguageServerManager","connect_document_signals","foreign_document_opened","on_foreign_document_opened","foreign_document_closed","on_foreign_document_closed","disconnect_document_signals","delete","foreign","foreign_documents","values","_host","foreign_document","uris","solve_uris","language_server_id","getServerId","virtual_document_id_path","a_connection","entries","reconnect_delay","retrials_left","interval","success","connect_socket","document_path","isReady","unregister_document","wsBase","rootUri","virtualDocumentsUri","baseUri","has_lsp_supported_file","getLanguageServerManager","base","server","socket","_connections","_promise","_language_server_manager","async","onCreate","LSPConnection","WebSocket","languageId","serverUri","setMaxListeners","is_within_range","range","VirtualDocumentInfo","_document","VirtualDocument","overrides_registry","foreign_code_extractors","standalone","parent","isDisposed","blank_lines_between_cells","cell_magics_overrides","cell_magics","line_magics_overrides","line_magics","foreign_extractors_registry","foreign_extractors","virtual_lines","source_lines","instance_id","instances_count","unused_standalone_documents","_remaining_lifetime","unused_documents","document_info","clear","doc","close_all_foreign_documents","Infinity","last_virtual_line","last_source_line","forward_closed_signal","host","forward_opened_signal","open_foreign","parent_host","virtual_id","document_at_source_position","source_line","source_position_ce","editor_line","ch","foreign_documents_map","source_position_cm","is_within_foreign","source_position","virtual_position_at_document","virtual_line","choose_foreign_document","extractor","foreign_exists","unused_standalone","pop","extract_foreign_code","cell_code","cm_editor","editor_shift","foreign_document_map","has_foreign_code","results","kept_cell_code","foreign_code","foreign_shift","append_code_block","virtual_shift","host_code","cell_code_kept","decode_code_block","raw_code","cell_override","prepare_code_block","l","skip","_b","source_cell_lines","lines_padding","repeat","get_editor_at_virtual_line","editor_position","transform_virtual_to_editor","close_expired_documents","remaining_lifetime","close_foreign","ancestry","transform_source_to_editor","pos","virtual_position","transform_virtual_to_source","get_editor_at_source_line","maybe_emit_changed","previous_value","collect_documents","collected","foreign_languages","forEach","EditorLogConsole","FloatingConsole","element","createElement","appendChild","append","entry","innerHTML","scrollTop","scrollHeight","to_string","args","arg","BrowserConsole","create_console","VirtualEditor","is_update_in_progress","update_lock","_event_wrappers","create_virtual_document","documents_updated","on_updated","eventName","wrapped_handler","forEveryBlockEditor","off","code_extractors","root_document","can_update","fn","Promise","resolve","reject","perform_documents_update","document_at_root_position","root_as_source","root_position_to_virtual_position","get_editor_at_root_position","root_position","root_position_to_editor","handler","instance","VirtualFileEditor","has_cells","prop","receiver","Reflect","Proxy","transform_editor_to_root","get_editor_index","get_cm_editor","getValue","addEventListener","listener","getWrapperElement","Position","create","character","is","Is","objectLiteral","number","Range","one","two","three","four","Location","defined","string","LocationLink","targetUri","targetRange","targetSelectionRange","originSelectionRange","Color","red","green","blue","alpha","ColorInformation","color","ColorPresentation","textEdit","additionalTextEdits","TextEdit","typedArray","FoldingRangeKind","FoldingRange","startLine","endLine","startCharacter","endCharacter","DiagnosticRelatedInformation","DiagnosticSeverity","Warning","Information","Hint","Diagnostic","severity","relatedInformation","Command","command","_i","newText","del","TextDocumentEdit","textDocument","edits","VersionedTextDocumentIdentifier","isArray","CreateFile","overwrite","ignoreIfExists","boolean","RenameFile","oldUri","newUri","DeleteFile","recursive","ignoreIfNotExists","WorkspaceEdit","changes","documentChanges","every","change","TextEditChangeImpl","prototype","edit","all","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","textEditChange","keys","defineProperty","enumerable","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","TextDocumentIdentifier","TextDocumentItem","MarkupKind","PlainText","Markdown","MarkupContent","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","InsertTextFormat","CompletionItem","CompletionList","items","isIncomplete","MarkedString","fromPlainText","plainText","Hover","ParameterInformation","documentation","SignatureInformation","parameters","DocumentHighlightKind","Read","Write","DocumentHighlight","SymbolKind","Namespace","Package","String","Number","Boolean","Key","Null","SymbolInformation","containerName","DocumentSymbol","detail","selectionRange","children","deprecated","CodeActionKind","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","CodeActionContext","diagnostics","only","CodeAction","commandOrEdit","CodeLens","FormattingOptions","tabSize","insertSpaces","DocumentLink","EOL","TextDocument","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","sortedEdits","mergeSort","diff","lastModifiedOffset","startOffset","endOffset","substring","compare","p","left","right","leftIdx","rightIdx","ret","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","getLineOffsets","lineOffsets","isLineStart","charAt","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","inverse_namespace","namespace","records","diagnosticSeverityNames","completionItemKindNames","documentHighlightKindNames","CompletionTriggerKind","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","KiteConnector","DataConnector","responseType","CompletionHandler","_trigger_kind","suppress_auto_invoke_in","_editor","fetchAbort","AbortController","_kernel_connector","KernelConnector","abort","fetch","replacementRange","signal","once","getCursorPosition","EmptyICompletionItemsReply","position_in_token","typed_character","start_in_root","transform_from_editor_to_root","end_in_root","cursor_in_root","virtual_start","virtual_end","virtual_cursor","kitePromise","fetch_kite","isManual","should_suppress_strings","kernelTriggerRegex","kernelPromise","EmptyIReply","kernelTimeoutPromise","timeout","race","kite","merged","merge_replies","aborted","lspCompletionItems","getCompletion","trigger_kind","all_non_prefixed","lineText","getLineTokens","insertion","insertText","preToken","startsWith","postCursor","endsWith","completionItem","hint","filterText","noFilter","toLowerCase","kernelReply","kiteReply","newKernelReply","transform","kiteSet","reply","types","_jupyter_types_experimental","matches","cm_start","with_trigger_kind","CodeMirrorAdapter","jupyterlab_components","features","saveChange","last_change","feature","register","is_registered","remove_tooltip","getDoc","getCursor","afterChange","invalidateLastChange","remove","is_equal","self","other","position_at_offset","text_line","offset_at_position","lines_include_breaks","break_increment","CommandEntryPoint","toDocumentChanges","offset_from_lsp","CodeMirrorLSPFeature","editor_handlers","connection_handlers","wrapper_handlers","event_name","wrapper","isEnabled","removeEventListener","range_to_editor_range","transform_virtual_position_to_root_position","position_from_mouse","coordsChar","get_language_at","getModeAt","extract_last_character","highlight_range","class_name","markText","is_whole_document_edit","lsp_to_ce","current_uri","applied_changes","edited_cells","errors","decodeURI","edits_by_offset","old_to_new_line","new_text","last_end","current_old_line","current_new_line","start_offsets","new_lines","get_or_create","replaced_fragment","assert","apply_single_edit","appliedChanges","modifiedCells","wasGranular","replace_fragment","fragment_start","fragment_end","newFragmentText","raw_value","old_value","cm_to_ce","up_to_offset","from_offset","new_value","replaceRange","setCursor","scroll","start_editor","end_editor","last_editor","recently_replaced","commands","allowedLongChanges","Completion","_completionCharacters","getLanguageCompletionCharacters","last_character","completionCharacters","invoke_completer","Selection","onMousedown","sendSelection","MIN_HEIGHT","MAX_HEIGHT","FreeTooltip","Tooltip","movetoLineEnd","moveToLineEnd","_setGeometry","getLine","last","anchor","getCoordinateForPosition","getComputedStyle","paddingLeft","parseInt","HoverBox","maxHeight","minHeight","horizontal","privilege","hideDocsKey","shouldHideDocs","state","KiteCompleter","Completer","stateDB","onUpdateRequest","docpanel","querySelector","toggle","save","KiteModel","_current","_cursor","_isDisposed","_completionItems","_options","_original","_query","_subsetMatch","_typeMap","_orderedTypes","_stateChanged","unchanged","JSONExt","original","current","originalLine","currentLine","reset","query","ending","lastIndexOf","_resetKite","_state","newState","completionItems","_markup","createPatch","patch","handleCursorChange","prevState","cursorDelta","inputDelta","changeCh","s","reduce","x","y","handleTextChange","_filter","orderedTypes","hard","_reset","setCompletionItems","isStale","newSet","retainableItems","findOrderedCompletionItemTypes","setOptions","typeMap","toArray","findOrderedTypes","newCursor","option","raw","marked","StringExt","mark","matchIndices","KNOWN_TYPES","KNOWN_MAP","acc","newTypeSet","newTypes","localeCompare","lsp_features","StatusMessage","cleanup","mime_type_language_map","JupyterLabWidgetAdapter","app","rendermime_registry","invoke","document_connected","invoke_command","adapters","saveState","on_save_state","on_connection_closed","connect_completion","disposed","manager","_c","disconnect_adapter","contentChanged","update_documents","current_completion_connector","_tooltip","id","mime_type","without_parameters","subtype","substr","reload_connection","connect_document","sendSaved","cancel_completer","completion_handler","completer","execute","connect_adapter","document_changed","send_open","connection_context","sendOpenWhenReady","is_init","sendFullTextChange","with_update_lock","updateAfterChange","create_adapter","get_features","on_connected","connect_contentChanged_signal","adapter_features","feature_type","_slot","get_position_from_context_menu","leaf_node","contextMenuHitTest","getBoundingClientRect","_contextMenuEvent","get_context","get_context_from_context_menu","create_tooltip","markup","bundle","find_ce_editor","rendermime","Widget","registerKiteModules","kiteModel","kiteCompleter","jlCompleter","FileEditorAdapter","completion_manager","language_file_extension","ce_editor","connector","RegExpForeignCodeExtractor","global_expression","test_expression","expression","is_standalone","lastIndex","extracts","started_from","exec","host_code_fragment","matched_string","position_shift","foreign_code_fragment","extract_to_foreign","extract_arguments","end_index","keep_in_host","start_offset","final_host_code_fragment","RPY2_MAX_ARGS","extract_r_args","content_position","inputs","outputs","others","rest","parse_r_args","input_variables","output_variables","rpy2_reverse_pattern","quote","multi_line","rpy2_reverse_replacement","other_args","input","output","rpy2_args_pattern","max_n","rpy2_code_extractor","r","rpy2_args","empty_or_escaped","language_specific_overrides","line_break","first_line","entire","DocDispatcher","virtual_notebook","to","notebook_map","transform_from_root_to_editor","active_editor","transform_from_notebook_to_root","VirtualEditorForNotebook","cell_to_corresponding_source_line","cm_editor_to_cell","_proxy","shift","get_cell_at","other_cell","get_editor_at_root_line","addKeyMap","bottom","addLineClass","where","_class","addLineWidget","addOverlay","addPanel","charCoords","object","outside","cursorCoords","defaultCharWidth","any_editor","defaultTextHeight","endOperation","execCommand","dummy_doc","precise","getTokenTypeAt","codemirror_editor","heightAtLine","includeWidgets","isReadOnly","lineAtHeight","height","monitor_for_new_blocks","cells_with_handlers","activeCellChanged","find_cell_by_editor","cell_id","NotebookAdapter","is_ready","isVisible","init_once_ready","_language_info","info","language_info","_session","update_language_info","kernelChanged","on_kernel_changed","on_completions","current_completion_handler","language_metadata","codeMimetype","mimetype","ready","set_completion_connector","file_editor_adapters","notebook_adapters","is_context_menu_over_token","LSPCommandManager","palette","tracker","suffix","add_to_palette","category","cmd","create_id","addCommand","is_enabled","is_visible","should_attach","attach_command","addItem","attach_to","entry_point","ContextCommandManager","rank_group","rank_group_size","contextMenu","selector","rank","get_rank","add_context_separator","position_in_group","menu","isAttached","currentWidget","shell","is_context_menu_open","current_adapter","is_widget_current","context_from_active_document","is_relative","is_rank_relative","relative","NotebookCommandManager","CellContextMenu","ce_cursor","cm_cursor","PositionConverter","ce_to_cm","FileEditorCommandManager","FileEditorContextMenu","fileEditorId","cmdIds","tutorial","copilot","settings","help","toggleDocs","paletteCommands","open","registerKiteCommands","onboardingShownKey","KiteOnboarding","documentManager","connectionManager","registerCommand","_show","hasCommand","onboardingShown","emptyVirtualDocument","fetchKiteOnboarding","filename","_fetch","Health","_MinJlabVersion","KiteAccessible","ListModel","serviceManager","health","getHealth","notifyHealth","IncompatibleJLabLSPPlugin","trackIncompatiblity","baseToastOptions","autoClose","closeOnClick","RequirementsNotMet","INotification","InnerNotif","ButtonBar","BelowMinJLabVersion","KiteEngineNotInstalled","JLabKiteHasUpdate","pluginMap","queryInstalled","Healthy","track","resp","CreateAsync","registery","load","LanguageServerManager","_sessionsChanged","_sessions","_settings","_baseUrl","baseUrl","fetchSessions","spec","languages","statusUrl","sessions","oldKeys","oldKey","IPaths","JupyterFrontEnd","requires","IEditorTracker","INotebookTracker","ISettingRegistry","ICommandPalette","IDocumentManager","ICompletionManager","IRenderMimeRegistry","ILabShell","IStatusBar","IStateDB","activate","fileEditorTracker","notebookTracker","settingRegistry","paths","labShell","status_bar","ka","checkHealth","onboarding_manager","status_bar_item","currentChanged","showOnBoot","registerStatusItem","align","isActive","widgetUpdated","_sender","_widget","connect_file_editor","fileEditor","CodeMirrorEditor","pathChanged","reconnect","widgetAdded","sender","connect_notebook","autoStart","RE_PATH_ANCHOR","sleep","until_ready","max_retrials","interval_modifier","DefaultMap","default_factory","k","v","server_root_uri","uris_equal","win_paths","is_win_path","normalize_win_path","it","uri_to_contents_path","child","___CSS_LOADER_EXPORT___","module"],"mappings":"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","file":"4020.f5344036981ed91792a9.js?v=f5344036981ed91792a9","sourcesContent":["export class TokenContext {\n    constructor(token, tokens, index) {\n        this.token = token;\n        this.index = index;\n        this.tokens = tokens;\n    }\n    get simple_next() {\n        return this.index + 1 < this.tokens.length\n            ? this.tokens[this.index + 1].value\n            : null;\n    }\n    get simple_previous() {\n        return this.index - 1 >= 0 ? this.tokens[this.index - 1].value : null;\n    }\n    get previous() {\n        if (!this._previous) {\n            let { token, index } = _closestMeaningfulTokenWithIndex(this.index, this.tokens, -1);\n            // TODO: null!!\n            this._previous = new TokenContext(token, this.tokens, index);\n        }\n        return this._previous;\n    }\n    get next() {\n        if (!this._next) {\n            let { token, index } = _closestMeaningfulTokenWithIndex(this.index, this.tokens, +1);\n            this._next = new TokenContext(token, this.tokens, index);\n        }\n        return this._next;\n    }\n    get value() {\n        return this.token ? this.token.value : undefined;\n    }\n    get type() {\n        return this.token.type;\n    }\n    get offset() {\n        return this.token.offset;\n    }\n    get exists() {\n        return !!this.token;\n    }\n}\nexport class LanguageAnalyzer {\n    /**\n     * Name of a variable for which a definition is sought\n     */\n    constructor(tokensProvider) {\n        this.supportsKernel = false;\n        this.tokensProvider = tokensProvider;\n    }\n    isCrossFileReference(context) {\n        // identify Python import, and R source(), library(), require()\n        return false;\n    }\n    guessReferencePath(context) {\n        // more than one guess allowed\n        return [''];\n    }\n    referencePathQuery(context) {\n        return '';\n    }\n    definitionLocationQuery(context) {\n        return '';\n    }\n    _maybe_setup_tokens() {\n        if (!this.tokens) {\n            this.tokens = this.tokensProvider.getTokens();\n        }\n    }\n    _get_token_index(token) {\n        this._maybe_setup_tokens();\n        return this.tokens.findIndex(t => t.value === token.value &&\n            t.offset === token.offset &&\n            t.type === token.type);\n    }\n    isDefinition(token, i) {\n        if (token.type === 'variable') {\n            let token_context = new TokenContext(token, this.tokens, i);\n            let isVariableDefinition;\n            for (isVariableDefinition of this.definitionRules) {\n                if (isVariableDefinition.bind(this)(token_context)) {\n                    return true;\n                }\n            }\n            // nothing matched\n            return false;\n        }\n        else if (token.type === 'def') {\n            // Matching function definition.\n            // We could double-check that an opening parenthesis follows,\n            // but we can assume that it is the responsibility of CodeMirror.\n            return true;\n        }\n        else {\n            // nothing matched\n            return false;\n        }\n    }\n    nameMatches(name, token) {\n        return token.value === name;\n    }\n    getDefinitions(variable) {\n        this.tokens = this.tokensProvider.getTokens();\n        return Array.from(this.tokens).filter((token, i) => this.nameMatches(variable, token) && this.isDefinition(token, i));\n    }\n    isAssignment(token) {\n        return token.type === 'operator' && token.value === '=';\n    }\n    /**\n     * Check whether testedToken belongs to same assignment expression as originToken\n     *\n     * #### Notes\n     * To verify if token belongs to same assignment expression, the tokens\n     * between testedToken and originToken as tested. The token is in same\n     * assignment expression if there is an assignment token in between and\n     * there are no expression-terminating tokens after such an assignment.\n     *\n     * We only need to look at the first assignment token, see this example:\n     * a = 1; b = a\n     */\n    isTokenInSameAssignmentExpression(testedToken, originToken) {\n        // Find tokens between token.offset and otherToken.offset.\n        let tokensSet = new Set();\n        for (let offset = testedToken.offset + 1; offset < originToken.offset + 1; offset++) {\n            let token = this.tokensProvider.getTokenAt(offset);\n            if (token.offset === testedToken.offset) {\n                continue;\n            }\n            tokensSet.add(token);\n        }\n        let tokensBetween = Array.from(tokensSet);\n        // If there is no assignment token, we don't need to worry\n        let assignments = tokensBetween.filter(this.isAssignment);\n        if (!assignments.length) {\n            return false;\n        }\n        let firstAssignment = assignments.sort((a, b) => a.offset > b.offset ? 1 : -1)[0];\n        // Select terminating tokens:\n        let terminatingTokens = this._selectTerminatingTokens(tokensBetween);\n        let terminatorsAfterAssignment = terminatingTokens.filter(token => token.offset > firstAssignment.offset);\n        if (!terminatorsAfterAssignment.length) {\n            return true;\n        }\n        return false;\n    }\n}\nexport class LanguageWithOptionalSemicolons extends LanguageAnalyzer {\n    _selectTerminatingTokens(tokens) {\n        // terminating tokens are:\n        // semicolons and new lines (which are locally outside of brackets)\n        let terminatingTokens = [];\n        let openedBrackets = 0;\n        const openingBrackets = '([{';\n        const closingBrackets = ')]}';\n        for (let token of tokens) {\n            // let's assume that the code is properly formatted,\n            // and do not check the order of brackets\n            if (token.value !== '') {\n                if (openingBrackets.includes(token.value)) {\n                    openedBrackets += 1;\n                    continue;\n                }\n                else if (closingBrackets.includes(token.value)) {\n                    openedBrackets -= 1;\n                    continue;\n                }\n            }\n            // empty string is used as a token representing new-line\n            let terminator = token.value === ';' || token.value === '';\n            // if there is a closing bracket, completing a previously opened one,\n            // which proceeds the token of origin, that is fine too (hence <= 0)\n            if (openedBrackets <= 0 && terminator) {\n                terminatingTokens.push(token);\n            }\n        }\n        return terminatingTokens;\n    }\n    traverse_left(previous, step_on) {\n        let is_sep = step_on.includes(previous.simple_next);\n        while (is_sep && previous.exists) {\n            previous = previous.previous;\n            is_sep = step_on.includes(previous.simple_next);\n        }\n        return previous;\n    }\n    traverse_right(next, step_on) {\n        let is_sep = step_on.includes(next.simple_previous);\n        while (is_sep && next.exists) {\n            next = next.next;\n            is_sep = step_on.includes(next.simple_previous);\n        }\n        return next;\n    }\n}\nexport function _closestMeaningfulTokenWithIndex(tokenIndex, tokens, direction) {\n    let nextMeaningfulToken = null;\n    while (nextMeaningfulToken == null) {\n        tokenIndex += direction;\n        if (tokenIndex < 0 || tokenIndex >= tokens.length) {\n            return { index: null, token: null };\n        }\n        let nextToken = tokens[tokenIndex];\n        if (nextToken.type !== '') {\n            nextMeaningfulToken = nextToken;\n        }\n    }\n    return { index: tokenIndex, token: nextMeaningfulToken };\n}\n//# sourceMappingURL=analyzer.js.map","import { LanguageWithOptionalSemicolons } from './analyzer';\nimport { PathExt } from '@jupyterlab/coreutils';\nfunction evaluateSkippingBrackets(tokens, indexShift, callback, allowNegativeBrackets = false) {\n    // here `nextToken` is any token, not necessarily a meaningful one\n    let nextToken = tokens[indexShift];\n    // unpacking with curly braces is not possible\n    const openingBrackets = '([';\n    const closingBrackets = ')]';\n    let openedBrackets = 0;\n    // value of token is equal to an empty string for line breaks\n    // a line break is the latest when the search should terminate,\n    // unless the left-hand tuple is spread over several lines (in brackets)\n    while (nextToken && (nextToken.value !== '' || openedBrackets > 0)) {\n        if (nextToken.value === '') {\n            // ignoring new-lines (when within brackets)\n        }\n        else if (openingBrackets.includes(nextToken.value)) {\n            openedBrackets += 1;\n        }\n        else if (closingBrackets.includes(nextToken.value) &&\n            (allowNegativeBrackets || openedBrackets > 0)) {\n            openedBrackets -= 1;\n        }\n        else if (nextToken.value === ' ' || nextToken.value === '\\t') {\n            // ignoring whitespaces\n        }\n        else {\n            let result = callback(nextToken, indexShift);\n            if (result !== undefined) {\n                return result;\n            }\n        }\n        indexShift += 1;\n        nextToken = tokens[indexShift];\n    }\n    return false;\n}\nconst python_setup = `\nimport json\nfrom pathlib import Path\n\ndef jupyter_lab_consumable_path(path):\n    # if the definition is in current notebook, the path is not known on the kernel side\n    if not path:\n        return {'path': None, 'is_symlink': False}\n\n    path = Path(path)\n    cwd = Path.cwd()\n\n    # the simple case\n    if cwd in path.parents:\n        return {\n            'path': str(path.relative_to(cwd)),\n            'is_symlink': False\n        }\n\n    symlinks_dir = Path('.jupyter_symlinks')\n    symlinks_dir.mkdir(exist_ok=True)\n    # relative pathways could lead out of the starting dir as well (e.g. using .. construct on Linux)\n    path = path.absolute().resolve()\n\n    # remove anchor (root slash/drive etc)\n    sub_path = path.relative_to(path.anchor)\n\n    # TODO: add drive to avoid confusion on Windows\n    symlink = symlinks_dir / sub_path\n    symlink.parent.mkdir(exist_ok=True, parents=True)\n    try:\n        symlink.unlink()\n    except FileNotFoundError:\n        pass\n    assert not symlink.is_absolute()\n    symlink.symlink_to(path)\n    return {\n        'path': str(symlink),\n        'is_symlink': True\n    }\n`;\nexport class PythonAnalyzer extends LanguageWithOptionalSemicolons {\n    constructor() {\n        super(...arguments);\n        // idea for improvement:\n        //  rename Analyzer to RuleTester, define class Rule, make Rule instances take a callback on init,\n        //  possibly add a string with rule's name (it could be displayed as \"defined in >for< loop, line 9\",\n        //  or \"imported from xyz module\" and in case of multiple hits, user could choose which one to jump to),\n        //  and make the rules interface the way to go for other languages.\n        this.definitionRules = [\n            this.isStandaloneAssignment,\n            this.isImport,\n            this.isWithStatement,\n            this.isForLoopOrComprehension,\n            this.isTupleUnpacking,\n            this.isStoreMagic,\n            this.isRMagicOutput\n        ];\n        this.supportsKernel = true;\n    }\n    // Matching standalone variable assignment:\n    isStandaloneAssignment(siblings) {\n        let { next } = siblings;\n        return next.exists && this.isAssignment(next);\n    }\n    _is_magic_switch(candidate, key, max_args = 20) {\n        while (max_args && candidate.exists) {\n            if (candidate.value === key && candidate.simple_previous === '-') {\n                break;\n            }\n            candidate = candidate.previous;\n            max_args -= 1;\n        }\n        let is_switch = max_args !== 0;\n        return {\n            is_switch: is_switch,\n            switch: is_switch ? candidate : null\n        };\n    }\n    _is_magic_export(context, magic, export_arg, nargs = 1) {\n        let { previous } = context;\n        let switch_test = this._is_magic_switch(previous, export_arg, nargs);\n        if (!switch_test.is_switch) {\n            return false;\n        }\n        let magic_token = switch_test.switch.previous.previous;\n        let percent = magic_token.simple_previous;\n        return magic_token.value === magic && percent === '%';\n    }\n    // IPython %store -r magic:\n    isStoreMagic(context) {\n        return this._is_magic_export(context, 'store', 'r', 20);\n    }\n    isRMagicOutput(context) {\n        return this._is_magic_export(context, 'R', 'o', 1);\n    }\n    // Matching imports:\n    isImport(context) {\n        let { previous } = context;\n        return (previous.exists &&\n            previous.type === 'keyword' &&\n            previous.value === 'import');\n    }\n    isCrossFileReference(context) {\n        // from a import b; from a.b import c\n        let previous = context.previous;\n        let next = context.next;\n        previous = this.traverse_left(previous, '.');\n        next = this.traverse_right(next, '.');\n        if (previous.exists &&\n            previous.type === 'keyword' &&\n            previous.value === 'from' &&\n            next.exists &&\n            next.type === 'keyword' &&\n            next.value === 'import') {\n            return true;\n        }\n        // import x, import a.b\n        let before_previous = previous.previous.previous;\n        if (this.isImport(previous.next) &&\n            !(before_previous.exists &&\n                before_previous.type === 'keyword' &&\n                before_previous.value === 'from')) {\n            return true;\n        }\n        return false;\n    }\n    _breadcrumbs(context, allow_import_dots_upfront = false) {\n        let { previous, token } = context;\n        let parts = [];\n        let is_dot = previous.simple_next === '.';\n        while (is_dot && previous.exists) {\n            parts.push(previous.value);\n            previous = previous.previous;\n            is_dot = previous.simple_next === '.';\n        }\n        if (allow_import_dots_upfront) {\n            // relative imports\n            if (previous.simple_previous === '.') {\n                parts.push('');\n            }\n            if (previous.simple_previous === '..') {\n                parts.push('.');\n            }\n        }\n        parts = parts.reverse();\n        parts.push(token.value);\n        return parts;\n    }\n    _imports_breadcrumbs(context) {\n        return this._breadcrumbs(context, true);\n    }\n    definitionLocationQuery(context) {\n        let parts = this._breadcrumbs(context);\n        let value = parts.join('.');\n        if (/^[a-zA-Z_.]+$/.test(value)) {\n            return (python_setup +\n                `\n\ndef _extract_object(breadcrumbs, available_objects):\n    obj = available_objects[breadcrumbs[0]]\n\n    for name in breadcrumbs[1:]:\n        obj = getattr(obj, name)\n    return obj\n\n\ndef _locate_definition(name):\n    \"\"\"Returns (line_number, path, is_sym_link) tuple\"\"\"\n    from inspect import getsourcefile, getsourcelines\n\n    available_objects = globals()\n    input_number = None\n\n    try:\n        obj = _extract_object(name.split('.'), available_objects)\n    except (KeyError, AttributeError):\n        return\n\n    try:\n        path = getsourcefile(obj)\n        path_exists = Path(path).exists()\n        if not path_exists:\n            assert path.startswith('<ipython-input-')\n            input_number = int(path.split('-')[2])\n            path = None\n    except (TypeError, AssertionError):\n        path = None\n\n    try:\n        source, line_number = getsourcelines(obj)\n    except OSError:\n        line_number = 0\n\n    return {\n        'line_number': line_number,\n        'input_number': input_number,\n        'column': len(source[0]) - len(source[0].lstrip()),\n        **jupyter_lab_consumable_path(path)\n    }\n\nprint(json.dumps(_locate_definition('` +\n                value +\n                `')), end='')\n`);\n        }\n    }\n    referencePathQuery(context) {\n        let parts = this._imports_breadcrumbs(context);\n        let value = parts.join('.');\n        // TODO: recognize Python version and return no query (or another Python2-compatible query)\n        if (/^[a-zA-Z_.]+$/.test(value)) {\n            // just in case to prevent arbitrary execution\n            return (python_setup +\n                `\ndef _get_path(value):\n    \"\"\"Returns (path, is_sym_link) tuple\"\"\"\n    from importlib.util import find_spec\n\n    path = find_spec(value).origin\n\n    return jupyter_lab_consumable_path(path)\n\nprint(json.dumps(_get_path('` +\n                value +\n                `')), end='')\n`);\n        }\n    }\n    guessReferencePath(context) {\n        let parts = this._imports_breadcrumbs(context);\n        let prefix = parts.join('/');\n        return [prefix + '.py', PathExt.join(prefix, '__init__.py')];\n    }\n    // Matching `as`:\n    // e.g. `with open('name') as f:` or `except Exception as e:`\n    isWithStatement(context) {\n        let { previous } = context;\n        return (previous.exists && previous.type === 'keyword' && previous.value === 'as');\n    }\n    // Matching `for` loop and comprehensions:\n    isForLoopOrComprehension(context) {\n        let { previous, next } = context;\n        return (previous.exists &&\n            previous.type === 'keyword' &&\n            previous.value === 'for' &&\n            next.exists &&\n            next.type === 'keyword' &&\n            next.value === 'in');\n    }\n    isTupleUnpacking(context) {\n        // Matching variables in tuple unpacking:\n        let { tokens, index } = context;\n        // Considering: `a, [b, c], (d, ) = 1, [1, 2], (1,)`, if the tested\n        // token is `a`, then the next expected token would be a comma,\n        // and then one of following: a variable, an assignment symbol,\n        // or an opening bracket (for simplicity brackets can be ignored).\n        let commaExpected = true;\n        return evaluateSkippingBrackets(tokens, index + 1, (nextToken, indexShift) => {\n            if (nextToken.type === 'operator' && nextToken.value === '=') {\n                let lastToken;\n                evaluateSkippingBrackets(tokens, indexShift + 1, (nextToken) => {\n                    lastToken = nextToken;\n                });\n                // return true unless in a function call\n                if (!lastToken || lastToken.value !== ')') {\n                    return true;\n                }\n            }\n            if (commaExpected && nextToken.value !== ',') {\n                return false;\n            }\n            commaExpected = !commaExpected;\n        }, true);\n    }\n}\n//# sourceMappingURL=python.js.map","import { LanguageWithOptionalSemicolons } from './analyzer';\nexport class RAnalyzer extends LanguageWithOptionalSemicolons {\n    constructor() {\n        super(...arguments);\n        this.definitionRules = [\n            this.isStandaloneAssignment,\n            this.isImport,\n            this.isForLoop\n        ];\n    }\n    isAssignment(token) {\n        return ((token.type === 'operator' && token.value === '=') ||\n            (token.type === 'operator arrow' &&\n                (token.value === '<-' || token.value === '<<-')));\n    }\n    // Matching standalone variable assignment:\n    isStandaloneAssignment(context) {\n        let { previous, next } = context;\n        return (\n        // standard, leftwards assignments:\n        (next.exists && this.isAssignment(next)) ||\n            // rightwards assignments:\n            (previous.exists &&\n                previous.type === 'operator arrow' &&\n                (previous.value === '->' || previous.value === '->>')));\n    }\n    // Matching imports:\n    isImport(context) {\n        let { previous } = context;\n        if (previous.exists &&\n            previous.type === 'variable' &&\n            (previous.value === 'library' || previous.value === 'require')) {\n            return true;\n        }\n        previous = this.traverse_left(previous, ', ');\n        if (previous.exists &&\n            previous.value === 'here' &&\n            previous.type === 'variable' &&\n            previous.previous.value === '::' &&\n            previous.previous.previous.value === 'import') {\n            return true;\n        }\n        return false;\n    }\n    // Matching `for` loop and comprehensions:\n    isForLoop(context) {\n        let { previous, next } = context;\n        return (previous.exists &&\n            previous.type === 'keyword' &&\n            previous.value === 'for' &&\n            next.exists &&\n            next.type === 'keyword' &&\n            next.value === 'in');\n    }\n    guessReferencePath(context) {\n        let { next } = context;\n        if (context.value === 'source') {\n            return [next.next.value.slice(0, -1)];\n        }\n        // TODO for now only works when alt-clicking on \".from\"\n        // ideally clicking on the file name would be preferred\n        return [next.next.next.value.slice(0, -1)];\n    }\n    isCrossFileReference(context) {\n        // case: \"source('test.R')\" - clicking on source will open test.R\n        let { next } = context;\n        if (context.type === 'variable' &&\n            context.value === 'source' &&\n            next.exists &&\n            (next.value === \"'\" || next.value === '\"') &&\n            next.next.exists) {\n            return true;\n        }\n        if (this.isImport(context.previous)) {\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=r.js.map","import { PythonAnalyzer } from './python';\nimport { RAnalyzer } from './r';\nexport function chooseLanguageAnalyzer(language) {\n    switch (language) {\n        case 'python': {\n            return PythonAnalyzer;\n        }\n        case 'R': {\n            return RAnalyzer;\n        }\n        default: {\n            console.warn(language + ' is not supported yet by go-to-definition extension.');\n            // once there is C language support, it might be used as a default instead\n            return PythonAnalyzer;\n        }\n    }\n}\n//# sourceMappingURL=chooser.js.map","export class CodeMirrorTokensProvider {\n    constructor(editor) {\n        this.editor = editor;\n    }\n    getTokens() {\n        return this.editor.getTokens();\n    }\n    getTokenAt(offset) {\n        let position = this.editor.getPositionAt(offset);\n        return this.editor.getTokenForPosition(position);\n    }\n}\n//# sourceMappingURL=tokens.js.map","import CodeMirror from 'codemirror';\nimport { CodeMirrorTokensProvider } from './tokens';\nconst HANDLERS_ON = '_go_to_are_handlers_on';\nfunction getModifierState(event, modifierKey) {\n    // Note: Safari does not support getModifierState on MouseEvent, see:\n    // https://github.com/krassowski/jupyterlab-go-to-definition/issues/3\n    // thus AltGraph and others are not supported on Safari\n    // Full list of modifier keys and mappings to physical keys on different OSes:\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n    if (event.getModifierState !== undefined) {\n        return event.getModifierState(modifierKey);\n    }\n    switch (modifierKey) {\n        case 'Shift':\n            return event.shiftKey;\n        case 'Alt':\n            return event.altKey;\n        case 'Control':\n            return event.ctrlKey;\n        case 'Meta':\n            return event.metaKey;\n        default:\n            console.warn(`unknown modified key ${modifierKey}`);\n    }\n}\nexport class CodeMirrorExtension extends CodeMirrorTokensProvider {\n    constructor(editor, jumper) {\n        super(editor);\n        this.jumper = jumper;\n    }\n    static configure() {\n        // this option is used as a flag to determine if an instance of CodeMirror\n        // has been assigned with a handler\n        CodeMirror.defineOption(HANDLERS_ON, false, () => {\n            // nothing here yet\n        });\n    }\n    connect() {\n        let editor = this.editor.editor;\n        if (editor.getOption(HANDLERS_ON)) {\n            // this editor instance already has the event handler\n            return;\n        }\n        editor.setOption(HANDLERS_ON, true);\n        CodeMirror.on(editor, 'mousedown', (editor, event) => {\n            // codemirror_editor.addKeydownHandler()\n            let target = event.target;\n            const { button } = event;\n            if (button === 0 &&\n                getModifierState(event, CodeMirrorExtension.modifierKey)) {\n                const classes = ['cm-variable', 'cm-property'];\n                if (classes.indexOf(target.className) !== -1) {\n                    let lookupName = target.textContent;\n                    let token = this.selectToken(lookupName, target);\n                    this.jumper.jump_to_definition({\n                        token: token,\n                        mouseEvent: event,\n                        origin: target\n                    });\n                }\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        });\n    }\n    selectToken(lookupName, target) {\n        // Offset is needed to handle same-cell jumping.\n        // To get offset we could either derive it from the DOM\n        // or from the tokens. Tokens sound better, but there is\n        // no direct link between DOM and tokens.\n        // This can be worked around using:\n        //    CodeMirror.display.renderView.measure.map\n        // (see: https://stackoverflow.com/a/35937312/6646912)\n        // or by simply counting the number of tokens before.\n        // For completeness - using cursor does not work reliably:\n        // const cursor = this.getCursorPosition();\n        // const token = this.getTokenForPosition(cursor);\n        let cellTokens = this.editor.getTokens();\n        let typeFilterOn = target.className.includes('cm-variable') ||\n            target.className.includes('cm-property');\n        let lookupType = target.className.indexOf('cm-variable') !== -1 ? 'variable' : 'property';\n        let classFilter = 'cm-' + lookupType;\n        let usagesBeforeTarget = CodeMirrorExtension._countUsagesBefore(lookupName, target, classFilter, typeFilterOn);\n        // select relevant token\n        let token = null;\n        let matchedTokensCount = 0;\n        for (let j = 0; j < cellTokens.length; j++) {\n            let testedToken = cellTokens[j];\n            if (testedToken.value === lookupName &&\n                (!typeFilterOn || lookupType === testedToken.type)) {\n                matchedTokensCount += 1;\n                if (matchedTokensCount - 1 === usagesBeforeTarget) {\n                    token = testedToken;\n                    break;\n                }\n            }\n        }\n        // verify token\n        if (token.value !== lookupName) {\n            console.error(`Token ${token.value} does not match element ${lookupName}`);\n            // fallback\n            token = {\n                value: lookupName,\n                offset: 0,\n                type: lookupType\n            };\n        }\n        return token;\n    }\n    static _countUsagesBefore(lookupName, target, classFilter, classFilterOn) {\n        // count tokens with same value that occur before\n        // (not all the tokens - to reduce the hurdle of\n        // mapping DOM into tokens)\n        let usagesBeforeTarget = -1;\n        let sibling = target;\n        const root = sibling.getRootNode();\n        // usually should not exceed that level, but to prevent huge files from trashing the UI...\n        let max_iter = 10000;\n        function stop_condition(node) {\n            return (!node ||\n                (node.nodeType === 1 &&\n                    node.className.includes('CodeMirror-lines')));\n        }\n        while (!stop_condition(sibling) && !sibling.isEqualNode(root) && max_iter) {\n            if (sibling.textContent === lookupName &&\n                (!classFilterOn ||\n                    (sibling.nodeType === 1 &&\n                        sibling.className.includes(classFilter)))) {\n                usagesBeforeTarget += 1;\n            }\n            let nextSibling = sibling.previousSibling;\n            while (nextSibling == null) {\n                while (!sibling.previousSibling) {\n                    sibling = sibling.parentNode;\n                    if (stop_condition(sibling)) {\n                        return usagesBeforeTarget;\n                    }\n                }\n                sibling = sibling.previousSibling;\n                while (sibling.lastChild && sibling.textContent !== lookupName) {\n                    sibling = sibling.lastChild;\n                }\n                nextSibling = sibling;\n            }\n            sibling = nextSibling;\n            max_iter -= 1;\n        }\n        return usagesBeforeTarget;\n    }\n}\n//# sourceMappingURL=extension.js.map","import { chooseLanguageAnalyzer } from '../languages/chooser';\nimport { CodeMirrorExtension } from '../editors/codemirror';\nimport { Dialog, showDialog } from '@jupyterlab/apputils';\nfunction hasCellMagic(tokens) {\n    return (\n    // CodeMirror Python-tokenizer\n    (tokens.length >= 3 &&\n        tokens[0].value === '%' &&\n        tokens[1].value === '%') ||\n        // CodeMirror R-tokenizer: although IRkernel does not support magics,\n        // cell-magic recognition is still needed whe operating on an R-cell\n        // inside of IPython notebook.\n        (tokens.length >= 2 && tokens[0].value === '%%'));\n}\nconst cell_magic_lang_to_tokenizer = {\n    // on the right-hand side is the CodeMirror mode specification\n    // TODO: new class for mode spec?\n    bash: 'bash',\n    R: 'r',\n    python: 'python',\n    python2: { name: 'python', version: 2 },\n    python3: { name: 'python', version: 3 },\n    javascript: 'javascript',\n    js: 'javascript',\n    svg: 'application/xml',\n    html: 'text/html',\n    latex: 'text/x-stex'\n    // not working as for now:\n    // 'ruby': 'text/x-ruby',\n    // require additional logic/scripting:\n    // 'script': '',\n    // 'sh': '',\n};\nconst movement_keys = [\n    'ArrowRight',\n    'ArrowLeft',\n    'ArrowUp',\n    'ArrowDown',\n    'Home',\n    'End',\n    'PageUp',\n    'PageDown'\n];\nconst modifiers = ['Alt', 'AltGraph', 'Control', 'Shift'];\nconst system_keys = [\n    'F1',\n    'F2',\n    'F3',\n    'F4',\n    ' F5',\n    'F6',\n    'F7',\n    'F8',\n    'F9',\n    'F10',\n    'F11',\n    'F12',\n    'ContextMenu'\n];\nexport class CodeJumper {\n    _getLanguageAnalyzerForCell(cell_editor) {\n        let language = this.language;\n        // if a cell starts with %%[language] magic, use the other language:\n        let tokens = cell_editor.getTokens();\n        // TODO: move this out to a separate jupyterlab-extension?\n        //  this could be run after each change of cell content\n        if (hasCellMagic(tokens)) {\n            let magic_name = tokens[0].value === '%' ? tokens[2].value : tokens[1].value;\n            if (cell_magic_lang_to_tokenizer.hasOwnProperty(magic_name)) {\n                language = magic_name;\n                // to get properly parsed tokens for given language,\n                // force the CodeMirror tokenizer to use the corresponding mode\n                let cm = cell_editor;\n                cm.editor.setOption('mode', cell_magic_lang_to_tokenizer[language]);\n            }\n        }\n        let analyzerClass = chooseLanguageAnalyzer(language);\n        // TODO: make this dynamic, depending on editor implementation in use (like with languages)\n        let editor = new CodeMirrorExtension(cell_editor, this);\n        return new analyzerClass(editor);\n    }\n    /**\n     * Find the last definition of given variable.\n     */\n    _findLastDefinition(token, stopIndex) {\n        let definitionToken = null;\n        let definitionIndex = null;\n        const originToken = token;\n        for (let i = 0; i <= stopIndex; i++) {\n            let cell_editor = this.editors[i];\n            let analyzer = this._getLanguageAnalyzerForCell(cell_editor);\n            // try to find variable assignment\n            let definitions = analyzer.getDefinitions(token.value);\n            if (definitions.length) {\n                // Get definitions / assignments that appear before\n                // token of origin (are in an earlier cells or have lower offset),\n                let in_earlier_cell = i < stopIndex;\n                let filtered = in_earlier_cell\n                    ? definitions // all are in an earlier cell\n                    : definitions.filter(otherToken => otherToken.offset < originToken.offset); // all are in same cell\n                // but ignore ones that are part of the same assignment expression,\n                // for example in a cell like this:\n                // >>> a = 1\n                // >>> a = a + 1\n                // clicking on the last 'a' should jump to the first line,\n                // and not to beginning of the second line.\n                filtered = filtered.filter(otherToken => {\n                    // If otherToken is in previous cell, we don't need to worry.\n                    if (i < stopIndex) {\n                        return true;\n                    }\n                    return !analyzer.isTokenInSameAssignmentExpression(otherToken, token);\n                });\n                if (filtered.length) {\n                    definitionToken = filtered[filtered.length - 1];\n                    definitionIndex = i;\n                }\n                else if (!definitionToken && i === stopIndex) {\n                    // but if there is no definition at all, and we are in the last cell,\n                    // just return the token of origin (the clicked element), so the\n                    // editor will focus on the clicked element rather than ignore the\n                    // click altogether.\n                    definitionToken = token;\n                    definitionIndex = i;\n                }\n            }\n        }\n        return {\n            token: definitionToken,\n            cellIndex: definitionIndex\n        };\n    }\n    go_to_position(document_widget, jumper, column, line_number, input_number = 0) {\n        let document_jumper;\n        let position = { line: line_number, column: column };\n        let document_jumper_type = jumpers.get(jumper);\n        document_jumper = new document_jumper_type(document_widget, this.document_manager);\n        let jump_position = document_jumper.getJumpPosition(position, input_number);\n        document_jumper.jump(jump_position);\n    }\n    global_jump(position, is_symlink = false) {\n        let document_widget = this.document_manager.openOrReveal(position.uri);\n        document_widget.revealed\n            .then(() => {\n            this.go_to_position(document_widget, 'fileeditor', position.column, position.line, position.editor_index);\n            // protect external files from accidental edition\n            if (is_symlink) {\n                let editor_widget = document_widget;\n                editor_widget.title.label = editor_widget.title.label + ' (external)';\n                let editor = editor_widget.content.editor;\n                let disposable = editor.addKeydownHandler((editor, event) => {\n                    // allow to move around, select text and use modifiers & browser keys freely\n                    if (movement_keys.indexOf(event.key) !== -1 ||\n                        modifiers.indexOf(event.key) !== -1 ||\n                        system_keys.indexOf(event.key) !== -1) {\n                        return false;\n                    }\n                    // allow to copy text (here assuming that, as on majority of OSs, copy is associated with ctrl+c)\n                    // this is not foolproof, but should work in majority of sane settings (unfortunately, not in vim)\n                    if (event.key === 'c' && event.ctrlKey) {\n                        return false;\n                    }\n                    let dialog_promise = showDialog({\n                        title: 'Edit external file?',\n                        body: 'This file is located outside of the root of the JupyterLab start directory. ' +\n                            'do you really wish to edit it?',\n                        buttons: [\n                            Dialog.cancelButton({ label: 'Cancel' }),\n                            Dialog.warnButton({ label: 'Edit anyway' })\n                        ]\n                    });\n                    dialog_promise\n                        .then(result => {\n                        if (result.button.accept) {\n                            disposable.dispose();\n                        }\n                    })\n                        .catch(console.warn);\n                    // prevent default\n                    return true;\n                });\n            }\n        })\n            .catch(console.warn);\n    }\n    try_to_open_document(path, is_symlink, line_number = 0, input_number = null, column = 0) {\n        if (input_number && !path && this.constructor.name === 'NotebookJumper') {\n            // the definition is in this notebook\n            this.go_to_position(this.widget, 'notebook', column, line_number, input_number);\n        }\n        else {\n            this.document_manager.services.contents\n                .get(path, { content: false })\n                .then(() => {\n                this.global_jump({\n                    editor_index: input_number,\n                    line: line_number,\n                    column: column,\n                    uri: path\n                }, is_symlink);\n            })\n                .catch(() => {\n                // nothing here yet\n            });\n        }\n    }\n    handle_path_from_kernel(response, fallback_paths) {\n        let obj = response.content;\n        if (obj.name === 'stdout') {\n            let data = JSON.parse(obj.text);\n            this.try_to_open_document(data['path'], data['is_symlink']);\n        }\n        else if (response.header.msg_type === 'error') {\n            console.error('Failed to resolve the paths from kernel; falling back to guessing the path locations');\n            console.log(response);\n            for (let path of fallback_paths) {\n                this.try_to_open_document(path, false);\n            }\n        }\n    }\n    get kernel() {\n        return null;\n    }\n    queryKernel(code, kernel, callback) {\n        let request = { code: code, stop_on_error: false, silent: true };\n        let future = kernel.requestExecute(request);\n        future.onIOPub = callback;\n    }\n    jump_to_cross_file_reference(context, cell_of_origin_analyzer) {\n        let potential_paths = cell_of_origin_analyzer.guessReferencePath(context);\n        if (this.cwd) {\n            let prefixed_with_cwd = potential_paths.map(path => this.cwd + '/' + path);\n            potential_paths = prefixed_with_cwd.concat(potential_paths);\n        }\n        let code = cell_of_origin_analyzer.referencePathQuery(context);\n        if (cell_of_origin_analyzer.supportsKernel && this.kernel && code) {\n            this.queryKernel(code, this.kernel, msg => this.handle_path_from_kernel(msg, potential_paths) // TODO: extract fallback?\n            );\n        }\n        else {\n            // TODO: extract fallback?\n            // if kernel is not available, try use the guessed paths\n            // try one by one\n            for (let path of potential_paths) {\n                this.try_to_open_document(path, false);\n            }\n        }\n    }\n    handle_kernel_inspect(response, fallback) {\n        let obj = response.content;\n        if (obj.name === 'stdout') {\n            let data = JSON.parse(obj.text);\n            if (!data) {\n                // not a definition that the server can resolve, carry on\n                fallback();\n            }\n            let line_number = data['line_number'];\n            this.try_to_open_document(data['path'], data['is_symlink'], line_number - 1, data['input_number'], data['column']);\n        }\n        else if (response.header.msg_type === 'error') {\n            console.error('Failed to resolve the paths from kernel; falling back to guessing the path locations');\n            console.log(response);\n            fallback();\n        }\n    }\n    inspect_and_jump(context, cell_of_origin_analyzer, fallback, callback) {\n        let code = cell_of_origin_analyzer.definitionLocationQuery(context);\n        if (cell_of_origin_analyzer.supportsKernel && this.kernel && code) {\n            this.queryKernel(code, this.kernel, msg => this.handle_kernel_inspect(msg, fallback));\n        }\n        else {\n            fallback();\n        }\n        // TODO: rewrite with promises, make sure that we do not call callback if the jump failed\n        callback();\n    }\n}\nexport let jumpers = new Map();\n//# sourceMappingURL=jumper.js.map","const DB_ENTRY = 'jumpy_history';\nexport class JumpHistory {\n    constructor(model_db) {\n        this.model_db = model_db;\n    }\n    ensure_history_is_ready() {\n        if (this.jump_history === undefined) {\n            if (this.model_db.has(DB_ENTRY)) {\n                this.jump_history = this.model_db.get(DB_ENTRY);\n            }\n            else {\n                this.jump_history = this.model_db.createList(DB_ENTRY);\n            }\n        }\n    }\n    store(position) {\n        this.ensure_history_is_ready();\n        this.jump_history.push(JSON.stringify(position));\n    }\n    recollect() {\n        this.ensure_history_is_ready();\n        if (this.jump_history.length === 0) {\n            return;\n        }\n        let last_position = this.jump_history.get(this.jump_history.length - 1);\n        // being lazy here - undo addition instead of removal ;)\n        this.jump_history.undo();\n        return JSON.parse(last_position);\n    }\n}\n//# sourceMappingURL=history.js.map","import { CodeJumper, jumpers } from './jumper';\nimport { JumpHistory } from '../history';\nimport { TokenContext } from '../languages/analyzer';\nimport { PathExt } from '@jupyterlab/coreutils';\nexport class FileEditorJumper extends CodeJumper {\n    constructor(editor_widget, document_manager) {\n        super();\n        this.widget = editor_widget;\n        this.document_manager = document_manager;\n        this.editor = editor_widget.content;\n        this.history = new JumpHistory(this.editor.model.modelDB);\n        this.setLanguageFromMime(this.editor.model.mimeType);\n        this.editor.model.mimeTypeChanged.connect((session, mimeChanged) => {\n            this.setLanguageFromMime(mimeChanged.newValue);\n        });\n    }\n    get path() {\n        return this.widget.context.path;\n    }\n    get cwd() {\n        return PathExt.dirname(this.path);\n    }\n    setLanguageFromMime(mime) {\n        let type = mime.replace('text/x-', '');\n        switch (type) {\n            case 'rsrc':\n                this.language = 'R';\n                break;\n            default:\n                this.language = type;\n        }\n    }\n    get editors() {\n        return [this.editor.editor];\n    }\n    jump(jump_position) {\n        let { token } = jump_position;\n        // TODO: this is common\n        // place cursor in the line with the definition\n        let position = this.editor.editor.getPositionAt(token.offset);\n        this.editor.editor.setSelection({ start: position, end: position });\n        this.editor.editor.focus();\n    }\n    jump_to_definition(jump) {\n        let cell_of_origin_editor = this.editors[0];\n        let cell_of_origin_analyzer = this._getLanguageAnalyzerForCell(cell_of_origin_editor);\n        cell_of_origin_analyzer._maybe_setup_tokens();\n        let context = new TokenContext(jump.token, cell_of_origin_analyzer.tokens, cell_of_origin_analyzer._get_token_index(jump.token));\n        if (cell_of_origin_analyzer.isCrossFileReference(context)) {\n            this.jump_to_cross_file_reference(context, cell_of_origin_analyzer);\n        }\n        else {\n            let { token } = this._findLastDefinition(jump.token, 0);\n            // nothing found\n            if (!token) {\n                return;\n            }\n            this.history.store({ token: jump.token });\n            this.jump({ token: token });\n        }\n    }\n    jump_back() {\n        let previous_position = this.history.recollect();\n        if (previous_position) {\n            this.jump(previous_position);\n        }\n    }\n    getOffset(position) {\n        return this.editor.editor.getOffsetAt(position);\n    }\n    getJumpPosition(position) {\n        return {\n            token: {\n                offset: this.getOffset(position),\n                value: ''\n            },\n            index: 0\n        };\n    }\n}\njumpers.set('fileeditor', FileEditorJumper);\n//# sourceMappingURL=fileeditor.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\n/**\n * Ensure that the notebook has proper focus.\n */\nfunction _ensureFocus(notebook, force = false) {\n    let activeCell = notebook.activeCell;\n    if (notebook.mode === 'edit' && activeCell) {\n        if (!activeCell.editor.hasFocus()) {\n            activeCell.editor.focus();\n        }\n    }\n    if (force && !notebook.node.contains(document.activeElement)) {\n        notebook.node.focus();\n    }\n}\n/**\n * The class name added to notebook widget cells.\n */\nconst NB_CELL_CLASS = 'jp-Notebook-cell';\n/**\n * Find the cell index containing the target html element.\n *\n * #### Notes\n * Returns -1 if the cell is not found.\n */\nfunction _findCell(notebook, node) {\n    // Trace up the DOM hierarchy to find the root cell node.\n    // Then find the corresponding child and select it.\n    while (node && node !== notebook.node) {\n        if (node.classList.contains(NB_CELL_CLASS)) {\n            let i = ArrayExt.findFirstIndex(notebook.widgets, widget => widget.node === node);\n            if (i !== -1) {\n                return i;\n            }\n            break;\n        }\n        node = node.parentElement;\n    }\n    return -1;\n}\nfunction _findTargetCell(notebook, event) {\n    let target = event.target;\n    let index = _findCell(notebook, target);\n    if (index === -1) {\n        // `event.target` sometimes gives an orphaned node in\n        // Firefox 57, which can have `null` anywhere in its parent line. If we fail\n        // to find a cell using `event.target`, try again using a target\n        // reconstructed from the position of the click event.\n        target = document.elementFromPoint(event.clientX, event.clientY);\n        index = _findCell(notebook, target);\n    }\n    return { target: target, index: index };\n}\nexport { _ensureFocus, _findCell, _findTargetCell };\n//# sourceMappingURL=notebook_private.js.map","import { CodeJumper, jumpers } from './jumper';\nimport { _ensureFocus, _findCell, _findTargetCell } from '../notebook_private';\nimport { JumpHistory } from '../history';\nimport { TokenContext } from '../languages/analyzer';\nexport class NotebookJumper extends CodeJumper {\n    constructor(notebook_widget, document_manager) {\n        super();\n        this.widget = notebook_widget;\n        this.notebook = notebook_widget.content;\n        this.history = new JumpHistory(this.notebook.model.modelDB);\n        this.document_manager = document_manager;\n    }\n    get kernel() {\n        var _a;\n        return (_a = this.widget.context.sessionContext.session) === null || _a === void 0 ? void 0 : _a.kernel;\n    }\n    get cwd() {\n        return this.widget.model.modelDB.basePath\n            .split('/')\n            .slice(0, -1)\n            .join('/');\n    }\n    get editors() {\n        return this.notebook.widgets.map(cell => cell.editor);\n    }\n    get language() {\n        let languageInfo = this.notebook.model.metadata.get('language_info');\n        // TODO: consider version of the language as well\n        return languageInfo.name;\n    }\n    jump(position) {\n        let { token, index } = position;\n        // Prevents event propagation issues\n        setTimeout(() => {\n            this.notebook.deselectAll();\n            this.notebook.activeCellIndex = index;\n            _ensureFocus(this.notebook);\n            this.notebook.mode = 'edit';\n            // find out offset for the element\n            let activeEditor = this.notebook.activeCell.editor;\n            // place cursor in the line with the definition\n            let position = activeEditor.getPositionAt(token.offset);\n            activeEditor.setSelection({ start: position, end: position });\n        }, 0);\n    }\n    jump_to_definition(jump, index) {\n        if (index === undefined) {\n            // Using `index = this._findCell(editor.host)` does not work,\n            // as the host editor has not switched to the clicked cell yet.\n            // The mouse event is utilized to workaround Firefox's issue.\n            if (jump.mouseEvent !== undefined) {\n                index = _findTargetCell(this.notebook, jump.mouseEvent).index;\n            }\n            else {\n                index = _findCell(this.notebook, jump.origin);\n            }\n        }\n        // if the definition is in a different file:\n        // only support cases like:\n        //    \"from x import y\" (clicking on y opens x.py)\n        // or\n        //    \"y.x\" (clicking on y opens y.py)\n        let cell_of_origin_editor = this.editors[index];\n        let cell_of_origin_analyzer = this._getLanguageAnalyzerForCell(cell_of_origin_editor);\n        cell_of_origin_analyzer._maybe_setup_tokens();\n        let context = new TokenContext(jump.token, cell_of_origin_analyzer.tokens, cell_of_origin_analyzer._get_token_index(jump.token));\n        let after_jump = () => {\n            this.history.store({ token: jump.token, index: index });\n        };\n        if (cell_of_origin_analyzer.isCrossFileReference(context)) {\n            this.jump_to_cross_file_reference(context, cell_of_origin_analyzer);\n        }\n        else {\n            // try to get the location of definition from the kernel (for Python - using inspect)\n            // if has location:\n            // open tab with the file\n            this.inspect_and_jump(context, cell_of_origin_analyzer, () => {\n                // TODO when reassigning objects:\n                //   def xyz(): pass\n                //   a = xyz\n                //   x = a\n                //  click on the last 'a' will lead to a jump to 'def xyz(): pass' instead to 'a = xyz'\n                //  when using kernel for resolution. This may not be the expected behaviour!\n                //  maybe we should first try to _findLastDefinition and only jump with kernel if none found\n                //  (plus as an option - when user presses a different combination, it could be labeled \"deep jump\")\n                // if it fails, jump to the last definition in the current notebook:\n                let { token, cellIndex } = this._findLastDefinition(jump.token, index);\n                // nothing found\n                if (!token) {\n                    return;\n                }\n                this.jump({ token: token, index: cellIndex });\n            }, after_jump);\n        }\n    }\n    jump_back() {\n        let previous_position = this.history.recollect();\n        if (previous_position) {\n            this.jump(previous_position);\n        }\n    }\n    getOffset(position, cell = 0) {\n        return this.editors[cell].getOffsetAt(position);\n    }\n    getJumpPosition(position, input_number) {\n        let cells = this.widget.model.cells.iter();\n        let cell = cells.next();\n        let i = 0;\n        let cell_index;\n        while (cell) {\n            if (cell.type === 'code') {\n                let code_cell = cell;\n                if (code_cell.executionCount === input_number) {\n                    cell_index = i;\n                    break;\n                }\n            }\n            cell = cells.next();\n            i += 1;\n        }\n        // TODO: what if we cannot get the cell index?\n        return {\n            token: {\n                offset: this.getOffset(position, cell_index),\n                value: ''\n            },\n            index: cell_index\n        };\n    }\n}\njumpers.set('notebook', NotebookJumper);\n//# sourceMappingURL=notebook.js.map","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./statusbar.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n// Based on the @jupyterlab/codemirror-extension statusbar\nimport React from 'react';\nimport { VDomRenderer } from '@jupyterlab/apputils';\nimport { GroupItem, item, TextItem } from '@jupyterlab/statusbar';\nimport '../../../../style/statusbar.css';\n/**\n * StatusBar item.\n */\nexport class KiteStatus extends VDomRenderer {\n    /**\n     * Construct a new VDomRenderer for the status item.\n     */\n    constructor(model) {\n        super(model);\n        this.addClass(item);\n        this.addClass('kite-statusbar-item');\n        this.title.caption = 'Kite Status';\n    }\n    /**\n     * Render the status item.\n     */\n    render() {\n        if (!this.model) {\n            return null;\n        }\n        const activeDocument = this.model.activeDocument;\n        if (activeDocument && !(activeDocument.file_extension === 'py')) {\n            this.setHidden(true);\n            return null;\n        }\n        this.model.fetchKiteInstalled();\n        const props = {};\n        if (this.model.reloadRequired) {\n            props.style = { cursor: 'pointer' };\n            props.onClick = () => window.location.reload();\n        }\n        return (React.createElement(GroupItem, Object.assign({}, props, { spacing: 4, title: this.model.message.tooltip }),\n            React.createElement(this.model.icon.react, { top: '2px', kind: 'statusBar' }),\n            React.createElement(TextItem, { source: this.model.message.text })));\n    }\n}\n//# sourceMappingURL=statusbar.js.map","export var ILanguageServerManager;\n(function (ILanguageServerManager) {\n    ILanguageServerManager.URL_NS = 'lsp';\n})(ILanguageServerManager || (ILanguageServerManager = {}));\n//# sourceMappingURL=tokens.js.map","export default \"<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 400 400\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <g id=\\\"kite-logo\\\" transform=\\\"translate(53,14)\\\">\\n        <polygon id=\\\"Path\\\" points=\\\"150.433658 147.335971 90.1889836 260.668594 221.53804 372.861838 264.798844 205.622337 150.433658 147.335971\\\"></polygon>\\n        <polygon id=\\\"Path\\\" points=\\\"104.003956 0 0 183.653682 79.7565429 251.767194 146.303408 134.23311 268.252587 192.341449 294.529519 90.7942788 104.003956 0\\\"></polygon>\\n    </g>\\n</svg>\";","import { VDomModel } from '@jupyterlab/apputils';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { ILanguageServerManager } from '../../../tokens';\nimport kiteLogo from '../../../../style/icons/kite-logo.svg';\n/**\n * A VDomModel for the LSP of current file editor/notebook.\n */\nexport class KiteStatusModel extends VDomModel {\n    constructor() {\n        super();\n        this._icon = new LabIcon({\n            name: 'jupyterlab-kite:status-icon',\n            svgstr: kiteLogo\n        });\n        this._kiteStatus = null;\n        this._installed = true;\n        this._disconnected = false;\n        this._connectionClosed = () => {\n            this._disconnected = true;\n            this._onChange();\n        };\n        this._onChange = () => {\n            this.stateChanged.emit(void 0);\n        };\n        this._adapter = null;\n        this.icon.bindprops({ className: 'kite-logo' });\n    }\n    async fetchKiteInstalled() {\n        if (this._disconnected) {\n            return;\n        }\n        const response = await ServerConnection.makeRequest(this.kiteInstalledUrl, { method: 'GET' }, ServerConnection.makeSettings());\n        if (!response.ok) {\n            console.warn('Could not fetch Kite Install status:', response.statusText);\n        }\n        let installed;\n        try {\n            installed = await response.json();\n            if (this._installed !== installed) {\n                this._installed = installed;\n                this._onChange();\n            }\n        }\n        catch (err) {\n            console.warn(err);\n        }\n    }\n    get kiteInstalledUrl() {\n        return URLExt.join(PageConfig.getBaseUrl(), ILanguageServerManager.URL_NS, 'kite_installed');\n    }\n    set status(status) {\n        this._kiteStatus = status;\n        this._onChange();\n    }\n    get icon() {\n        return this._icon;\n    }\n    get reloadRequired() {\n        return this._disconnected;\n    }\n    get message() {\n        if (this._disconnected) {\n            return {\n                text: 'Kite: disconnected (reload page)',\n                tooltip: 'The connection to Kite was interrupted. Save your changes and reload the page to reconnect.',\n            };\n        }\n        // If we have a _kiteStatus, Kite must be conidered installed.\n        // This makes dev workflows work better.\n        if (this.adapter && this._kiteStatus) {\n            return {\n                text: 'Kite: ' + this._kiteStatus.short,\n                tooltip: this._kiteStatus.long,\n            };\n        }\n        if (!this._installed) {\n            return {\n                text: 'Kite: not installed',\n                tooltip: 'Kite install could not be found.',\n            };\n        }\n        return {\n            text: 'Kite: not running',\n            tooltip: 'Kite is not reachable.',\n        };\n    }\n    get adapter() {\n        return this._adapter;\n    }\n    set adapter(adapter) {\n        if (this._adapter != null) {\n            this._adapter.status_message.changed.connect(this._onChange);\n        }\n        if (adapter != null) {\n            adapter.status_message.changed.connect(this._onChange);\n        }\n        this._adapter = adapter;\n    }\n    get connection_manager() {\n        return this._connection_manager;\n    }\n    set connection_manager(connection_manager) {\n        if (this._connection_manager != null) {\n            this._connection_manager.connected.disconnect(this._onChange);\n            this._connection_manager.initialized.connect(this._onChange);\n            this._connection_manager.closed.disconnect(this._connectionClosed);\n            this._connection_manager.documents_changed.disconnect(this._onChange);\n        }\n        if (connection_manager != null) {\n            connection_manager.connected.connect(this._onChange);\n            connection_manager.initialized.connect(this._onChange);\n            connection_manager.closed.connect(this._connectionClosed);\n            connection_manager.documents_changed.connect(this._onChange);\n        }\n        this._connection_manager = connection_manager;\n    }\n    get activeDocument() {\n        if (this.adapter && this.adapter.virtual_editor) {\n            return this.adapter.virtual_editor.virtual_document;\n        }\n        return undefined;\n    }\n    get activeConnection() {\n        if (this.activeDocument) {\n            return this.connection_manager.connections.get(this.activeDocument.id_path);\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=status_model.js.map","class MagicsMap extends Map {\n    constructor(magic_overrides) {\n        super(magic_overrides.map(m => [new RegExp(m.pattern), m.replacement]));\n    }\n    _override_for(code) {\n        for (let [key, value] of this) {\n            if (code.match(key)) {\n                // @ts-ignore\n                return code.replace(key, value);\n            }\n        }\n        return null;\n    }\n}\nclass ReversibleMagicsMap extends MagicsMap {\n    constructor(magic_overrides) {\n        super(magic_overrides);\n        this.overrides = magic_overrides;\n    }\n    get reverse() {\n        return this.type(this.overrides.map(override => override.reverse));\n    }\n}\nexport class CellMagicsMap extends ReversibleMagicsMap {\n    type(overrides) {\n        return new CellMagicsMap(overrides);\n    }\n    override_for(cell) {\n        return super._override_for(cell);\n    }\n}\nexport class LineMagicsMap extends ReversibleMagicsMap {\n    type(overrides) {\n        return new LineMagicsMap(overrides);\n    }\n    override_for(line) {\n        return super._override_for(line);\n    }\n    replace_all(raw_lines, map = this) {\n        let substituted_lines = new Array();\n        let skip_inspect = new Array();\n        for (let i = 0; i < raw_lines.length; i++) {\n            let line = raw_lines[i];\n            let override = map.override_for(line);\n            substituted_lines.push(override == null ? line : override);\n            skip_inspect.push(override != null);\n        }\n        return {\n            lines: substituted_lines,\n            skip_inspect: skip_inspect\n        };\n    }\n    reverse_replace_all(raw_lines) {\n        return this.replace_all(raw_lines, this.reverse).lines;\n    }\n}\n//# sourceMappingURL=maps.js.map","import { Signal } from '@lumino/signaling';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { sleep, until_ready } from './utils';\nimport { ILanguageServerManager } from './tokens';\n/**\n * Each Widget with a document (whether file or a notebook) has its own DocumentConnectionManager\n * (see JupyterLabWidgetAdapter), keeping the virtual document spaces separate if a file is opened twice.\n */\nexport class DocumentConnectionManager {\n    constructor(options) {\n        /**\n         * Fired the first time a connection is opened. These _should_ be the only\n         * invocation of `.on` (once remaining LSPFeature.connection_handlers are made\n         * singletons).\n         */\n        this.on_new_connection = (connection) => {\n            connection.on('error', e => {\n                console.warn(e);\n                // TODO invalid now\n                let error = e.length && e.length >= 1 ? e[0] : new Error();\n                // TODO: those codes may be specific to my proxy client, need to investigate\n                if (error.message.indexOf('code = 1005') !== -1) {\n                    console.warn(`LSP: Connection failed for ${connection}`);\n                }\n                else if (error.message.indexOf('code = 1006') !== -1) {\n                    console.warn('LSP: Connection closed by the server ');\n                }\n                else {\n                    console.error('LSP: Connection error:', e);\n                }\n                this.forEachDocumentOfConnection(connection, virtual_document => {\n                    console.warn('LSP: disconnecting ' + virtual_document.id_path);\n                    this.closed.emit({ connection, virtual_document });\n                    this.ignored_languages.add(virtual_document.language);\n                    console.warn(`Cancelling further attempts to connect ${virtual_document.id_path} and other documents for this language (no support from the server)`);\n                });\n            });\n            connection.on('serverInitialized', capabilities => {\n                this.forEachDocumentOfConnection(connection, virtual_document => {\n                    // TODO: is this still neccessary, e.g. for status bar to update responsively?\n                    this.initialized.emit({ connection, virtual_document });\n                });\n            });\n            connection.on('close', closed_manually => {\n                if (!closed_manually) {\n                    console.warn('LSP: Connection unexpectedly disconnected');\n                }\n                else {\n                    console.warn('LSP: Connection closed');\n                    this.forEachDocumentOfConnection(connection, virtual_document => {\n                        this.closed.emit({ connection, virtual_document });\n                    });\n                }\n            });\n        };\n        this.connections = new Map();\n        this.documents = new Map();\n        this.ignored_languages = new Set();\n        this.connected = new Signal(this);\n        this.initialized = new Signal(this);\n        this.closed = new Signal(this);\n        this.documents_changed = new Signal(this);\n        this.language_server_manager = options.language_server_manager;\n        this.kite_status_model = options.kite_status_model;\n        Private.setLanguageServerManager(options.language_server_manager);\n    }\n    connect_document_signals(virtual_document) {\n        virtual_document.foreign_document_opened.connect(this.on_foreign_document_opened, this);\n        virtual_document.foreign_document_closed.connect(this.on_foreign_document_closed, this);\n        this.documents.set(virtual_document.id_path, virtual_document);\n        this.documents_changed.emit(this.documents);\n    }\n    disconnect_document_signals(virtual_document, emit = true) {\n        virtual_document.foreign_document_opened.disconnect(this.on_foreign_document_opened, this);\n        virtual_document.foreign_document_closed.disconnect(this.on_foreign_document_closed, this);\n        this.documents.delete(virtual_document.id_path);\n        for (const foreign of virtual_document.foreign_documents.values()) {\n            this.disconnect_document_signals(foreign, false);\n        }\n        if (emit) {\n            this.documents_changed.emit(this.documents);\n        }\n    }\n    on_foreign_document_opened(_host, context) {\n        console.log('LSP: ConnectionManager received foreign document: ', context.foreign_document.id_path);\n    }\n    on_foreign_document_closed(_host, context) {\n        const { foreign_document } = context;\n        this.disconnect_document_signals(foreign_document);\n    }\n    async connect_socket(options) {\n        console.log('LSP: Connection Socket', options);\n        let { virtual_document, language } = options;\n        this.connect_document_signals(virtual_document);\n        const uris = DocumentConnectionManager.solve_uris(virtual_document, language);\n        const language_server_id = this.language_server_manager.getServerId({\n            language\n        });\n        // lazily load 1) the underlying library (1.5mb) and/or 2) a live WebSocket-\n        // like connection: either already connected or potentiailly in the process\n        // of connecting.\n        const connection = await Private.connection(language, language_server_id, uris, this.on_new_connection, this.kite_status_model);\n        // if connecting for the first time, all documents subsequent documents will\n        // be re-opened and synced\n        this.connections.set(virtual_document.id_path, connection);\n        return connection;\n    }\n    forEachDocumentOfConnection(connection, callback) {\n        for (const [virtual_document_id_path, a_connection] of this.connections.entries()) {\n            if (connection !== a_connection) {\n                continue;\n            }\n            const document = this.documents.get(virtual_document_id_path);\n            if (document) {\n                callback(document);\n            }\n        }\n    }\n    /**\n     * TODO: presently no longer referenced. A failing connection would close\n     * the socket, triggering the language server on the other end to exit\n     */\n    async retry_to_connect(options, reconnect_delay, retrials_left = -1) {\n        let { virtual_document } = options;\n        if (this.ignored_languages.has(virtual_document.language)) {\n            return;\n        }\n        let interval = reconnect_delay * 1000;\n        let success = false;\n        while (retrials_left !== 0 && !success) {\n            await this.connect(options)\n                .then(() => {\n                success = true;\n            })\n                .catch(e => {\n                console.warn(e);\n            });\n            console.log('LSP: will attempt to re-connect in ' + interval / 1000 + ' seconds');\n            await sleep(interval);\n            // gradually increase the time delay, up to 5 sec\n            interval = interval < 5 * 1000 ? interval + 500 : interval;\n        }\n    }\n    async connect(options) {\n        console.log('LSP: connection requested', options);\n        let connection = await this.connect_socket(options);\n        let { virtual_document, document_path } = options;\n        if (!connection.isReady) {\n            try {\n                await until_ready(() => connection.isReady, 200, 200);\n            }\n            catch (_a) {\n                console.warn(`LSP: Connect timed out for ${virtual_document.id_path}`);\n                return;\n            }\n        }\n        console.log('LSP:', document_path, virtual_document.id_path, 'connected.');\n        this.connected.emit({ connection, virtual_document });\n        return connection;\n    }\n    unregister_document(virtual_document) {\n        this.connections.delete(virtual_document.id_path);\n        this.documents_changed.emit(this.documents);\n    }\n}\n(function (DocumentConnectionManager) {\n    function solve_uris(virtual_document, language) {\n        const wsBase = PageConfig.getBaseUrl().replace(/^http/, 'ws');\n        const rootUri = PageConfig.getOption('rootUri');\n        const virtualDocumentsUri = PageConfig.getOption('virtualDocumentsUri');\n        const baseUri = virtual_document.has_lsp_supported_file\n            ? rootUri\n            : virtualDocumentsUri;\n        const language_server_id = Private.getLanguageServerManager().getServerId({\n            language\n        });\n        return {\n            base: baseUri,\n            document: URLExt.join(baseUri, virtual_document.uri),\n            server: URLExt.join('ws://jupyter-kite', language),\n            socket: URLExt.join(wsBase, ILanguageServerManager.URL_NS, 'ws', language_server_id)\n        };\n    }\n    DocumentConnectionManager.solve_uris = solve_uris;\n})(DocumentConnectionManager || (DocumentConnectionManager = {}));\n/**\n * Namespace primarily for language-keyed cache of LSPConnections\n */\nvar Private;\n(function (Private) {\n    const _connections = new Map();\n    let _promise;\n    let _language_server_manager;\n    function getLanguageServerManager() {\n        return _language_server_manager;\n    }\n    Private.getLanguageServerManager = getLanguageServerManager;\n    function setLanguageServerManager(language_server_manager) {\n        _language_server_manager = language_server_manager;\n    }\n    Private.setLanguageServerManager = setLanguageServerManager;\n    /**\n     * Return (or create and initialize) the WebSocket associated with the language\n     */\n    async function connection(language, language_server_id, uris, onCreate, kite_status_model) {\n        if (_promise == null) {\n            // TODO: consider lazy-loading _only_ the modules that _must_ be webpacked\n            // with custom shims, e.g. `fs`\n            _promise = import(\n            /* webpackChunkName: \"jupyter-lsp-connection\" */ './connection');\n        }\n        const { LSPConnection } = await _promise;\n        let connection = _connections.get(language_server_id);\n        if (connection == null) {\n            const socket = new WebSocket(uris.socket);\n            const connection = new LSPConnection({\n                languageId: language,\n                serverUri: uris.server,\n                rootUri: uris.base,\n                kite_status_model: kite_status_model\n            });\n            // TODO: remove remaining unbounded users of connection.on\n            connection.setMaxListeners(999);\n            _connections.set(language_server_id, connection);\n            connection.connect(socket);\n            onCreate(connection);\n        }\n        connection = _connections.get(language_server_id);\n        return connection;\n    }\n    Private.connection = connection;\n})(Private || (Private = {}));\n//# sourceMappingURL=connection_manager.js.map","import { CellMagicsMap, LineMagicsMap } from '../magics/maps';\nimport { DefaultMap } from '../utils';\nimport { Signal } from '@lumino/signaling';\nimport { DocumentConnectionManager } from '../connection_manager';\n/**\n * Check if given position is within range.\n * Both start and end are inclusive.\n * @param position\n * @param range\n */\nexport function is_within_range(position, range) {\n    if (range.start.line === range.end.line) {\n        return (position.line === range.start.line &&\n            position.column >= range.start.column &&\n            position.column <= range.end.column);\n    }\n    return ((position.line === range.start.line &&\n        position.column >= range.start.column &&\n        position.line < range.end.line) ||\n        (position.line > range.start.line &&\n            position.column <= range.end.column &&\n            position.line === range.end.line) ||\n        (position.line > range.start.line && position.line < range.end.line));\n}\n/**\n * a virtual implementation of IDocumentInfo\n */\nexport class VirtualDocumentInfo {\n    constructor(document) {\n        this.version = 0;\n        this._document = document;\n    }\n    get text() {\n        return this._document.value;\n    }\n    get uri() {\n        const uris = DocumentConnectionManager.solve_uris(this._document, this.languageId);\n        return uris.document;\n    }\n    get languageId() {\n        return this._document.language;\n    }\n}\n/**\n * A notebook can hold one or more virtual documents; there is always one,\n * \"root\" document, corresponding to the language of the kernel. All other\n * virtual documents are extracted out of the notebook, based on magics,\n * or other syntax constructs, depending on the kernel language.\n *\n * Virtual documents represent the underlying code in a single language,\n * which has been parsed excluding interactive kernel commands (magics)\n * which could be misunderstood by the specific LSP server.\n *\n * VirtualDocument has no awareness of the notebook or editor it lives in,\n * however it is able to transform its content back to the notebook space,\n * as it keeps editor coordinates for each virtual line.\n *\n * The notebook/editor aware transformations are preferred to be placed in\n * VirtualEditor descendants rather than here.\n */\nexport class VirtualDocument {\n    constructor(language, path, overrides_registry, foreign_code_extractors, standalone, file_extension, has_lsp_supported_file, parent) {\n        this.path = path;\n        this.file_extension = file_extension;\n        this.has_lsp_supported_file = has_lsp_supported_file;\n        this.parent = parent;\n        this.isDisposed = false;\n        // TODO: make this configurable, depending on the language used\n        this.blank_lines_between_cells = 2;\n        this.language = language;\n        let overrides = language in overrides_registry ? overrides_registry[language] : null;\n        this.cell_magics_overrides = new CellMagicsMap(overrides ? overrides.cell_magics : []);\n        this.line_magics_overrides = new LineMagicsMap(overrides ? overrides.line_magics : []);\n        this.foreign_extractors_registry = foreign_code_extractors;\n        this.foreign_extractors =\n            this.language in this.foreign_extractors_registry\n                ? this.foreign_extractors_registry[this.language]\n                : [];\n        this.virtual_lines = new Map();\n        this.source_lines = new Map();\n        this.foreign_documents = new Map();\n        this.overrides_registry = overrides_registry;\n        this.standalone = standalone;\n        this.instance_id = VirtualDocument.instances_count;\n        VirtualDocument.instances_count += 1;\n        this.unused_standalone_documents = new DefaultMap(() => new Array());\n        this._remaining_lifetime = 10;\n        this.foreign_document_closed = new Signal(this);\n        this.foreign_document_opened = new Signal(this);\n        this.changed = new Signal(this);\n        this.unused_documents = new Set();\n        this.document_info = new VirtualDocumentInfo(this);\n        this.clear();\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.parent = null;\n        for (const doc of this.foreign_documents.values()) {\n            doc.dispose();\n        }\n        this.close_all_foreign_documents();\n        // clear all the maps\n        this.foreign_documents.clear();\n        this.source_lines.clear();\n        this.unused_documents.clear();\n        this.unused_standalone_documents.clear();\n        this.virtual_lines.clear();\n        // just to be sure\n        this.cell_magics_overrides = null;\n        this.document_info = null;\n        this.foreign_extractors = null;\n        this.foreign_extractors_registry = null;\n        this.line_magics_overrides = null;\n        this.lines = null;\n        this.overrides_registry = null;\n        // actually disposed now\n        this.isDisposed = true;\n    }\n    /**\n     * When this counter goes down to 0, the document will be destroyed and the associated connection will be closed;\n     * This is meant to reduce the number of open connections when a a foreign code snippet was removed from the document.\n     *\n     * Note: top level virtual documents are currently immortal (unless killed by other means); it might be worth\n     * implementing culling of unused documents, but if and only if JupyterLab will also implement culling of\n     * idle kernels - otherwise the user experience could be a bit inconsistent, and we would need to invent our own rules.\n     */\n    get remaining_lifetime() {\n        if (!this.parent) {\n            return Infinity;\n        }\n        return this._remaining_lifetime;\n    }\n    set remaining_lifetime(value) {\n        if (this.parent) {\n            this._remaining_lifetime = value;\n        }\n    }\n    clear() {\n        // TODO - deep clear (assure that there is no memory leak)\n        this.unused_standalone_documents.clear();\n        for (let document of this.foreign_documents.values()) {\n            document.clear();\n            if (document.standalone) {\n                // once the standalone document was cleared, we may want to remove it and close connection;\n                // but wait, this is a waste of resources (opening a connection takes 1-3 seconds) and,\n                // since this is cleaned anyway, we could use it for another standalone document of the same language.\n                let set = this.unused_standalone_documents.get(document.language);\n                set.push(document);\n            }\n        }\n        this.unused_documents = new Set(this.foreign_documents.values());\n        this.virtual_lines.clear();\n        this.source_lines.clear();\n        this.last_virtual_line = 0;\n        this.last_source_line = 0;\n        this.lines = [];\n    }\n    forward_closed_signal(host, context) {\n        this.foreign_document_closed.emit(context);\n    }\n    forward_opened_signal(host, context) {\n        this.foreign_document_opened.emit(context);\n    }\n    // TODO: what could be refactored into \"ForeignDocumentsManager\" has started to emerge;\n    //   we should consider refactoring later on.\n    open_foreign(language, standalone, file_extension) {\n        let document = new VirtualDocument(language, this.path, this.overrides_registry, this.foreign_extractors_registry, standalone, file_extension, false, this);\n        const context = {\n            foreign_document: document,\n            parent_host: this\n        };\n        this.foreign_document_opened.emit(context);\n        // pass through any future signals\n        document.foreign_document_closed.connect(this.forward_closed_signal, this);\n        document.foreign_document_opened.connect(this.forward_opened_signal, this);\n        this.foreign_documents.set(document.virtual_id, document);\n        return document;\n    }\n    document_at_source_position(position) {\n        let source_line = this.source_lines.get(position.line);\n        if (source_line == null) {\n            return this;\n        }\n        let source_position_ce = {\n            line: source_line.editor_line,\n            column: position.ch\n        };\n        for (let [range, { virtual_document: document }] of source_line.foreign_documents_map) {\n            if (is_within_range(source_position_ce, range)) {\n                let source_position_cm = {\n                    line: source_position_ce.line - range.start.line,\n                    ch: source_position_ce.column - range.start.column\n                };\n                return document.document_at_source_position(source_position_cm);\n            }\n        }\n        return this;\n    }\n    is_within_foreign(source_position) {\n        let source_line = this.source_lines.get(source_position.line);\n        let source_position_ce = {\n            line: source_line.editor_line,\n            column: source_position.ch\n        };\n        for (let [range] of source_line.foreign_documents_map) {\n            if (is_within_range(source_position_ce, range)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    virtual_position_at_document(source_position) {\n        let source_line = this.source_lines.get(source_position.line);\n        let virtual_line = source_line.virtual_line;\n        // position inside the cell (block)\n        let source_position_ce = {\n            line: source_line.editor_line,\n            column: source_position.ch\n        };\n        for (let [range, { virtual_line, virtual_document: document }] of source_line.foreign_documents_map) {\n            if (is_within_range(source_position_ce, range)) {\n                // position inside the foreign document block\n                let source_position_cm = {\n                    line: source_position_ce.line - range.start.line,\n                    ch: source_position_ce.column - range.start.column\n                };\n                if (document.is_within_foreign(source_position_cm)) {\n                    return this.virtual_position_at_document(source_position_cm);\n                }\n                else {\n                    // where in this block in the entire foreign document?\n                    source_position_cm.line += virtual_line;\n                    return source_position_cm;\n                }\n            }\n        }\n        return {\n            ch: source_position.ch,\n            line: virtual_line\n        };\n    }\n    choose_foreign_document(extractor) {\n        let foreign_document;\n        // if not standalone, try to append to existing document\n        let foreign_exists = this.foreign_documents.has(extractor.language);\n        if (!extractor.standalone && foreign_exists) {\n            foreign_document = this.foreign_documents.get(extractor.language);\n            this.unused_documents.delete(foreign_document);\n        }\n        else {\n            // if standalone, try to re-use existing connection to the server\n            let unused_standalone = this.unused_standalone_documents.get(extractor.language);\n            if (extractor.standalone && unused_standalone.length > 0) {\n                foreign_document = unused_standalone.pop();\n                this.unused_documents.delete(foreign_document);\n            }\n            else {\n                // if (previous document does not exists) or (extractor produces standalone documents\n                // and no old standalone document could be reused): create a new document\n                foreign_document = this.open_foreign(extractor.language, extractor.standalone, extractor.file_extension);\n            }\n        }\n        return foreign_document;\n    }\n    extract_foreign_code(cell_code, cm_editor, editor_shift) {\n        let foreign_document_map = new Map();\n        for (let extractor of this.foreign_extractors) {\n            // first, check if there is any foreign code:\n            if (!extractor.has_foreign_code(cell_code)) {\n                continue;\n            }\n            let results = extractor.extract_foreign_code(cell_code);\n            let kept_cell_code = '';\n            for (let result of results) {\n                if (result.foreign_code !== null) {\n                    let foreign_document = this.choose_foreign_document(extractor);\n                    foreign_document_map.set(result.range, {\n                        virtual_line: foreign_document.last_virtual_line,\n                        virtual_document: foreign_document\n                    });\n                    let foreign_shift = {\n                        line: editor_shift.line + result.range.start.line,\n                        column: editor_shift.column + result.range.start.column\n                    };\n                    foreign_document.append_code_block(result.foreign_code, cm_editor, foreign_shift, result.virtual_shift);\n                }\n                if (result.host_code != null) {\n                    kept_cell_code += result.host_code;\n                }\n            }\n            // not breaking - many extractors are allowed to process the code, one after each other\n            // (think JS and CSS in HTML, or %R inside of %%timeit).\n            cell_code = kept_cell_code;\n        }\n        return { cell_code_kept: cell_code, foreign_document_map };\n    }\n    decode_code_block(raw_code) {\n        // TODO: add back previously extracted foreign code\n        let cell_override = this.cell_magics_overrides.reverse.override_for(raw_code);\n        if (cell_override != null) {\n            return cell_override;\n        }\n        else {\n            let lines = this.line_magics_overrides.reverse_replace_all(raw_code.split('\\n'));\n            return lines.join('\\n');\n        }\n    }\n    prepare_code_block(cell_code, cm_editor, editor_shift = { line: 0, column: 0 }) {\n        let lines;\n        let skip_inspect;\n        let { cell_code_kept, foreign_document_map } = this.extract_foreign_code(cell_code, cm_editor, editor_shift);\n        cell_code = cell_code_kept;\n        // cell magics are replaced if requested and matched\n        let cell_override = this.cell_magics_overrides.override_for(cell_code);\n        if (cell_override != null) {\n            lines = cell_override.split('\\n');\n            skip_inspect = lines.map(l => [this.id_path]);\n        }\n        else {\n            // otherwise, we replace line magics - if any\n            let result = this.line_magics_overrides.replace_all(cell_code.split('\\n'));\n            lines = result.lines;\n            skip_inspect = result.skip_inspect.map(skip => skip ? [this.id_path] : []);\n        }\n        return { lines, foreign_document_map, skip_inspect };\n    }\n    append_code_block(cell_code, cm_editor, editor_shift = { line: 0, column: 0 }, virtual_shift) {\n        var _a, _b;\n        let source_cell_lines = cell_code.split('\\n');\n        let { lines, foreign_document_map, skip_inspect } = this.prepare_code_block(cell_code, cm_editor, editor_shift);\n        for (let i = 0; i < lines.length; i++) {\n            this.virtual_lines.set(this.last_virtual_line + i, {\n                skip_inspect: skip_inspect[i],\n                editor: cm_editor,\n                // TODO this is incorrect, wont work if something was extracted\n                source_line: this.last_source_line + i\n            });\n        }\n        for (let i = 0; i < source_cell_lines.length; i++) {\n            this.source_lines.set(this.last_source_line + i, {\n                editor_line: i,\n                editor_shift: {\n                    line: editor_shift.line - (((_a = virtual_shift) === null || _a === void 0 ? void 0 : _a.line) || 0),\n                    column: i === 0 ? editor_shift.column - (((_b = virtual_shift) === null || _b === void 0 ? void 0 : _b.column) || 0) : 0\n                },\n                // TODO: move those to a new abstraction layer (DocumentBlock class)\n                editor: cm_editor,\n                foreign_documents_map: foreign_document_map,\n                // TODO this is incorrect, wont work if something was extracted\n                virtual_line: this.last_virtual_line + i\n            });\n        }\n        this.last_virtual_line += lines.length;\n        // one empty line is necessary to separate code blocks, next 'n' lines are to silence linters;\n        // the final cell does not get the additional lines (thanks to the use of join, see below)\n        this.lines.push(lines.join('\\n') + '\\n');\n        // adding the virtual lines for the blank lines\n        for (let i = 0; i < this.blank_lines_between_cells; i++) {\n            this.virtual_lines.set(this.last_virtual_line + i, {\n                skip_inspect: [this.id_path],\n                editor: cm_editor,\n                source_line: null\n            });\n        }\n        this.last_virtual_line += this.blank_lines_between_cells;\n        this.last_source_line += source_cell_lines.length;\n    }\n    get value() {\n        let lines_padding = '\\n'.repeat(this.blank_lines_between_cells);\n        return this.lines.join(lines_padding);\n    }\n    getTokenAt(position) {\n        let cm_editor = this.get_editor_at_virtual_line(position);\n        let editor_position = this.transform_virtual_to_editor(position);\n        return cm_editor.getTokenAt(editor_position);\n    }\n    close_expired_documents() {\n        for (let document of this.unused_documents.values()) {\n            document.remaining_lifetime -= 1;\n            if (document.remaining_lifetime <= 0) {\n                this.close_foreign(document);\n            }\n        }\n    }\n    close_foreign(document) {\n        console.log('LSP: closing document', document);\n        this.foreign_document_closed.emit({\n            foreign_document: document,\n            parent_host: this\n        });\n        // remove it from foreign documents list\n        this.foreign_documents.delete(document.virtual_id);\n        // and delete the documents within it\n        document.close_all_foreign_documents();\n        document.foreign_document_closed.disconnect(this.forward_closed_signal, this);\n        document.foreign_document_opened.disconnect(this.forward_opened_signal, this);\n    }\n    close_all_foreign_documents() {\n        for (let document of this.foreign_documents.values()) {\n            this.close_foreign(document);\n        }\n    }\n    get virtual_id() {\n        // for easier debugging, the language information is included in the ID:\n        return this.standalone\n            ? this.instance_id + '(' + this.language + ')'\n            : this.language;\n    }\n    get ancestry() {\n        if (!this.parent) {\n            return [this];\n        }\n        return this.parent.ancestry.concat([this]);\n    }\n    get id_path() {\n        if (!this.parent) {\n            return this.virtual_id;\n        }\n        return this.parent.id_path + '-' + this.virtual_id;\n    }\n    get uri() {\n        if (!this.parent) {\n            return this.path;\n        }\n        return this.path + '.' + this.id_path + '.' + this.file_extension;\n    }\n    transform_source_to_editor(pos) {\n        let source_line = this.source_lines.get(pos.line);\n        let editor_line = source_line.editor_line;\n        let editor_shift = source_line.editor_shift;\n        return {\n            // only shift column in the line beginning the virtual document (first list of the editor in cell magics, but might be any line of editor in line magics!)\n            ch: pos.ch + (editor_line === 0 ? editor_shift.column : 0),\n            line: editor_line + editor_shift.line\n            // TODO or:\n            //  line: pos.line + editor_shift.line - this.first_line_of_the_block(editor)\n        };\n    }\n    transform_virtual_to_editor(virtual_position) {\n        let source_position = this.transform_virtual_to_source(virtual_position);\n        return this.transform_source_to_editor(source_position);\n    }\n    transform_virtual_to_source(position) {\n        return {\n            ch: position.ch,\n            line: this.virtual_lines.get(position.line).source_line\n        };\n    }\n    get root() {\n        if (this.parent == null) {\n            return this;\n        }\n        return this.parent.root;\n    }\n    get_editor_at_virtual_line(pos) {\n        let line = pos.line;\n        // tolerate overshot by one (the hanging blank line at the end)\n        if (!this.virtual_lines.has(line)) {\n            line -= 1;\n        }\n        return this.virtual_lines.get(line).editor;\n    }\n    get_editor_at_source_line(pos) {\n        return this.source_lines.get(pos.line).editor;\n    }\n    /**\n     * Recursively emits changed signal from the document or any descendant foreign document.\n     */\n    maybe_emit_changed() {\n        if (this.value !== this.previous_value) {\n            this.changed.emit(this);\n        }\n        this.previous_value = this.value;\n        for (let document of this.foreign_documents.values()) {\n            document.maybe_emit_changed();\n        }\n    }\n}\nVirtualDocument.instances_count = 0;\nexport function collect_documents(virtual_document) {\n    let collected = new Set();\n    collected.add(virtual_document);\n    for (let foreign of virtual_document.foreign_documents.values()) {\n        let foreign_languages = collect_documents(foreign);\n        foreign_languages.forEach(collected.add, collected);\n    }\n    return collected;\n}\n//# sourceMappingURL=document.js.map","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./console.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import '../../style/console.css';\nexport class EditorLogConsole {\n}\nexport class FloatingConsole extends EditorLogConsole {\n    constructor() {\n        super();\n        this.element = document.createElement('ul');\n        this.element.className = 'lsp-floating-console';\n        document.body.appendChild(this.element);\n    }\n    append(text, kind = 'log') {\n        let entry = document.createElement('li');\n        entry.innerHTML = '<span class=\"lsp-kind\">' + kind + '</span>' + text;\n        this.element.appendChild(entry);\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n    to_string(args) {\n        return args\n            .map(arg => '<span class=\"lsp-code\">' + JSON.stringify(arg) + '</span>')\n            .join(', ');\n    }\n    log(...args) {\n        this.append(this.to_string(args), 'log');\n    }\n    warn(...args) {\n        this.append(this.to_string(args), 'warn');\n    }\n    error(...args) {\n        this.append(this.to_string(args), 'error');\n    }\n}\nexport class BrowserConsole extends EditorLogConsole {\n    log(...args) {\n        console.log('LSP: ', ...args);\n    }\n    warn(...args) {\n        console.warn('LSP: ', ...args);\n    }\n    error(...args) {\n        console.error('LSP: ', ...args);\n    }\n}\nexport function create_console(kind) {\n    if (kind === 'browser') {\n        return new BrowserConsole();\n    }\n    else {\n        return new FloatingConsole();\n    }\n}\n//# sourceMappingURL=console.js.map","import { VirtualDocument } from './document';\nimport { until_ready } from '../utils';\nimport { Signal } from '@lumino/signaling';\nimport { create_console } from './console';\n/**\n * VirtualEditor extends the CodeMirror.Editor interface; its subclasses may either\n * fast-forward any requests to an existing instance of the CodeMirror.Editor\n * (using ES6 Proxy), or implement custom behaviour, allowing for the use of\n * virtual documents representing code in complex entities such as notebooks.\n */\nexport class VirtualEditor {\n    constructor(language, file_extension, path, overrides_registry, foreign_code_extractors, has_lsp_supported_file) {\n        this.language = language;\n        this.file_extension = file_extension;\n        this.path = path;\n        this.overrides_registry = overrides_registry;\n        this.foreign_code_extractors = foreign_code_extractors;\n        this.has_lsp_supported_file = has_lsp_supported_file;\n        this.isDisposed = false;\n        /**\n         * Virtual documents update guard.\n         */\n        this.is_update_in_progress = false;\n        this.update_lock = false;\n        this._event_wrappers = new Map();\n        this.create_virtual_document();\n        this.documents_updated = new Signal(this);\n        this.documents_updated.connect(this.on_updated, this);\n        this.console = create_console('browser');\n    }\n    create_virtual_document() {\n        this.virtual_document = new VirtualDocument(this.language(), this.path(), this.overrides_registry, this.foreign_code_extractors, false, this.file_extension(), this.has_lsp_supported_file);\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.documents_updated.disconnect(this.on_updated, this);\n        for (let [[eventName], wrapped_handler] of this._event_wrappers.entries()) {\n            this.forEveryBlockEditor(cm_editor => {\n                cm_editor.off(eventName, wrapped_handler);\n            }, false);\n        }\n        this._event_wrappers.clear();\n        this.virtual_document.dispose();\n        // just to be sure\n        this.virtual_document = null;\n        this.overrides_registry = null;\n        this.foreign_code_extractors = null;\n        this.code_extractors = null;\n        this.isDisposed = true;\n    }\n    /**\n     * Once all the foreign documents were refreshed, the unused documents (and their connections)\n     * should be terminated if their lifetime has expired.\n     */\n    on_updated(editor, root_document) {\n        try {\n            root_document.close_expired_documents();\n        }\n        catch (e) {\n            this.console.warn('LSP: Failed to close expired documents');\n        }\n    }\n    transform_virtual_to_editor(position) {\n        return this.virtual_document.transform_virtual_to_editor(position);\n    }\n    can_update() {\n        return !this.isDisposed && !this.is_update_in_progress && !this.update_lock;\n    }\n    /**\n     * Execute provided callback within an update-locked context, which guarantees that:\n     *  - the previous updates must have finished before the callback call, and\n     *  - no update will happen when executing the callback\n     * @param fn - the callback to execute in update lock\n     */\n    async with_update_lock(fn) {\n        // this.console.log('Will enter update lock with', fn);\n        await until_ready(() => this.can_update(), 12, 10).then(() => {\n            try {\n                this.update_lock = true;\n                fn();\n            }\n            finally {\n                this.update_lock = false;\n            }\n        });\n    }\n    /**\n     * Update all the virtual documents, emit documents updated with root document if succeeded,\n     * and resolve a void promise. The promise does not contain the text value of the root document,\n     * as to avoid an easy trap of ignoring the changes in the virtual documents.\n     */\n    async update_documents() {\n        return new Promise(async (resolve, reject) => {\n            // defer the update by up to 50 ms (10 retrials * 5 ms break),\n            // awaiting for the previous update to complete.\n            await until_ready(() => this.can_update(), 10, 5).then(() => {\n                if (this.isDisposed || !this.virtual_document) {\n                    resolve();\n                }\n                try {\n                    this.is_update_in_progress = true;\n                    this.perform_documents_update();\n                    if (this.virtual_document) {\n                        this.documents_updated.emit(this.virtual_document);\n                        this.virtual_document.maybe_emit_changed();\n                    }\n                    resolve();\n                }\n                catch (e) {\n                    this.console.warn('Documents update failed:', e);\n                    reject(e);\n                }\n                finally {\n                    this.is_update_in_progress = false;\n                }\n            });\n        });\n    }\n    // TODO .root is not really needed as we are in editor now...\n    document_at_root_position(position) {\n        let root_as_source = position;\n        return this.virtual_document.root.document_at_source_position(root_as_source);\n    }\n    root_position_to_virtual_position(position) {\n        let root_as_source = position;\n        return this.virtual_document.root.virtual_position_at_document(root_as_source);\n    }\n    get_editor_at_root_position(root_position) {\n        return this.virtual_document.root.get_editor_at_source_line(root_position);\n    }\n    root_position_to_editor(root_position) {\n        return this.virtual_document.root.transform_source_to_editor(root_position);\n    }\n    /**\n     * Proxy the event handler binding to the CodeMirror editors,\n     * allowing for multiple actual editors per a virtual editor.\n     *\n     * Only handlers accepting CodeMirror.Editor are supported for simplicity.\n     */\n    on(eventName, handler, ...args) {\n        let wrapped_handler = (instance, ...args) => {\n            try {\n                return handler(this, ...args);\n            }\n            catch (error) {\n                this.console.warn('Wrapped handler (which should accept a CodeMirror Editor instance) failed', { error, instance, args, this: this });\n            }\n        };\n        this._event_wrappers.set([eventName, handler], wrapped_handler);\n        this.forEveryBlockEditor(cm_editor => {\n            cm_editor.on(eventName, wrapped_handler);\n        });\n    }\n    off(eventName, handler, ...args) {\n        let wrapped_handler = this._event_wrappers.get([eventName, handler]);\n        this.forEveryBlockEditor(cm_editor => {\n            cm_editor.off(eventName, wrapped_handler);\n        });\n    }\n}\n//# sourceMappingURL=editor.js.map","import { VirtualEditor } from '../editor';\nexport class VirtualFileEditor extends VirtualEditor {\n    constructor(language, file_extension, path, cm_editor) {\n        // TODO: for now the magics and extractors are not used in FileEditor,\n        //  although it would make sense to pass extractors (e.g. for CSS in HTML,\n        //  or SQL in Python files) in the future.\n        super(language, file_extension, path, {}, {}, true);\n        this.has_cells = false;\n        this.cm_editor = cm_editor;\n        let handler = {\n            get: function (target, prop, receiver) {\n                if (prop in cm_editor && !(prop in target)) {\n                    return cm_editor[prop];\n                }\n                else {\n                    return Reflect.get(target, prop, receiver);\n                }\n            }\n        };\n        return new Proxy(this, handler);\n    }\n    transform_virtual_to_editor(position) {\n        return position;\n    }\n    transform_editor_to_root(cm_editor, position) {\n        return position;\n    }\n    get_editor_index(position) {\n        return 0;\n    }\n    get_cm_editor(position) {\n        return this.cm_editor;\n    }\n    perform_documents_update() {\n        if (this.isDisposed) {\n            return;\n        }\n        // it is sufficient to update the root document, all nested documents will follow (be re-generated)\n        this.virtual_document.clear();\n        this.virtual_document.append_code_block(this.cm_editor.getValue(), this.cm_editor);\n    }\n    addEventListener(type, listener) {\n        this.cm_editor.getWrapperElement().addEventListener(type, listener);\n    }\n    forEveryBlockEditor(callback) {\n        callback(this.cm_editor);\n    }\n}\n//# sourceMappingURL=file_editor.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    DiagnosticSeverity.Error = 1;\n    DiagnosticSeverity.Warning = 2;\n    DiagnosticSeverity.Information = 3;\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    DocumentHighlightKind.Text = 1;\n    DocumentHighlightKind.Read = 2;\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\nexport function inverse_namespace(namespace) {\n    const records = {};\n    for (let key of Object.keys(namespace)) {\n        // @ts-ignore\n        records[namespace[key]] = key;\n    }\n    return records;\n}\n/**\n * Why programmatic solution rather than hard-coding the namespace the other way around?\n * Because the namespaces are copy-paste from the LSP specification, and it will be easier\n * to maintain this way in the future.\n *\n * Why not simply import from lsProtocol?\n * Because this triggers some strange webpack issue as an additional package would need to be included.\n * Interestingly, the same thing happens when using CompletionTriggerKind.Invoked from lsProtocol.\n */\nexport const diagnosticSeverityNames = inverse_namespace(DiagnosticSeverity);\nexport const completionItemKindNames = inverse_namespace(CompletionItemKind);\nexport const documentHighlightKindNames = inverse_namespace(DocumentHighlightKind);\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind.Invoked = 1;\n    CompletionTriggerKind.TriggerCharacter = 2;\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n//# sourceMappingURL=lsp.js.map","export class PositionConverter {\n    static lsp_to_cm(position) {\n        return { line: position.line, ch: position.character };\n    }\n    static lsp_to_ce(position) {\n        return { line: position.line, column: position.character };\n    }\n    static cm_to_ce(position) {\n        return { line: position.line, column: position.ch };\n    }\n    static ce_to_cm(position) {\n        return { line: position.line, ch: position.column };\n    }\n}\n//# sourceMappingURL=converter.js.map","import { DataConnector } from '@jupyterlab/statedb';\nimport { CompletionHandler, KernelConnector } from '@jupyterlab/completer';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { MarkupContent } from 'vscode-languageserver-types';\nimport { completionItemKindNames, CompletionTriggerKind } from '../../../lsp';\nimport { PositionConverter } from '../../../converter';\nimport kiteLogo from '../../../../style/icons/kite-logo.svg';\nexport class KiteConnector extends DataConnector {\n    /**\n     * Create a new Kite connector for completion requests.\n     *\n     * @param options - The instantiation options for the Kite connector.\n     */\n    constructor(options) {\n        super();\n        this.isDisposed = false;\n        this.responseType = CompletionHandler.ICompletionItemsResponseType;\n        this._trigger_kind = CompletionTriggerKind.Invoked;\n        this.suppress_auto_invoke_in = ['comment'];\n        this.icon = new LabIcon({\n            name: 'jupyterlab-kite:completion-icon',\n            svgstr: kiteLogo\n        });\n        this._editor = options.editor;\n        this._connections = options.connections;\n        this.virtual_editor = options.virtual_editor;\n        this.options = options;\n        this.fetchAbort = new AbortController();\n        if (options.session) {\n            this._kernel_connector = new KernelConnector({\n                session: options.session\n            });\n        }\n        this.icon.bindprops({ className: 'kite-logo' });\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        delete this._connections;\n        delete this._kernel_connector;\n        delete this.virtual_editor;\n        delete this.options;\n        delete this._editor;\n        delete this.icon;\n        delete this.isDisposed;\n        delete this.fetchAbort;\n    }\n    abort() {\n        this.fetchAbort.abort();\n    }\n    /**\n     * Fetch completion requests.\n     *\n     * @param request - The completion request text and details.\n     */\n    fetch(request) {\n        return new Promise(async (resolve, reject) => {\n            const fetchAbort = new AbortController();\n            this.fetchAbort.abort();\n            this.fetchAbort = fetchAbort;\n            let replacementRange = [-1, -1];\n            fetchAbort.signal.addEventListener('abort', () => {\n                resolve({\n                    start: replacementRange[0],\n                    end: replacementRange[1],\n                    items: []\n                });\n            }, { once: true });\n            let editor = this._editor;\n            const cursor = editor.getCursorPosition();\n            const token = editor.getTokenForPosition(cursor);\n            if (token.type &&\n                this.suppress_auto_invoke_in.indexOf(token.type) !== -1) {\n                console.log('[Kite][Completer] Suppressing completer auto-invoke in', token.type);\n                return;\n            }\n            const start = editor.getPositionAt(token.offset);\n            const end = editor.getPositionAt(token.offset + token.value.length);\n            if (!start || !end) {\n                console.log('[Kite][Completer] No start or end position found');\n                resolve(KiteConnector.EmptyICompletionItemsReply);\n                return;\n            }\n            let position_in_token = cursor.column - start.column - 1;\n            const typed_character = token.value[cursor.column - start.column - 1];\n            // Update replacement range based on current editor information\n            let prefix = token.value.slice(0, position_in_token + 1);\n            // Assume all_non_prefixed = true in this calculation, since if should be if there are no items\n            replacementRange = [token.offset + 1, token.offset + prefix.length];\n            let start_in_root = this.transform_from_editor_to_root(start);\n            let end_in_root = this.transform_from_editor_to_root(end);\n            let cursor_in_root = this.transform_from_editor_to_root(cursor);\n            let virtual_editor = this.virtual_editor;\n            // find document for position\n            let document = virtual_editor.document_at_root_position(start_in_root);\n            let virtual_start = virtual_editor.root_position_to_virtual_position(start_in_root);\n            let virtual_end = virtual_editor.root_position_to_virtual_position(end_in_root);\n            let virtual_cursor = virtual_editor.root_position_to_virtual_position(cursor_in_root);\n            const kitePromise = async () => {\n                try {\n                    return await this.fetch_kite(token, typed_character, virtual_start, virtual_end, virtual_cursor, document, position_in_token);\n                }\n                catch (error) {\n                    return {\n                        start: replacementRange[0],\n                        end: replacementRange[1],\n                        items: []\n                    };\n                }\n            };\n            const isManual = this._trigger_kind === CompletionTriggerKind.Invoked;\n            /**\n             * \"\"\"\n             * \"\"\"\n             * has token.type string, so we suppress auto fetching.\n             */\n            const should_suppress_strings = !isManual && token.type === 'string';\n            /**\n             * Kernel completions should only be fetched after an alphabetical character or . ' \"\n             */\n            const kernelTriggerRegex = /^[a-zA-Z\\.\\'\\\"]+/;\n            const kernelPromise = () => {\n                /**\n                 * Don't fetch kernel completions if:\n                 * - No kernel connector\n                 * - No request object\n                 * - Token type is string (otherwise kernel completions appear within docstrings)\n                 * - Preceding character isn't a kernel trigger character (unless request is manual)\n                 */\n                if (!this._kernel_connector ||\n                    !request ||\n                    should_suppress_strings ||\n                    !(kernelTriggerRegex.test(typed_character) || isManual)) {\n                    return KiteConnector.EmptyIReply;\n                }\n                return this._kernel_connector.fetch(request).catch(() => {\n                    return KiteConnector.EmptyIReply;\n                });\n            };\n            const kernelTimeoutPromise = () => {\n                const timeout = new Promise(resolve => {\n                    setTimeout(resolve, 500, KiteConnector.EmptyIReply);\n                });\n                return Promise.race([timeout, kernelPromise()]);\n            };\n            const [kernel, kite] = await Promise.all([\n                isManual ? kernelPromise() : kernelTimeoutPromise(),\n                kitePromise()\n            ]);\n            const merged = this.merge_replies(kernel, kite);\n            if (fetchAbort.signal.aborted) {\n                // will eventually resolve to empty via the registered handler\n                return;\n            }\n            resolve(merged);\n        });\n    }\n    async fetch_kite(token, typed_character, start, end, cursor, document, position_in_token) {\n        let connection = this._connections.get(document.id_path);\n        if (!connection) {\n            console.log('[Kite][Completer] No LSP Connection found');\n            return KiteConnector.EmptyICompletionItemsReply;\n        }\n        const lspCompletionItems = await connection\n            .getCompletion(cursor, {\n            start,\n            end,\n            text: token.value\n        }, document.document_info, false, typed_character, this.trigger_kind)\n            .catch(err => console.error(err));\n        console.log('[Kite][Completer] Fetched', lspCompletionItems);\n        let prefix = token.value.slice(0, position_in_token + 1);\n        let all_non_prefixed = true;\n        let items = [];\n        let lineText = document\n            .get_editor_at_virtual_line(cursor)\n            .getLineTokens(cursor.line)\n            .map(token => token.string)\n            .join('');\n        lspCompletionItems.forEach(match => {\n            var _a;\n            let range = (_a = match.textEdit) === null || _a === void 0 ? void 0 : _a.range;\n            let insertion = match.insertText ? match.insertText : match.label;\n            if (range) {\n                if (range.start.character < start.ch) {\n                    // If this completion begins before the given token begins,\n                    // we need to trim it so that it begins within the given token instead.\n                    let preToken = lineText.substring(range.start.character, start.ch);\n                    if (insertion.startsWith(preToken)) {\n                        // We can trim this completion because the trimmed portion will match the existing text in the line.\n                        insertion = insertion.substring(preToken.length);\n                    }\n                    else {\n                        // We can't trim the beginning of this completion.\n                        console.log('[Kite][Completer] Disposing of un-insertable completion: %s', match.insertText ? match.insertText : match.label);\n                        return;\n                    }\n                }\n                else if (range.start.character > start.ch + 1) {\n                    // The start of the completion can be 1 character past the start of the token,\n                    // to accommodate completions after single character tokens like '.' or ' '.\n                    // Completions that start further than that fall outside of the standard insertion range.\n                    console.log('[Kite][Completer] Disposing of un-insertable completion: %s', match.insertText ? match.insertText : match.label);\n                    return;\n                }\n                if (range.end.character > cursor.ch) {\n                    // If the completion goes past the cursor, it is either a type-through completion,\n                    // or it modifies characters past the cursor. However, the standard insertion range\n                    // only extends past the cursor if all the completions are type-through, so no completions\n                    // that modify characters past the cursor are insertable.\n                    let postCursor = lineText.substring(cursor.ch, range.end.character);\n                    if (insertion.endsWith(postCursor)) {\n                        // This will result in the cursor being placed before what the user perceives\n                        // as a type-through, instead of after it, which is not ideal.\n                        insertion = insertion.substring(0, insertion.length - postCursor.length);\n                    }\n                    else {\n                        // This completion modifies characters past the cursor, so it's un-insertable.\n                        console.log('[Kite][Completer] Disposing of un-insertable completion: %s', match.insertText ? match.insertText : match.label);\n                        return;\n                    }\n                }\n                else if (range.end.character < cursor.ch) {\n                    // The end of the standard completion range will not be before the cursor.\n                    // It is either on the cursor, or after it (in a type-through case).\n                    // Therefore any completion that ends before the cursor cannot be inserted.\n                    console.log('[Kite][Completer] Disposing of un-insertable completion: %s', match.insertText ? match.insertText : match.label);\n                    return;\n                }\n            }\n            if (insertion !== match.insertText) {\n                console.log('[Kite][Completer] Trimmed %s => %s', match.insertText, insertion);\n                match.insertText = insertion;\n            }\n            let completionItem = {\n                label: match.label,\n                insertText: match.insertText,\n                type: match.hint\n                    ? match.hint\n                    : match.kind\n                        ? completionItemKindNames[match.kind]\n                        : '',\n                icon: this.icon,\n                documentation: MarkupContent.is(match.documentation)\n                    ? match.documentation.value\n                    : match.documentation,\n                filterText: match.filterText,\n                noFilter: true\n            };\n            // Update prefix values\n            let text = match.insertText ? match.insertText : match.label;\n            if (text.toLowerCase().startsWith(prefix.toLowerCase())) {\n                all_non_prefixed = false;\n                if (prefix !== token.value) {\n                    if (text.toLowerCase().startsWith(token.value.toLowerCase())) {\n                        // given a completion insert text \"display_table\" and two test cases:\n                        // disp<tab>data →  display_table<cursor>data\n                        // disp<tab>lay  →  display_table<cursor>\n                        // we have to adjust the prefix for the latter (otherwise we would get display_table<cursor>lay),\n                        // as we are constrained NOT to replace after the prefix (which would be \"disp\" otherwise)\n                        prefix = token.value;\n                    }\n                }\n            }\n            items.push(completionItem);\n        });\n        return {\n            // note in the ContextCompleter it was:\n            // start: token.offset,\n            // end: token.offset + token.value.length,\n            // which does not work with \"from statistics import <tab>\" as the last token ends at \"t\" of \"import\",\n            // so the completer would append \"mean\" as \"from statistics importmean\" (without space!);\n            // (in such a case the typedCharacters is undefined as we are out of range)\n            // a different workaround would be to prepend the token.value prefix:\n            // text = token.value + text;\n            // but it did not work for \"from statistics <tab>\" and lead to \"from statisticsimport\" (no space)\n            start: token.offset + (all_non_prefixed ? 1 : 0),\n            end: token.offset + prefix.length,\n            items\n        };\n    }\n    merge_replies(kernelReply, kiteReply) {\n        const newKernelReply = this.transform(kernelReply);\n        if (!newKernelReply.items.length) {\n            return kiteReply;\n        }\n        if (!kiteReply.items.length) {\n            return newKernelReply;\n        }\n        // Dedupe Kite and Kernel items based on label\n        const kiteSet = new Set(kiteReply.items.map(item => item.label));\n        newKernelReply.items = newKernelReply.items.filter(item => !kiteSet.has(item.label));\n        console.log('[Kite]: Merging', kiteReply, newKernelReply);\n        if (kiteReply.start === -1) {\n            // Use kernel replacement range\n            return Object.assign(Object.assign({}, kernelReply), { items: kiteReply.items.concat(newKernelReply.items) });\n        }\n        else {\n            // Use kite replacement range\n            return Object.assign(Object.assign({}, kiteReply), { items: kiteReply.items.concat(newKernelReply.items) });\n        }\n    }\n    /**\n     * Converts an IReply into an ICompletionItemsReply.\n     */\n    transform(reply) {\n        const items = new Array();\n        const metadata = reply.metadata || {};\n        const types = metadata._jupyter_types_experimental;\n        if (types) {\n            types.forEach((item) => {\n                const text = item.text;\n                const type = item.type;\n                items.push({ label: text, type: type === '<unknown>' ? '' : type });\n            });\n        }\n        else {\n            const matches = reply.matches;\n            matches.forEach(match => {\n                items.push({ label: match });\n            });\n        }\n        return { start: reply.start, end: reply.end, items };\n    }\n    transform_from_editor_to_root(position) {\n        let cm_editor = this._editor.editor;\n        let cm_start = PositionConverter.ce_to_cm(position);\n        return this.virtual_editor.transform_editor_to_root(cm_editor, cm_start);\n    }\n    get trigger_kind() {\n        return this._trigger_kind;\n    }\n    set trigger_kind(kind) {\n        this._trigger_kind = kind;\n    }\n    with_trigger_kind(kind, fn) {\n        try {\n            this.trigger_kind = kind;\n            return fn();\n        }\n        finally {\n            // Return to the default state\n            this.trigger_kind = CompletionTriggerKind.Invoked;\n        }\n    }\n}\n/**\n * A namespace for Kite connector statics.\n */\n(function (KiteConnector) {\n    KiteConnector.EmptyICompletionItemsReply = {\n        start: -1,\n        end: -1,\n        items: []\n    };\n    KiteConnector.EmptyIReply = {\n        start: -1,\n        end: -1,\n        matches: [],\n        metadata: {}\n    };\n})(KiteConnector || (KiteConnector = {}));\n//# sourceMappingURL=completion.js.map","import { until_ready } from '../../utils';\nexport class CodeMirrorAdapter {\n    constructor(editor, virtual_document, jupyterlab_components, features = new Array()) {\n        this.editor = editor;\n        this.virtual_document = virtual_document;\n        this.jupyterlab_components = jupyterlab_components;\n        this.isDisposed = false;\n        this.saveChange = (doc, change) => {\n            this.last_change = change;\n        };\n        this.editor.on('change', this.saveChange);\n        this.features = new Map();\n        for (let feature of features) {\n            feature.register();\n            if (!feature.is_registered) {\n                this.editor.console.warn('The feature ', feature, 'was not registered properly');\n            }\n            this.features.set(feature.name, feature);\n        }\n    }\n    async updateAfterChange() {\n        this.jupyterlab_components.remove_tooltip();\n        try {\n            await until_ready(() => this.last_change != null, 30, 22);\n        }\n        catch (err) {\n            console.log('No change obtained from CodeMirror editor within the expected time of 0.66s');\n            return;\n        }\n        let change = this.last_change;\n        let root_position;\n        try {\n            root_position = this.editor.getDoc().getCursor('end');\n        }\n        catch (err) {\n            console.log('LSP: Root positon not found');\n            return;\n        }\n        try {\n            let document = this.editor.document_at_root_position(root_position);\n            if (this.virtual_document !== document) {\n                return true;\n            }\n            if (!change || !change.text.length || !change.text[0].length) {\n                // deletion - ignore\n                // TODO(naman) this should probably be handled by the individual features for more flexibility\n                return true;\n            }\n            for (let feature of this.features.values()) {\n                feature.afterChange(change, root_position);\n            }\n            return true;\n        }\n        catch (e) {\n            this.editor.console.log('updateAfterChange failure');\n            this.editor.console.error(e);\n        }\n        this.invalidateLastChange();\n    }\n    invalidateLastChange() {\n        this.last_change = null;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        for (let feature of this.features.values()) {\n            feature.remove();\n        }\n        this.features.clear();\n        this.editor.off('change', this.saveChange);\n        // just to be sure\n        this.editor = null;\n        // actually disposed\n        this.isDisposed = true;\n    }\n}\n//# sourceMappingURL=cm_adapter.js.map","export function is_equal(self, other) {\n    return other && self.line === other.line && self.ch === other.ch;\n}\n// TODO: needs heavy unit testing\nexport function position_at_offset(offset, lines) {\n    let line = 0;\n    let column = 0;\n    for (let text_line of lines) {\n        // each line has a new line symbol which is accounted for in offset!\n        if (text_line.length + 1 <= offset) {\n            offset -= text_line.length + 1;\n            line += 1;\n        }\n        else {\n            column = offset;\n            break;\n        }\n    }\n    return { line, column };\n}\nexport function offset_at_position(position, lines, lines_include_breaks = false) {\n    let break_increment = lines_include_breaks ? 0 : 1;\n    let offset = 0;\n    for (let i = 0; i < lines.length; i++) {\n        let text_line = lines[i];\n        if (position.line > i) {\n            offset += text_line.length + break_increment;\n        }\n        else {\n            offset += position.column;\n            break;\n        }\n    }\n    return offset;\n}\n//# sourceMappingURL=positioning.js.map","import { offset_at_position } from '../../positioning';\nimport { PositionConverter } from '../../converter';\nimport { DefaultMap } from '../../utils';\nexport var CommandEntryPoint;\n(function (CommandEntryPoint) {\n    CommandEntryPoint[CommandEntryPoint[\"CellContextMenu\"] = 0] = \"CellContextMenu\";\n    CommandEntryPoint[CommandEntryPoint[\"FileEditorContextMenu\"] = 1] = \"FileEditorContextMenu\";\n})(CommandEntryPoint || (CommandEntryPoint = {}));\nfunction toDocumentChanges(changes) {\n    let documentChanges = [];\n    for (let uri of Object.keys(changes)) {\n        documentChanges.push({\n            textDocument: { uri },\n            edits: changes[uri]\n        });\n    }\n    return documentChanges;\n}\nfunction offset_from_lsp(position, lines) {\n    return offset_at_position(PositionConverter.lsp_to_ce(position), lines);\n}\n/**\n * One feature of each type exists per VirtualDocument\n * (the initialization is performed by the adapter).\n */\nexport class CodeMirrorLSPFeature {\n    constructor(virtual_editor, virtual_document, connection, jupyterlab_components, status_message) {\n        this.virtual_editor = virtual_editor;\n        this.virtual_document = virtual_document;\n        this.connection = connection;\n        this.jupyterlab_components = jupyterlab_components;\n        this.status_message = status_message;\n        this.editor_handlers = new Map();\n        this.connection_handlers = new Map();\n        this.wrapper_handlers = new Map();\n        this.is_registered = false;\n    }\n    register() {\n        // register editor handlers\n        for (let [event_name, handler] of this.editor_handlers) {\n            this.virtual_editor.on(event_name, handler);\n        }\n        // register connection handlers\n        for (let [event_name, handler] of this.connection_handlers) {\n            this.connection.on(event_name, handler);\n        }\n        // register editor wrapper handlers\n        this.wrapper = this.virtual_editor.getWrapperElement();\n        for (let [event_name, handler] of this.wrapper_handlers) {\n            this.wrapper.addEventListener(event_name, handler);\n        }\n        this.is_registered = true;\n    }\n    isEnabled() {\n        // TODO - use settings\n        return true;\n    }\n    remove() {\n        // unregister editor handlers\n        for (let [event_name, handler] of this.editor_handlers) {\n            this.virtual_editor.off(event_name, handler);\n        }\n        this.editor_handlers.clear();\n        // unregister connection handlers\n        for (let [event_name, handler] of this.connection_handlers) {\n            this.connection.off(event_name, handler);\n        }\n        this.connection_handlers.clear();\n        // unregister editor wrapper handlers\n        for (let [event_name, handler] of this.wrapper_handlers) {\n            this.wrapper.removeEventListener(event_name, handler);\n        }\n        this.wrapper_handlers.clear();\n    }\n    afterChange(change, root_position) {\n        // nothing here, yet\n    }\n    range_to_editor_range(range, cm_editor) {\n        let start = PositionConverter.lsp_to_cm(range.start);\n        let end = PositionConverter.lsp_to_cm(range.end);\n        if (cm_editor == null) {\n            let start_in_root = this.transform_virtual_position_to_root_position(start);\n            cm_editor = this.virtual_editor.get_editor_at_root_position(start_in_root);\n        }\n        return {\n            start: this.virtual_document.transform_virtual_to_editor(start),\n            end: this.virtual_document.transform_virtual_to_editor(end),\n            editor: cm_editor\n        };\n    }\n    position_from_mouse(event) {\n        return this.virtual_editor.coordsChar({\n            left: event.clientX,\n            top: event.clientY\n        }, 'window');\n    }\n    transform_virtual_position_to_root_position(start) {\n        let cm_editor = this.virtual_document.virtual_lines.get(start.line).editor;\n        let editor_position = this.virtual_document.transform_virtual_to_editor(start);\n        return this.virtual_editor.transform_editor_to_root(cm_editor, editor_position);\n    }\n    get_cm_editor(position) {\n        return this.virtual_editor.get_cm_editor(position);\n    }\n    get_language_at(position, editor) {\n        return editor.getModeAt(position).name;\n    }\n    extract_last_character(change) {\n        if (change.origin === 'paste') {\n            return change.text[0][change.text.length - 1];\n        }\n        else {\n            return change.text[0][0];\n        }\n    }\n    highlight_range(range, class_name) {\n        return range.editor\n            .getDoc()\n            .markText(range.start, range.end, { className: class_name });\n    }\n    /**\n     * Does the edit cover the entire document?\n     */\n    is_whole_document_edit(edit) {\n        let value = this.virtual_document.value;\n        let lines = value.split('\\n');\n        let range = edit.range;\n        let lsp_to_ce = PositionConverter.lsp_to_ce;\n        return (offset_at_position(lsp_to_ce(range.start), lines) === 0 &&\n            offset_at_position(lsp_to_ce(range.end), lines) === value.length);\n    }\n    async apply_edit(workspaceEdit) {\n        let current_uri = this.virtual_document.document_info.uri;\n        // Specs: documentChanges are preferred over changes\n        let changes = workspaceEdit.documentChanges\n            ? workspaceEdit.documentChanges.map(change => change)\n            : toDocumentChanges(workspaceEdit.changes);\n        let applied_changes = null;\n        let edited_cells;\n        let is_whole_document_edit;\n        let errors = [];\n        for (let change of changes) {\n            let uri = change.textDocument.uri;\n            if (decodeURI(uri) !== decodeURI(current_uri) &&\n                decodeURI(uri) !== '/' + decodeURI(current_uri)) {\n                errors.push('Workspace-wide edits not implemented (' +\n                    decodeURI(uri) +\n                    ' != ' +\n                    decodeURI(current_uri) +\n                    ')');\n            }\n            else {\n                is_whole_document_edit =\n                    change.edits.length === 1 &&\n                        this.is_whole_document_edit(change.edits[0]);\n                let edit;\n                if (!is_whole_document_edit) {\n                    applied_changes = 0;\n                    let value = this.virtual_document.value;\n                    // TODO: make sure that it was not changed since the request was sent (using the returned document version)\n                    let lines = value.split('\\n');\n                    let edits_by_offset = new Map();\n                    for (let e of change.edits) {\n                        let offset = offset_from_lsp(e.range.start, lines);\n                        if (edits_by_offset.has(offset)) {\n                            console.warn('Edits should not overlap, ignoring an overlapping edit');\n                        }\n                        else {\n                            edits_by_offset.set(offset, e);\n                            applied_changes += 1;\n                        }\n                    }\n                    // TODO make use of old_to_new_line for edits which add of remove lines:\n                    //  this is crucial to preserve cell boundaries in notebook in such cases\n                    let old_to_new_line = new DefaultMap(() => []);\n                    let new_text = '';\n                    let last_end = 0;\n                    let current_old_line = 0;\n                    let current_new_line = 0;\n                    // going over the edits in descending order of start points:\n                    let start_offsets = [...edits_by_offset.keys()].sort((a, b) => a - b);\n                    for (let start of start_offsets) {\n                        let edit = edits_by_offset.get(start);\n                        let prefix = value.slice(last_end, start);\n                        for (let i = 0; i < prefix.split('\\n').length; i++) {\n                            let new_lines = old_to_new_line.get_or_create(current_old_line);\n                            new_lines.push(current_new_line);\n                            current_old_line += 1;\n                            current_new_line += 1;\n                        }\n                        new_text += prefix + edit.newText;\n                        let end = offset_from_lsp(edit.range.end, lines);\n                        let replaced_fragment = value.slice(start, end);\n                        for (let i = 0; i < edit.newText.split('\\n').length; i++) {\n                            if (i < replaced_fragment.length) {\n                                current_old_line += 1;\n                            }\n                            current_new_line += 1;\n                            let new_lines = old_to_new_line.get_or_create(current_old_line);\n                            new_lines.push(current_new_line);\n                        }\n                        last_end = end;\n                    }\n                    new_text += value.slice(last_end, value.length);\n                    edit = {\n                        range: {\n                            start: { line: 0, character: 0 },\n                            end: {\n                                line: lines.length - 1,\n                                character: lines[lines.length - 1].length\n                            }\n                        },\n                        newText: new_text\n                    };\n                    console.assert(this.is_whole_document_edit(edit));\n                }\n                else {\n                    edit = change.edits[0];\n                }\n                edited_cells = this.apply_single_edit(edit);\n            }\n        }\n        return {\n            appliedChanges: applied_changes,\n            modifiedCells: edited_cells,\n            wasGranular: !is_whole_document_edit,\n            errors: errors\n        };\n    }\n    replace_fragment(newText, editor, fragment_start, fragment_end, start, end, is_whole_document_edit = false) {\n        let document = this.virtual_document;\n        let newFragmentText = newText\n            .split('\\n')\n            .slice(fragment_start.line - start.line, fragment_end.line - start.line)\n            .join('\\n');\n        if (newFragmentText.endsWith('\\n')) {\n            newFragmentText = newFragmentText.slice(0, -1);\n        }\n        let doc = editor.getDoc();\n        let raw_value = doc.getValue('\\n');\n        // extract foreign documents and substitute magics,\n        // as it was done when the shadow virtual document was being created\n        let { lines } = document.prepare_code_block(raw_value, editor);\n        let old_value = lines.join('\\n');\n        if (is_whole_document_edit) {\n            // partial edit\n            let cm_to_ce = PositionConverter.cm_to_ce;\n            let up_to_offset = offset_at_position(cm_to_ce(start), lines);\n            let from_offset = offset_at_position(cm_to_ce(end), lines);\n            newFragmentText =\n                old_value.slice(0, up_to_offset) +\n                    newText +\n                    old_value.slice(from_offset);\n        }\n        if (old_value === newFragmentText) {\n            return 0;\n        }\n        let new_value = document.decode_code_block(newFragmentText);\n        let cursor = doc.getCursor();\n        doc.replaceRange(new_value, { line: 0, ch: 0 }, {\n            line: fragment_end.line - fragment_start.line + 1,\n            ch: 0\n        });\n        try {\n            // try to restore the cursor to the position prior to the edit\n            // (this might not be the best UX, but definitely better than\n            // the cursor jumping to the very end of the cell/file).\n            doc.setCursor(cursor, cursor.ch, { scroll: false });\n            // note: this does not matter for actions invoke from context menu\n            // as those loose focus anyways (this might be addressed elsewhere)\n        }\n        catch (e) {\n            console.log('Could not place the cursor back', e);\n        }\n        return 1;\n    }\n    apply_single_edit(edit) {\n        let document = this.virtual_document;\n        let applied_changes = 0;\n        let start = PositionConverter.lsp_to_cm(edit.range.start);\n        let end = PositionConverter.lsp_to_cm(edit.range.end);\n        let start_editor = document.get_editor_at_virtual_line(start);\n        let end_editor = document.get_editor_at_virtual_line(end);\n        if (start_editor !== end_editor) {\n            let last_editor = start_editor;\n            let fragment_start = start;\n            let fragment_end = Object.assign({}, start);\n            let line = start.line;\n            let recently_replaced = false;\n            while (line <= end.line) {\n                line++;\n                let editor = document.get_editor_at_virtual_line({\n                    line: line,\n                    ch: 0\n                });\n                if (editor === last_editor) {\n                    fragment_end.line = line;\n                    fragment_end.ch = 0;\n                    recently_replaced = false;\n                }\n                else {\n                    applied_changes += this.replace_fragment(edit.newText, last_editor, fragment_start, fragment_end, start, end);\n                    recently_replaced = true;\n                    fragment_start = {\n                        line: line,\n                        ch: 0\n                    };\n                    fragment_end = {\n                        line: line,\n                        ch: 0\n                    };\n                    last_editor = editor;\n                }\n            }\n            if (!recently_replaced) {\n                applied_changes += this.replace_fragment(edit.newText, last_editor, fragment_start, fragment_end, start, end);\n            }\n        }\n        else {\n            applied_changes += this.replace_fragment(edit.newText, start_editor, start, end, start, end);\n        }\n        return applied_changes;\n    }\n}\n/** Return JupyterLab commands to be registered;\n * intended for single-use in index.ts (during extension registration)\n */\nCodeMirrorLSPFeature.commands = new Array();\n//# sourceMappingURL=feature.js.map","import { CompletionTriggerKind } from '../../../lsp';\nimport { CodeMirrorLSPFeature } from '../feature';\n// Defines text insertions that are >1 char and do not suppress the completer\nconst allowedLongChanges = new Set(['()', '[]', '{}', '\"\"', \"''\"]);\nexport class Completion extends CodeMirrorLSPFeature {\n    constructor() {\n        super(...arguments);\n        this.name = 'Completion';\n    }\n    get completionCharacters() {\n        if (this._completionCharacters == null ||\n            !this._completionCharacters.length) {\n            this._completionCharacters = this.connection.getLanguageCompletionCharacters();\n        }\n        return this._completionCharacters;\n    }\n    // public handleCompletion(completions: lsProtocol.CompletionItem[]) {\n    // TODO: populate the (already displayed) completions list if the completions timed out initially?\n    // }\n    afterChange(change) {\n        // TODO: maybe the completer could be kicked off in the handleChange() method directly; signature help still\n        //  requires an up-to-date virtual document on the LSP side, so we need to wait for sync.\n        if (change.text.length &&\n            change.text[0].length > 1 &&\n            !allowedLongChanges.has(change.text[0])) {\n            // Return early to prevent completions list from\n            // popping up right away after a completion is inserted.\n            this.virtual_editor.console.log('Suppressing completion list due to multi-character text change: ', change.text[0]);\n            return;\n        }\n        let last_character = this.extract_last_character(change);\n        if (this.completionCharacters.indexOf(last_character) > -1) {\n            this.virtual_editor.console.log('Will invoke completer after', last_character);\n            this.jupyterlab_components.invoke_completer(CompletionTriggerKind.TriggerCharacter);\n        }\n    }\n}\n//# sourceMappingURL=completion.js.map","import { CodeMirrorLSPFeature } from '../feature';\nexport class Selection extends CodeMirrorLSPFeature {\n    constructor() {\n        super(...arguments);\n        this.name = 'Selection';\n        this.onMousedown = async () => {\n            var _a, _b;\n            if (!((_b = (_a = this.virtual_editor) === null || _a === void 0 ? void 0 : _a.virtual_document) === null || _b === void 0 ? void 0 : _b.document_info)) {\n                return;\n            }\n            let root_position;\n            try {\n                root_position = this.virtual_editor\n                    .getDoc()\n                    .getCursor('start');\n            }\n            catch (err) {\n                console.warn('[Kite]: no root position available');\n                return;\n            }\n            let document;\n            try {\n                document = this.virtual_editor.document_at_root_position(root_position);\n            }\n            catch (e) {\n                console.warn('[Kite]: Could not obtain virtual document from position', root_position);\n                return;\n            }\n            if (document !== this.virtual_document) {\n                return;\n            }\n            let virtual_position = this.virtual_editor.root_position_to_virtual_position(root_position);\n            console.log('[Kite] Virtual Position', virtual_position);\n            this.connection.sendSelection(virtual_position, this.virtual_document.document_info, this.virtual_document.value);\n        };\n    }\n    register() {\n        this.wrapper_handlers.set('mousedown', this.onMousedown);\n        super.register();\n    }\n    remove() {\n        delete this.onMousedown;\n        super.remove();\n    }\n}\n//# sourceMappingURL=selection.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n// (Parts of the FreeTooltip code are copy-paste from Tooltip, ideally this would be PRed be merged)\nimport { Tooltip } from '@jupyterlab/tooltip';\nimport { HoverBox } from '@jupyterlab/apputils';\nconst MIN_HEIGHT = 20;\nconst MAX_HEIGHT = 250;\n/**\n * Tooltip which can be placed  at any character, not only at the current position (derived from getCursorPosition)\n */\n// @ts-ignore\nexport class FreeTooltip extends Tooltip {\n    constructor(options) {\n        super(options);\n        this.position = options.position;\n        this.movetoLineEnd = options.moveToLineEnd;\n    }\n    // @ts-ignore\n    _setGeometry() {\n        // Find the start of the current token for hover box placement.\n        // @ts-ignore\n        const editor = this._editor;\n        const cursor = this.position == null ? editor.getCursorPosition() : this.position;\n        const end = editor.getOffsetAt(cursor);\n        const line = editor.getLine(cursor.line);\n        if (!line) {\n            return;\n        }\n        let position;\n        if (this.movetoLineEnd) {\n            const tokens = line.substring(0, end).split(/\\W+/);\n            const last = tokens[tokens.length - 1];\n            const start = last ? end - last.length : end;\n            position = editor.getPositionAt(start);\n        }\n        else {\n            position = cursor;\n        }\n        if (!position) {\n            return;\n        }\n        const anchor = editor.getCoordinateForPosition(position);\n        const style = window.getComputedStyle(this.node);\n        const paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        // Calculate the geometry of the tooltip.\n        HoverBox.setGeometry({\n            anchor,\n            host: editor.host,\n            maxHeight: MAX_HEIGHT,\n            minHeight: MIN_HEIGHT,\n            node: this.node,\n            offset: { horizontal: -1 * paddingLeft },\n            privilege: 'below',\n            style: style\n        });\n    }\n}\n//# sourceMappingURL=free_tooltip.js.map","import { Completer } from '@jupyterlab/completer';\nexport const hideDocsKey = 'hideDocs';\nexport let shouldHideDocs = false;\nexport let state;\n/**\n * CompletionHandler's Completer property is readonly,\n * so while we can extend its protected methods,\n * \"this\" will still be bound to the base class.\n */\nexport class KiteCompleter extends Completer {\n    constructor(options, stateDB) {\n        super(options);\n        state = stateDB;\n        state.fetch(hideDocsKey).then(value => {\n            if (value) {\n                console.log('[Kite] Stored Hide Docs State:', value);\n                shouldHideDocs = value;\n            }\n        });\n    }\n    onUpdateRequest(msg) {\n        var _a, _b;\n        super.onUpdateRequest(msg);\n        const docpanel = this.node.querySelector('.jp-Completer-docpanel');\n        if (shouldHideDocs) {\n            (_a = docpanel) === null || _a === void 0 ? void 0 : _a.classList.add('hidden');\n        }\n        else {\n            (_b = docpanel) === null || _b === void 0 ? void 0 : _b.classList.remove('hidden');\n        }\n    }\n}\nexport function toggle() {\n    shouldHideDocs = !shouldHideDocs;\n    state.save(hideDocsKey, shouldHideDocs);\n}\n//# sourceMappingURL=kite_completer.js.map","import { Text } from '@jupyterlab/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { JSONExt } from '@lumino/coreutils';\nimport { iter, map, StringExt, toArray } from '@lumino/algorithm';\nexport class KiteModel {\n    constructor() {\n        /**\n         * ========== Private fields from CompleterModel ==========\n         */\n        this._current = null;\n        this._cursor = null;\n        this._isDisposed = false;\n        this._completionItems = [];\n        this._options = [];\n        this._original = null;\n        this._query = '';\n        this._subsetMatch = false;\n        this._typeMap = {};\n        this._orderedTypes = [];\n        this._stateChanged = new Signal(this);\n    }\n    /**\n     * ========== Getters/Setters ==========\n     */\n    /**\n     * The current text change details.\n     */\n    get current() {\n        return this._current;\n    }\n    set current(newValue) {\n        const unchanged = this._current === newValue ||\n            (this._current && newValue && JSONExt.deepEqual(newValue, this._current));\n        if (unchanged) {\n            return;\n        }\n        const original = this._original;\n        // Original request must always be set before a text change. If it isn't\n        // the model fails silently.\n        if (!original) {\n            return;\n        }\n        const cursor = this._cursor;\n        // Cursor must always be set before a text change. This happens\n        // automatically in the completer handler, but since `current` is a public\n        // attribute, this defensive check is necessary.\n        if (!cursor) {\n            return;\n        }\n        const current = (this._current = newValue);\n        if (!current) {\n            this._stateChanged.emit(undefined);\n            return;\n        }\n        const originalLine = original.text.split('\\n')[original.line];\n        const currentLine = current.text.split('\\n')[current.line];\n        // If the text change means that the original start point has been preceded,\n        // then the completion is no longer valid and should be reset.\n        if (!this._subsetMatch && currentLine.length < originalLine.length) {\n            this.reset(true);\n            return;\n        }\n        const { start, end } = cursor;\n        // Clip the front of the current line.\n        let query = current.text.substring(start);\n        // Clip the back of the current line by calculating the end of the original.\n        const ending = original.text.substring(end);\n        query = query.substring(0, query.lastIndexOf(ending));\n        this._query = query;\n        this._stateChanged.emit(undefined);\n    }\n    /**\n     * The cursor details that the API has used to return matching options.\n     */\n    get cursor() {\n        return this._cursor;\n    }\n    set cursor(newValue) {\n        // Original request must always be set before a cursor change. If it isn't\n        // the model fails silently.\n        if (!this.original) {\n            return;\n        }\n        this._cursor = newValue;\n    }\n    /**\n     * Get whether the model is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * The original completion request details.\n     */\n    get original() {\n        return this._original;\n    }\n    set original(newValue) {\n        const unchanged = this._original === newValue ||\n            (this._original &&\n                newValue &&\n                JSONExt.deepEqual(newValue, this._original));\n        if (unchanged) {\n            return;\n        }\n        this._resetKite();\n        // Set both the current and original to the same value when original is set.\n        this._current = this._original = newValue;\n        this._stateChanged.emit(undefined);\n    }\n    /**\n     * The query against which items are filtered.\n     */\n    get query() {\n        return this._query;\n    }\n    set query(newValue) {\n        this._query = newValue;\n    }\n    get state() {\n        return this._state;\n    }\n    set state(newState) {\n        this._state = newState;\n    }\n    /**\n     * A signal emitted when state of the completer menu changes.\n     */\n    get stateChanged() {\n        return this._stateChanged;\n    }\n    /**\n     * A flag that is true when the model value was modified by a subset match.\n     */\n    get subsetMatch() {\n        return this._subsetMatch;\n    }\n    set subsetMatch(newValue) {\n        this._subsetMatch = newValue;\n    }\n    /**\n     * ========== Public Methods ==========\n     */\n    /**\n     * The list of visible items in the completer menu.\n     *\n     * #### Notes\n     * This is a read-only property.\n     */\n    completionItems() {\n        let query = this._query;\n        if (query) {\n            return this._markup(query);\n        }\n        return this._completionItems;\n    }\n    /**\n     * Create a resolved patch between the original state and a patch string.\n     *\n     * @param patch - The patch string to apply to the original value.\n     *\n     * @returns A patched text change or undefined if original value did not exist.\n     */\n    createPatch(patch) {\n        const original = this._original;\n        const cursor = this._cursor;\n        const current = this._current;\n        if (!original || !cursor || !current) {\n            return undefined;\n        }\n        let { start, end } = cursor;\n        // Also include any filtering/additional-typing that has occurred\n        // since the completion request in the patched length.\n        end = end + (current.text.length - original.text.length);\n        return { start, end, value: patch };\n    }\n    /**\n     * Dispose of the resources held by the model.\n     */\n    dispose() {\n        // Do nothing if already disposed.\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        Signal.clearData(this);\n    }\n    /**\n     * Handle a cursor change.\n     */\n    handleCursorChange(change) {\n        const prevState = this.state;\n        this.state = change;\n        // super.handleCursorChange\n        (() => {\n            // If there is no active completion, return.\n            if (!this._original) {\n                return;\n            }\n            const { column, line } = change;\n            const { current, original } = this;\n            if (!original) {\n                return;\n            }\n            // If a cursor change results in a the cursor being on a different line\n            // than the original request, cancel.\n            if (line !== original.line) {\n                this.reset(true);\n                return;\n            }\n            // If a cursor change results in the cursor being set to a position that\n            // precedes the original column, cancel.\n            if (column < original.column) {\n                this.reset(true);\n                return;\n            }\n            const { cursor } = this;\n            if (!cursor || !current) {\n                return;\n            }\n            // If a cursor change results in the cursor being set to a position beyond\n            // the end of the area that would be affected by completion, cancel.\n            const cursorDelta = cursor.end - cursor.start;\n            const originalLine = original.text.split('\\n')[original.line];\n            const currentLine = current.text.split('\\n')[current.line];\n            const inputDelta = currentLine.length - originalLine.length;\n            if (column > original.column + cursorDelta + inputDelta) {\n                this.reset(true);\n                return;\n            }\n        })();\n        // Check if we've left the bounds of the replacement range.\n        // The check in CompleterModel.handleCursorChange is not quite right.\n        // Here, we use createPatch to correctly check the replacement range.\n        const patch = this.createPatch('');\n        // Compute the current cursor position from change as a global text offset.\n        const changeCh = change.column +\n            change.line +\n            change.text\n                .split('\\n')\n                .slice(0, change.line)\n                .map(s => s.length)\n                .reduce((x, y) => x + y, 0);\n        if (patch && (changeCh < patch.start || changeCh > patch.end)) {\n            this._resetKite();\n            return;\n        }\n        // Reset if more than one character may have been inserted.\n        // This is not quite the best spot for this check, but it works.\n        if (prevState) {\n            if (change.column - prevState.column === 1 &&\n                change.line - prevState.line === 0) {\n                // single char insertion: don't reset\n                return;\n            }\n            if (change.column === 1 && change.line - prevState.line === 1) {\n                // newline insertion: don't reset\n                return;\n            }\n            // otherwise reset the model\n            this.reset(true);\n        }\n    }\n    /**\n     * Handle a text change.\n     */\n    handleTextChange(change) {\n        this.state = change;\n        const original = this._original;\n        // If there is no active completion, return.\n        if (!original) {\n            return;\n        }\n        const { text, column, line } = change;\n        const last = text.split('\\n')[line][column - 1];\n        // If last character entered is not whitespace or if the change column is\n        // greater than or equal to the original column, update completion.\n        if ((last && last.match(/\\S/)) || change.column >= original.column) {\n            this.current = change;\n            return;\n        }\n        // If final character is whitespace, reset completion.\n        this.reset(false);\n    }\n    /**\n     * The list of visible items in the completer menu.\n     *\n     * #### Notes\n     * This is a read-only property.\n     */\n    items() {\n        return this._filter();\n    }\n    /**\n     * The unfiltered list of all available options in a completer menu.\n     */\n    options() {\n        return iter(this._options);\n    }\n    /**\n     * An ordered list of all the known types in the typeMap.\n     *\n     * #### Notes\n     * To visually encode the types of the completer matches, we assemble an\n     * ordered list. This list begins with:\n     * ```\n     * ['function', 'instance', 'class', 'module', 'keyword']\n     * ```\n     * and then has any remaining types listed alphebetically. This will give\n     * reliable visual encoding for these known types, but allow kernels to\n     * provide new types.\n     */\n    orderedTypes() {\n        return this._orderedTypes;\n    }\n    /**\n     * Reset the state of the model and emit a state change signal.\n     *\n     * @param hard - Reset even if a subset match is in progress.\n     */\n    reset(hard = false) {\n        // When the completer detects a common subset prefix for all options,\n        // it updates the model and sets the model source to that value, triggering\n        // a reset. Unless explicitly a hard reset, this should be ignored.\n        if (!hard && this._subsetMatch) {\n            return;\n        }\n        this._reset();\n        this._stateChanged.emit(undefined);\n    }\n    /**\n     * Set the list of visible items in the completer menu, and append any\n     * new types to KNOWN_TYPES.\n     */\n    setCompletionItems(newValue) {\n        if (this.isStale()) {\n            this._resetKite();\n            return;\n        }\n        if (JSONExt.deepEqual(newValue, this._completionItems)) {\n            return;\n        }\n        const query = this.query;\n        const newSet = new Set(newValue.map(item => item.label));\n        const retainableItems = this._completionItems.filter(item => {\n            // Don't retain if it's a noFilter completion\n            if (item.noFilter) {\n                return false;\n            }\n            // Dedupe with new completions\n            if (newSet.has(item.label)) {\n                return false;\n            }\n            // Check if completion still matches the updated query\n            return item.label.toLowerCase().startsWith(query.toLowerCase());\n        });\n        newValue = newValue.concat(retainableItems);\n        this._completionItems = newValue;\n        this._orderedTypes = Private.findOrderedCompletionItemTypes(this._completionItems);\n        this._stateChanged.emit(undefined);\n    }\n    /**\n     * Set the available options in the completer menu.\n     */\n    setOptions(newValue, typeMap) {\n        const values = toArray(newValue || []);\n        const types = typeMap || {};\n        if (JSONExt.deepEqual(values, this._options) &&\n            JSONExt.deepEqual(types, this._typeMap)) {\n            return;\n        }\n        if (values.length) {\n            this._options = values;\n            this._typeMap = types;\n            this._orderedTypes = Private.findOrderedTypes(types);\n        }\n        else {\n            this._options = [];\n            this._typeMap = {};\n            this._orderedTypes = [];\n        }\n        this._stateChanged.emit(undefined);\n    }\n    /**\n     * The map from identifiers (a.b) to types (function, module, class, instance,\n     * etc.).\n     *\n     * #### Notes\n     * A type map is currently only provided by the latest IPython kernel using\n     * the completer reply metadata field `_jupyter_types_experimental`. The\n     * values are completely up to the kernel.\n     *\n     */\n    typeMap() {\n        return this._typeMap;\n    }\n    /**\n     * Re-implementation of private method _updateModel.\n     * https://github.com/jupyterlab/jupyterlab/blob/1df0e18951194bb5ec230e76441e8108e0b472e7/packages/completer/src/handler.ts#L421\n     * Enables completer to fully update model state when completions are force updated in JupyterLabWidgetAdapter.\n     */\n    update(reply, state) {\n        if (this.isStale(state)) {\n            this._resetKite();\n            return;\n        }\n        this._original = state;\n        if (reply.start !== -1) {\n            const newCursor = {\n                start: Text.charIndexToJsIndex(reply.start, state.text),\n                end: Text.charIndexToJsIndex(reply.end, state.text)\n            };\n            // Calculate the query based on the text under the cursor\n            this.query = state.text.slice(newCursor.start, newCursor.end);\n            this.cursor = newCursor;\n        }\n        this.setCompletionItems(reply.items);\n    }\n    /**\n     * ========== Private Methods ==========\n     */\n    /**\n     * Apply the query to the complete options list to return the matching subset.\n     */\n    _filter() {\n        const options = this._options || [];\n        const query = this._query;\n        if (!query) {\n            return map(options, option => ({ raw: option, text: option }));\n        }\n        const results = [];\n        for (const option of options) {\n            if (option.toLowerCase().startsWith(query.toLowerCase())) {\n                const marked = StringExt.highlight(option, [...Array(query.length).keys()], Private.mark);\n                results.push({\n                    raw: option,\n                    text: marked.join('')\n                });\n            }\n        }\n        return iter(results);\n    }\n    /**\n     * Check if CompletionItem matches against query.\n     * Highlight matching prefix by adding <mark> tags.\n     */\n    _markup(query) {\n        const items = this._completionItems;\n        let results = [];\n        for (let item of items) {\n            // See if label matches query string\n            // Filter non-matching items.\n            if (item.noFilter ||\n                item.label.toLowerCase().startsWith(query.toLowerCase())) {\n                let matchIndices = StringExt.findIndices(item.label.toLowerCase(), query.toLowerCase()) || [];\n                // Highlight label text if there's a match\n                let marked = StringExt.highlight(item.label, matchIndices, Private.mark);\n                results.push({\n                    label: marked.join(''),\n                    // If no insertText is present, preserve original label value\n                    // by setting it as the insertText.\n                    insertText: item.insertText ? item.insertText : item.label,\n                    type: item.type,\n                    icon: item.icon,\n                    documentation: item.documentation,\n                    deprecated: item.deprecated\n                });\n            }\n        }\n        return results;\n    }\n    /**\n     * Reset the state of the model.\n     */\n    _reset() {\n        this._current = null;\n        this._cursor = null;\n        this._completionItems = [];\n        this._options = [];\n        this._original = null;\n        this._query = '';\n        this._subsetMatch = false;\n        this._typeMap = {};\n        this._orderedTypes = [];\n    }\n    /**\n     * Removes all noFilter completions, and then resets if there are no completions left.\n     */\n    _resetKite() {\n        this._completionItems = this._completionItems.filter(item => {\n            return !item.noFilter;\n        });\n        if (this._completionItems.length === 0) {\n            this._reset();\n        }\n        this._stateChanged.emit(undefined);\n    }\n    isStale(check = this._original) {\n        return (check.text !== this.state.text ||\n            check.line !== this.state.line ||\n            check.column !== this.state.column);\n    }\n}\n/**\n * A namespace for completer model private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The list of known type annotations of completer matches.\n     */\n    const KNOWN_TYPES = ['function', 'instance', 'class', 'module', 'keyword'];\n    /**\n     * The map of known type annotations of completer matches.\n     */\n    const KNOWN_MAP = KNOWN_TYPES.reduce((acc, type) => {\n        acc[type] = null;\n        return acc;\n    }, {});\n    /**\n     * Mark a highlighted chunk of text.\n     */\n    function mark(value) {\n        return `<mark>${value}</mark>`;\n    }\n    Private.mark = mark;\n    /**\n     * Compute a reliably ordered list of types for ICompletionItems.\n     *\n     * #### Notes\n     * The resulting list always begins with the known types:\n     * ```\n     * ['function', 'instance', 'class', 'module', 'keyword']\n     * ```\n     * followed by other types in alphabetical order.\n     *\n     */\n    function findOrderedCompletionItemTypes(items) {\n        const newTypeSet = new Set();\n        items.forEach(item => {\n            if (item.type &&\n                !KNOWN_TYPES.includes(item.type) &&\n                !newTypeSet.has(item.type)) {\n                newTypeSet.add(item.type);\n            }\n        });\n        const newTypes = Array.from(newTypeSet);\n        newTypes.sort((a, b) => a.localeCompare(b));\n        return KNOWN_TYPES.concat(newTypes);\n    }\n    Private.findOrderedCompletionItemTypes = findOrderedCompletionItemTypes;\n    /**\n     * Compute a reliably ordered list of types.\n     *\n     * #### Notes\n     * The resulting list always begins with the known types:\n     * ```\n     * ['function', 'instance', 'class', 'module', 'keyword']\n     * ```\n     * followed by other types in alphabetical order.\n     */\n    function findOrderedTypes(typeMap) {\n        const filtered = Object.keys(typeMap)\n            .map(key => typeMap[key])\n            .filter((value) => !!value && !(value in KNOWN_MAP))\n            .sort((a, b) => a.localeCompare(b));\n        return KNOWN_TYPES.concat(filtered);\n    }\n    Private.findOrderedTypes = findOrderedTypes;\n})(Private || (Private = {}));\n//# sourceMappingURL=kite_model.js.map","import { CompletionHandler } from '@jupyterlab/completer';\nimport { Text } from '@jupyterlab/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { Widget } from '@lumino/widgets';\nimport { PositionConverter } from '../../converter';\nimport { CodeMirrorAdapter } from '../codemirror/cm_adapter';\nimport { Completion } from '../codemirror/features/completion';\nimport { Selection } from '../codemirror/features/selection';\nimport { FreeTooltip } from './components/free_tooltip';\nimport { KiteCompleter } from './kite_completer';\nimport { KiteModel } from './kite_model';\nexport const lsp_features = [\n    Completion,\n    Selection\n];\nexport class StatusMessage {\n    constructor() {\n        this.cleanup = () => {\n            this.message = '';\n            this.changed.emit('');\n        };\n        this.message = '';\n        this.changed = new Signal(this);\n    }\n    /**\n     * Set the text message and (optionally) the timeout to remove it.\n     * @param message\n     * @param timeout - number of ms to until the message is cleaned;\n     *        -1 if the message should stay up indefinitely\n     */\n    set(message, timeout) {\n        this.message = message;\n        this.changed.emit('');\n        if (timeout == null && timeout !== -1) {\n            setTimeout(this.cleanup, timeout);\n        }\n    }\n}\n/**\n * The values should follow the https://microsoft.github.io/language-server-protocol/specification guidelines\n */\nconst mime_type_language_map = {\n    'text/x-rsrc': 'r',\n    'text/x-r-source': 'r',\n    // currently there are no LSP servers for IPython we are aware of\n    'text/x-ipython': 'python'\n};\n/**\n * Foreign code: low level adapter is not aware of the presence of foreign languages;\n * it operates on the virtual document and must not attempt to infer the language dependencies\n * as this would make the logic of inspections caching impossible to maintain, thus the WidgetAdapter\n * has to handle that, keeping multiple connections and multiple virtual documents.\n */\nexport class JupyterLabWidgetAdapter {\n    constructor(app, widget, rendermime_registry, invoke, connection_manager, state) {\n        this.app = app;\n        this.widget = widget;\n        this.rendermime_registry = rendermime_registry;\n        this.isDisposed = false;\n        this.document_connected = new Signal(this);\n        this.invoke_command = invoke;\n        this.adapters = new Map();\n        this.status_message = new StatusMessage();\n        this.connection_manager = connection_manager;\n        this.state = state;\n        // set up signal connections\n        this.widget.context.saveState.connect(this.on_save_state, this);\n        this.connection_manager.closed.connect(this.on_connection_closed, this);\n        this.document_connected.connect(this.connect_completion, this);\n        this.widget.disposed.connect(this.dispose, this);\n    }\n    on_connection_closed(manager, { virtual_document }) {\n        var _a;\n        console.log('LSP: connection closed, disconnecting adapter', virtual_document.id_path);\n        if (virtual_document !== ((_a = this.virtual_editor) === null || _a === void 0 ? void 0 : _a.virtual_document)) {\n            return;\n        }\n        this.dispose();\n    }\n    dispose() {\n        var _a, _b, _c;\n        if (this.isDisposed) {\n            return;\n        }\n        if ((_a = this.virtual_editor) === null || _a === void 0 ? void 0 : _a.virtual_document) {\n            this.disconnect_adapter((_b = this.virtual_editor) === null || _b === void 0 ? void 0 : _b.virtual_document);\n        }\n        this.widget.context.saveState.disconnect(this.on_save_state, this);\n        this.connection_manager.closed.disconnect(this.on_connection_closed, this);\n        this.document_connected.disconnect(this.connect_completion, this);\n        this.widget.disposed.disconnect(this.dispose, this);\n        this.widget.context.model.contentChanged.disconnect(this.update_documents, this);\n        for (let adapter of this.adapters.values()) {\n            adapter.dispose();\n        }\n        this.adapters.clear();\n        this.connection_manager.disconnect_document_signals(this.virtual_editor.virtual_document);\n        this.virtual_editor.dispose();\n        (_c = this.current_completion_connector) === null || _c === void 0 ? void 0 : _c.dispose();\n        // just to be sure\n        delete this.virtual_editor;\n        delete this.app;\n        delete this.widget;\n        delete this._tooltip;\n        delete this.connection_manager;\n        delete this.current_completion_connector;\n        delete this.rendermime_registry;\n        delete this.widget;\n        // actually disposed\n        this.isDisposed = true;\n    }\n    get widget_id() {\n        return this.widget.id;\n    }\n    get language() {\n        // the values should follow https://microsoft.github.io/language-server-protocol/specification guidelines\n        if (mime_type_language_map.hasOwnProperty(this.mime_type)) {\n            return mime_type_language_map[this.mime_type];\n        }\n        else {\n            let without_parameters = this.mime_type.split(';')[0];\n            let [type, subtype] = without_parameters.split('/');\n            if (type === 'application' || type === 'text') {\n                if (subtype.startsWith('x-')) {\n                    return subtype.substr(2);\n                }\n                else {\n                    return subtype;\n                }\n            }\n            else {\n                return this.mime_type;\n            }\n        }\n    }\n    // equivalent to triggering didClose and didOpen, as per syncing specification,\n    // but also reloads the connection; used during file rename (or when it was moved)\n    reload_connection() {\n        // ignore premature calls (before the editor was initialized)\n        if (this.virtual_editor == null) {\n            return;\n        }\n        // disconnect all existing connections (and dispose adapters)\n        this.connection_manager.unregister_document(this.virtual_editor.virtual_document);\n        // recreate virtual document using current path and language\n        this.virtual_editor.create_virtual_document();\n        // reconnect\n        this.connect_document(this.virtual_editor.virtual_document, true).catch(console.warn);\n    }\n    on_save_state(context, state) {\n        // ignore premature calls (before the editor was initialized)\n        if (this.virtual_editor == null) {\n            return;\n        }\n        if (state === 'completed') {\n            for (let connection of this.connection_manager.connections.values()) {\n                connection.sendSaved(this.virtual_editor.virtual_document.document_info);\n            }\n        }\n    }\n    cancel_completer() {\n        var _a;\n        (_a = this.current_completion_connector) === null || _a === void 0 ? void 0 : _a.abort();\n    }\n    async invoke_completer(kind) {\n        if (this.completion_handler) {\n            const editor = this.completion_handler.editor;\n            let model;\n            try {\n                model = this.completion_handler.completer.model;\n            }\n            catch (e) {\n                console.log('Could not cast model into KiteModel', e);\n                return;\n            }\n            if (model.original) {\n                // Core would bail, so we force fetch completions here.\n                // Construct request\n                // https://github.com/jupyterlab/jupyterlab/blob/1df0e18951194bb5ec230e76441e8108e0b472e7/packages/completer/src/handler.ts#L349\n                const position = editor.getCursorPosition();\n                const text = editor.model.value.text;\n                const offset = Text.jsIndexToCharIndex(editor.getOffsetAt(position), text);\n                const request = { text, offset };\n                // track the model state as of the request\n                const state = model.state;\n                const reply = await this.current_completion_connector.with_trigger_kind(kind, () => {\n                    return this.current_completion_connector.fetch(request);\n                });\n                if (model.setCompletionItems && reply) {\n                    model.update(reply, state);\n                    return;\n                }\n            }\n        }\n        this.current_completion_connector.with_trigger_kind(kind, () => {\n            return this.app.commands.execute(this.invoke_command);\n        });\n    }\n    async on_connected(data) {\n        let { virtual_document } = data;\n        await this.connect_adapter(data.virtual_document, data.connection);\n        this.document_connected.emit(data);\n        await this.virtual_editor.update_documents().then(() => {\n            // refresh the document on the LSP server\n            this.document_changed(virtual_document, virtual_document, true);\n            console.log('LSP: virtual document(s) for', this.document_path, 'have been initialized');\n        });\n    }\n    /**\n     * Opens a connection for the document. The connection may or may\n     * not be initialized, yet, and depending on when this is called, the client\n     * may not be fully connected.\n     *\n     * @param virtual_document a VirtualDocument\n     * @param send_open whether to open the document immediately\n     */\n    async connect_document(virtual_document, send_open = false) {\n        virtual_document.changed.connect(this.document_changed, this);\n        virtual_document.foreign_document_opened.connect(this.on_foreign_document_opened, this);\n        const connection_context = await this.connect(virtual_document).catch(console.warn);\n        if (!send_open) {\n            return;\n        }\n        if (connection_context && connection_context.connection) {\n            connection_context.connection.sendOpenWhenReady(virtual_document.document_info);\n        }\n        else {\n            console.warn(`Connection for ${virtual_document.path} was not opened`);\n        }\n    }\n    /**\n     * Handler for opening a document contained in a parent document. The assumption\n     * is that the editor already exists for this, and as such the document\n     * should be queued for immediate opening.\n     *\n     * @param host the VirtualDocument that contains the VirtualDocument in another language\n     * @param context information about the foreign VirtualDocument\n     */\n    async on_foreign_document_opened(host, context) {\n        const { foreign_document } = context;\n        await this.connect_document(foreign_document, true);\n        foreign_document.foreign_document_closed.connect(this.on_foreign_document_closed, this);\n    }\n    on_foreign_document_closed(host, context) {\n        const { foreign_document } = context;\n        foreign_document.foreign_document_closed.disconnect(this.on_foreign_document_closed, this);\n        foreign_document.foreign_document_opened.disconnect(this.on_foreign_document_opened, this);\n        foreign_document.changed.disconnect(this.document_changed, this);\n    }\n    document_changed(virtual_document, document, is_init = false) {\n        var _a;\n        // TODO only send the difference, using connection.sendSelectiveChange()\n        let connection = this.connection_manager.connections.get(virtual_document.id_path);\n        let adapter = this.adapters.get(virtual_document.id_path);\n        if (!((_a = connection) === null || _a === void 0 ? void 0 : _a.isReady)) {\n            console.log('LSP: Skipping document update signal: connection not ready');\n            return;\n        }\n        if (adapter == null) {\n            console.log('LSP: Skipping document update signal: adapter not ready');\n            return;\n        }\n        // super hack: we need to cancel completions synchronously in order to avoid a race\n        // where we return completions after an edit but before cancellation, resulting in stale completions appearing.\n        // If we delegate this to updateAfterChange, it'll happen asynchronously, so we do it here.\n        this.cancel_completer();\n        // console.log(\n        //   'LSP: virtual document',\n        //   virtual_document.id_path,\n        //   'has changed sending update'\n        // );\n        connection.sendFullTextChange(virtual_document.value, virtual_document.document_info);\n        // the first change (initial) is not propagated to features,\n        // as it has no associated CodeMirrorChange object\n        if (!is_init) {\n            // guarantee that the virtual editor won't perform an update of the virtual documents while\n            // the changes are recorded...\n            // TODO this is not ideal - why it solves the problem of some errors,\n            //  it introduces an unnecessary delay. A better way could be to invalidate some of the updates when a new one comes in.\n            //  but maybe not every one (then the outdated state could be kept for too long fo a user who writes very quickly)\n            //  also we would not want to invalidate the updates for the purpose of autocompletion (the trigger characters)\n            this.virtual_editor\n                .with_update_lock(async () => {\n                await adapter.updateAfterChange();\n            })\n                .then()\n                .catch(console.warn);\n        }\n    }\n    async connect_adapter(virtual_document, connection) {\n        let adapter = this.create_adapter(virtual_document, connection);\n        this.adapters.set(virtual_document.id_path, adapter);\n    }\n    disconnect_adapter(virtual_document) {\n        let adapter = this.adapters.get(virtual_document.id_path);\n        this.adapters.delete(virtual_document.id_path);\n        if (adapter != null) {\n            adapter.dispose();\n        }\n    }\n    get_features(virtual_document) {\n        var _a;\n        let adapter = this.adapters.get(virtual_document.id_path);\n        return (_a = adapter) === null || _a === void 0 ? void 0 : _a.features;\n    }\n    async connect(virtual_document) {\n        let language = virtual_document.language;\n        console.log(`LSP: will connect using language: ${language}`);\n        let options = {\n            virtual_document,\n            language,\n            document_path: this.document_path\n        };\n        let connection = await this.connection_manager.connect(options);\n        await this.on_connected({ virtual_document, connection });\n        return {\n            connection,\n            virtual_document\n        };\n    }\n    /**\n     * Connect the change signal in order to update all virtual documents after a change.\n     *\n     * Update to the state of a notebook may be done without a notice on the CodeMirror level,\n     * e.g. when a cell is deleted. Therefore a JupyterLab-specific signals are watched instead.\n     *\n     * While by not using the change event of CodeMirror editors we loose an easy way to send selective,\n     * (range) updates this can be still implemented by comparison of before/after states of the\n     * virtual documents, which is even more resilient and -obviously - editor-independent.\n     */\n    connect_contentChanged_signal() {\n        this.widget.context.model.contentChanged.connect(this.update_documents, this);\n    }\n    create_adapter(virtual_document, connection) {\n        let adapter_features = new Array();\n        for (let feature_type of lsp_features) {\n            let feature = new feature_type(this.virtual_editor, virtual_document, connection, this, this.status_message);\n            adapter_features.push(feature);\n        }\n        let adapter = new CodeMirrorAdapter(this.virtual_editor, virtual_document, this, adapter_features);\n        console.log('LSP: Adapter for', this.document_path, 'is ready.');\n        // the client is now fully ready: signal to the server that the document is \"open\"\n        connection.sendOpenWhenReady(virtual_document.document_info);\n        return adapter;\n    }\n    update_documents(_slot) {\n        // update the virtual documents (sending the updates to LSP is out of scope here)\n        this.virtual_editor\n            .update_documents()\n            .then()\n            .catch(console.warn);\n    }\n    get_position_from_context_menu() {\n        // Note: could also try using this.app.contextMenu.menu.contentNode position.\n        // Note: could add a guard on this.app.contextMenu.menu.isAttached\n        // get the first node as it gives the most accurate approximation\n        let leaf_node = this.app.contextMenuHitTest(() => true);\n        let { left, top } = leaf_node.getBoundingClientRect();\n        // @ts-ignore\n        let event = this.app._contextMenuEvent;\n        // if possible, use more accurate position from the actual event\n        // (but this relies on an undocumented and unstable feature)\n        if (event !== undefined) {\n            left = event.clientX;\n            top = event.clientY;\n            event.stopPropagation();\n        }\n        return this.virtual_editor.coordsChar({\n            left: left,\n            top: top\n        }, 'window');\n    }\n    get_context(root_position) {\n        let document = this.virtual_editor.document_at_root_position(root_position);\n        let virtual_position = this.virtual_editor.root_position_to_virtual_position(root_position);\n        return {\n            document,\n            connection: this.connection_manager.connections.get(document.id_path),\n            virtual_position,\n            root_position,\n            features: this.get_features(document),\n            editor: this.virtual_editor,\n            app: this.app,\n            adapter: this\n        };\n    }\n    get_context_from_context_menu() {\n        let root_position = this.get_position_from_context_menu();\n        return this.get_context(root_position);\n    }\n    create_tooltip(markup, cm_editor, position) {\n        this.remove_tooltip();\n        const bundle = markup.kind === 'plaintext'\n            ? { 'text/plain': markup.value }\n            : { 'text/markdown': markup.value };\n        const tooltip = new FreeTooltip({\n            anchor: this.widget.content,\n            bundle: bundle,\n            editor: this.find_ce_editor(cm_editor),\n            rendermime: this.rendermime_registry,\n            position: PositionConverter.cm_to_ce(position),\n            moveToLineEnd: false\n        });\n        Widget.attach(tooltip, document.body);\n        this._tooltip = tooltip;\n        return tooltip;\n    }\n    remove_tooltip() {\n        if (this._tooltip !== undefined) {\n            this._tooltip.dispose();\n        }\n    }\n    registerKiteModules(handler, editor, state) {\n        if (handler instanceof CompletionHandler) {\n            this.completion_handler = handler;\n            const kiteModel = new KiteModel();\n            this.completion_handler.completer.model = kiteModel;\n            const kiteCompleter = new KiteCompleter({\n                editor: editor,\n                model: kiteModel\n            }, state);\n            try {\n                const jlCompleter = this.completion_handler.completer;\n                jlCompleter.onUpdateRequest = kiteCompleter.onUpdateRequest;\n            }\n            catch (err) {\n                console.error(err);\n            }\n        }\n    }\n}\n//# sourceMappingURL=jl_adapter.js.map","import { VirtualFileEditor } from '../../virtual/editors/file_editor';\nimport { KiteConnector } from './components/completion';\nimport { JupyterLabWidgetAdapter } from './jl_adapter';\nexport class FileEditorAdapter extends JupyterLabWidgetAdapter {\n    constructor(editor_widget, jumper, app, completion_manager, rendermime_registry, connection_manager, state) {\n        super(app, editor_widget, rendermime_registry, 'completer:invoke-file', connection_manager, state);\n        this.completion_manager = completion_manager;\n        this.jumper = jumper;\n        this.editor = editor_widget.content;\n        this.virtual_editor = new VirtualFileEditor(() => this.language, () => this.language_file_extension, () => this.document_path, this.cm_editor);\n        this.connect_contentChanged_signal();\n        console.log('LSP: file ready for connection:', this.path);\n        // connect the document, but do not open it as the adapter will handle this\n        // after registering all features\n        this.connect_document(this.virtual_editor.virtual_document, false).catch(console.warn);\n        this.editor.model.mimeTypeChanged.connect(this.reload_connection, this);\n    }\n    get document_path() {\n        return this.widget.context.path;\n    }\n    get mime_type() {\n        return this.editor.model.mimeType;\n    }\n    get language_file_extension() {\n        let parts = this.document_path.split('.');\n        return parts[parts.length - 1];\n    }\n    get ce_editor() {\n        return this.editor.editor;\n    }\n    get cm_editor() {\n        return this.ce_editor.editor;\n    }\n    find_ce_editor(cm_editor) {\n        return this.editor.editor;\n    }\n    connect_completion() {\n        this.current_completion_connector = new KiteConnector({\n            editor: this.editor.editor,\n            connections: this.connection_manager.connections,\n            virtual_editor: this.virtual_editor\n        });\n        const handler = this.completion_manager.register({\n            connector: this.current_completion_connector,\n            editor: this.editor.editor,\n            parent: this.widget\n        });\n        this.registerKiteModules(handler, this.editor.editor, this.state);\n    }\n    get path() {\n        return this.widget.context.path;\n    }\n}\n//# sourceMappingURL=file_editor.js.map","import { position_at_offset } from '../positioning';\nexport class RegExpForeignCodeExtractor {\n    constructor(options) {\n        this.language = options.language;\n        this.options = options;\n        this.global_expression = new RegExp(options.pattern, 'g');\n        this.test_expression = new RegExp(options.pattern, 'g');\n        this.expression = new RegExp(options.pattern);\n        this.standalone = this.options.is_standalone;\n        this.file_extension = this.options.file_extension;\n    }\n    has_foreign_code(code) {\n        let result = this.test_expression.test(code);\n        this.test_expression.lastIndex = 0;\n        return result;\n    }\n    extract_foreign_code(code) {\n        let lines = code.split('\\n');\n        let extracts = new Array();\n        let started_from = this.global_expression.lastIndex;\n        let match = this.global_expression.exec(code);\n        let host_code_fragment;\n        while (match != null) {\n            let matched_string = match[0];\n            let position_shift = null;\n            let foreign_code_fragment = matched_string.replace(this.expression, \n            // @ts-ignore\n            this.options.extract_to_foreign);\n            let prefix = '';\n            if (typeof this.options.extract_arguments !== 'undefined') {\n                prefix = matched_string.replace(this.expression, \n                // @ts-ignore\n                this.options.extract_arguments);\n                position_shift = position_at_offset(prefix.length, prefix.split('\\n'));\n            }\n            // NOTE:\n            // match.index + matched_string.length === this.sticky_expression.lastIndex\n            let end_index = this.global_expression.lastIndex;\n            if (this.options.keep_in_host || this.options.keep_in_host == null) {\n                host_code_fragment = code.substring(started_from, end_index);\n            }\n            else {\n                if (started_from === match.index) {\n                    host_code_fragment = '';\n                }\n                else {\n                    host_code_fragment = code.substring(started_from, match.index) + '\\n';\n                }\n            }\n            // TODO: this could be slightly optimized (start at start) by using the match[n],\n            //  where n is the group to be used; while this reduces the flexibility of extract_to_foreign,\n            //  it might be better to enforce such strict requirement\n            let start_offset = match.index + matched_string.indexOf(foreign_code_fragment);\n            let start = position_at_offset(start_offset, lines);\n            let end = position_at_offset(start_offset + foreign_code_fragment.length, lines);\n            extracts.push({\n                host_code: host_code_fragment,\n                foreign_code: prefix + foreign_code_fragment,\n                range: { start, end },\n                virtual_shift: position_shift\n            });\n            started_from = this.global_expression.lastIndex;\n            match = this.global_expression.exec(code);\n        }\n        if (started_from !== code.length) {\n            let final_host_code_fragment = code.substring(started_from, code.length);\n            extracts.push({\n                host_code: final_host_code_fragment,\n                foreign_code: null,\n                range: null,\n                virtual_shift: null\n            });\n        }\n        return extracts;\n    }\n}\n//# sourceMappingURL=regexp.js.map","export const RPY2_MAX_ARGS = 10;\nexport function extract_r_args(args, content_position) {\n    let inputs = [];\n    let outputs = [];\n    let others = [];\n    for (let i = 0; i < args.length; i = i + 2) {\n        let arg = args[i];\n        let variable = args[i + 1];\n        if (arg == null) {\n            break;\n        }\n        else if (arg === 'i' || arg === '-input') {\n            inputs.push(variable);\n        }\n        else if (arg === 'o' || arg === '-output') {\n            outputs.push(variable);\n        }\n        else {\n            others.push('-' + arg + ' ' + variable);\n        }\n    }\n    return {\n        inputs: inputs,\n        outputs: outputs,\n        rest: args[args.length + content_position],\n        others: others\n    };\n}\nexport function parse_r_args(args, content_position) {\n    let { inputs, outputs, rest, others } = extract_r_args(args, content_position);\n    let input_variables = inputs.join(', ');\n    if (input_variables) {\n        input_variables = ', ' + input_variables;\n    }\n    let output_variables = outputs.join(', ');\n    if (output_variables) {\n        output_variables = output_variables + ' = ';\n    }\n    return {\n        content: rest,\n        others: others.join(' '),\n        inputs: input_variables,\n        outputs: output_variables\n    };\n}\nexport function rpy2_reverse_pattern(quote = '\"', multi_line = false) {\n    return ('(\\\\S+)?' +\n        '(?:, (\\\\S+))?'.repeat(9) +\n        '( = )?rpy2\\\\.ipython\\\\.rmagic\\\\.RMagics.R\\\\(' +\n        quote +\n        (multi_line ? '([\\\\s\\\\S]*)' : '(.*?)') +\n        quote +\n        ', \"(.*?)\"' +\n        '(?:, (\\\\S+))?'.repeat(10) +\n        '\\\\)');\n}\nexport function rpy2_reverse_replacement(match, ...args) {\n    let outputs = [];\n    for (let i = 0; i < 10; i++) {\n        if (args[i] == null) {\n            break;\n        }\n        outputs.push(args[i]);\n    }\n    let inputs = [];\n    for (let i = 13; i < 23; i++) {\n        if (args[i] == null) {\n            break;\n        }\n        inputs.push(args[i]);\n    }\n    let input_variables = inputs.join(' -i ');\n    if (input_variables) {\n        input_variables = ' -i ' + input_variables;\n    }\n    let output_variables = outputs.join(' -o ');\n    if (output_variables) {\n        output_variables = ' -o ' + output_variables;\n    }\n    let contents = args[11];\n    let other_args = args[12];\n    if (other_args) {\n        other_args = ' ' + other_args;\n    }\n    return {\n        input: input_variables,\n        output: output_variables,\n        other: other_args,\n        contents: contents\n    };\n}\nexport function rpy2_args_pattern(max_n) {\n    return '(?: -(\\\\S+) (\\\\S+))?'.repeat(max_n);\n}\n//# sourceMappingURL=rpy2.js.map","import { RegExpForeignCodeExtractor } from './regexp';\nimport { extract_r_args, rpy2_args_pattern, RPY2_MAX_ARGS } from '../magics/rpy2';\nfunction rpy2_code_extractor(match, ...args) {\n    let r = extract_r_args(args, -3);\n    let code;\n    if (r.rest == null) {\n        code = '';\n    }\n    else {\n        code = r.rest.startsWith(' ') ? r.rest.slice(1) : r.rest;\n    }\n    return code;\n}\nfunction rpy2_args(match, ...args) {\n    let r = extract_r_args(args, -3);\n    // define dummy input variables using empty data frames\n    let inputs = r.inputs.map(i => i + ' <- data.frame();').join(' ');\n    let code = rpy2_code_extractor(match, ...args);\n    if (inputs !== '' && code) {\n        inputs += ' ';\n    }\n    return inputs;\n}\n// TODO: make the regex code extractors configurable\nexport let foreign_code_extractors = {\n    // general note: to match new lines use [^] instead of dot, unless the target is ES2018, then use /s\n    python: [\n        //\n        // R magics (non-standalone: the R code will always be in the same, single R-namespace)\n        //\n        new RegExpForeignCodeExtractor({\n            language: 'r',\n            pattern: '^%%R' + rpy2_args_pattern(RPY2_MAX_ARGS) + '\\n([^]*)',\n            extract_to_foreign: rpy2_code_extractor,\n            extract_arguments: rpy2_args,\n            is_standalone: false,\n            file_extension: 'R'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'r',\n            pattern: '(?:^|\\n)%R' + rpy2_args_pattern(RPY2_MAX_ARGS) + '( .*)?\\n?',\n            extract_to_foreign: rpy2_code_extractor,\n            extract_arguments: rpy2_args,\n            is_standalone: false,\n            file_extension: 'R'\n        }),\n        //\n        // Standalone IPython magics\n        // (script magics are standalone, i.e. consecutive code cells with the same magic create two different namespaces)\n        //\n        new RegExpForeignCodeExtractor({\n            language: 'python',\n            pattern: '^%%(python|python2|python3|pypy)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: true,\n            file_extension: 'py'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'perl',\n            pattern: '^%%(perl)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: true,\n            file_extension: 'pl'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'ruby',\n            pattern: '^%%(ruby)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: true,\n            file_extension: 'rb'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'sh',\n            pattern: '^%%(sh|bash)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: true,\n            file_extension: 'sh'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'html',\n            pattern: '^%%(html --isolated)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: true,\n            file_extension: 'html'\n        }),\n        //\n        // IPython magics producing continuous documents (non-standalone):\n        //\n        new RegExpForeignCodeExtractor({\n            language: 'js',\n            pattern: '^%%(js|javascript)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: false,\n            file_extension: 'js'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'html',\n            pattern: '^%%(html)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: false,\n            file_extension: 'html'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'latex',\n            pattern: '^%%(latex)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: false,\n            file_extension: 'latex'\n        }),\n        new RegExpForeignCodeExtractor({\n            language: 'markdown',\n            pattern: '^%%(markdown)( .*?)?\\n([^]*)',\n            extract_to_foreign: '$3',\n            is_standalone: false,\n            file_extension: 'md'\n        })\n    ]\n};\n//# sourceMappingURL=defaults.js.map","import { parse_r_args, rpy2_args_pattern, RPY2_MAX_ARGS, rpy2_reverse_pattern, rpy2_reverse_replacement } from './rpy2';\nfunction escape(x) {\n    return x.replace(/\"/g, '\\\\\"');\n}\nfunction unescape(x) {\n    return x.replace(/\\\\\"/g, '\"');\n}\nfunction empty_or_escaped(x) {\n    if (!x) {\n        return '';\n    }\n    else {\n        return escape(x);\n    }\n}\n/**\n * Interactive kernels often provide additional functionality invoked by so-called magics,\n * which use distinctive syntax. This features may however not be interpreted correctly by\n * the general purpose language linters. To avoid false-positives making the linter useless\n * for any specific language when magics are used, regular expressions can be used to replace\n * the magics with linter-friendly substitutes; this will be made user configurable.\n */\nexport const language_specific_overrides = {\n    python: {\n        // if a match for expresion in the key is found against a line, the line is replaced with the value\n        line_magics: [\n            // filter out IPython line magics and shell assignments:\n            //  keep the content, keep magic/command name and new line at the end\n            // note magics do not have to start with the new line, for example x = !ls or x = %ls are both valid.\n            {\n                pattern: '!(\\\\S+)(.*)(\\n)?',\n                replacement: 'get_ipython().getoutput(\"$1$2\")$3',\n                reverse: {\n                    pattern: 'get_ipython\\\\(\\\\).getoutput\\\\(\"(.*?)\"\\\\)(\\n)?',\n                    replacement: '!$1$2'\n                }\n            },\n            {\n                // support up to 10 arguments\n                pattern: '%R' + rpy2_args_pattern(RPY2_MAX_ARGS) + '(.*)(\\n)?',\n                replacement: (match, ...args) => {\n                    let r = parse_r_args(args, -4);\n                    return `${r.outputs}rpy2.ipython.rmagic.RMagics.R(\"${r.content}\", \"${r.others}\"${r.inputs})`;\n                },\n                reverse: {\n                    pattern: rpy2_reverse_pattern(),\n                    replacement: (match, ...args) => {\n                        let r = rpy2_reverse_replacement(match, ...args);\n                        return '%R' + r.input + r.output + r.other + r.contents;\n                    }\n                }\n            },\n            {\n                pattern: '%(\\\\S+)(.*)(\\n)?',\n                replacement: (match, name, args, line_break) => {\n                    args = empty_or_escaped(args);\n                    line_break = line_break || '';\n                    return `get_ipython().run_line_magic(\"${name}\", \"${args}\")${line_break}`;\n                },\n                reverse: {\n                    pattern: 'get_ipython\\\\(\\\\).run_line_magic\\\\(\"(.*?)\", \"(.*?)\"\\\\)(\\n)?',\n                    replacement: (match, name, args) => {\n                        args = unescape(args);\n                        return `%${name}${args}`;\n                    }\n                }\n            }\n        ],\n        // if a match for expresion in the key is found at the beginning of a cell, the entire cell is replaced with the value\n        cell_magics: [\n            // rpy2 extension R magic - this should likely go as an example to the user documentation, rather than being a default\n            //   only handles simple one input - one output case\n            {\n                pattern: '^%%R' + rpy2_args_pattern(RPY2_MAX_ARGS) + '(\\n)?([\\\\s\\\\S]*)',\n                replacement: (match, ...args) => {\n                    let r = parse_r_args(args, -3);\n                    return `${r.outputs}rpy2.ipython.rmagic.RMagics.R(\"\"\"${r.content}\"\"\", \"${r.others}\"${r.inputs})`;\n                },\n                reverse: {\n                    pattern: rpy2_reverse_pattern('\"\"\"', true),\n                    replacement: (match, ...args) => {\n                        let r = rpy2_reverse_replacement(match, ...args);\n                        return '%%R' + r.input + r.output + r.other + '\\n' + r.contents;\n                    }\n                }\n            },\n            {\n                pattern: '^%%(\\\\S+)(.*\\n)([\\\\s\\\\S]*)',\n                replacement: (match, name, first_line, content, offset, entire) => {\n                    first_line = empty_or_escaped(first_line);\n                    if (first_line) {\n                        // remove the new line\n                        first_line = first_line.slice(0, -1);\n                    }\n                    content = content.replace(/\"\"\"/g, '\\\\\"\\\\\"\\\\\"');\n                    return `get_ipython().run_cell_magic(\"${name}\", \"${first_line}\", \"\"\"${content}\"\"\")`;\n                },\n                reverse: {\n                    pattern: '^get_ipython\\\\(\\\\).run_cell_magic\\\\(\"(.*?)\", \"(.*?)\", \"\"\"([\\\\s\\\\S]*)\"\"\"\\\\)',\n                    replacement: (match, name, line, content) => {\n                        content = content.replace(/\\\\\"\\\\\"\\\\\"/g, '\"\"\"');\n                        line = unescape(line);\n                        return `%%${name}${line}\\n${content}`;\n                    }\n                }\n            }\n        ]\n    }\n};\n//# sourceMappingURL=defaults.js.map","import { VirtualEditor } from '../editor';\n// @ts-ignore\nclass DocDispatcher {\n    constructor(virtual_notebook) {\n        this.virtual_editor = virtual_notebook;\n    }\n    markText(from, to, options) {\n        // TODO: edgecase: from and to in different cells\n        let editor = this.virtual_editor.virtual_document.get_editor_at_source_line(from);\n        let notebook_map = this.virtual_editor;\n        return editor\n            .getDoc()\n            .markText(notebook_map.transform_from_root_to_editor(from), notebook_map.transform_from_root_to_editor(to), options);\n    }\n    getCursor(start) {\n        let cell = this.virtual_editor.notebook.activeCell;\n        if (cell == null) {\n            return;\n        }\n        let active_editor = cell.editor;\n        let cursor = active_editor.editor\n            .getDoc()\n            .getCursor(start);\n        return this.virtual_editor.transform_from_notebook_to_root(cell, cursor);\n    }\n}\nexport class VirtualEditorForNotebook extends VirtualEditor {\n    constructor(notebook, wrapper, language, file_extension, overrides_registry, foreign_code_extractors, path) {\n        super(language, file_extension, () => path() + '.' + file_extension(), overrides_registry, foreign_code_extractors, false);\n        this.notebook = notebook;\n        this.wrapper = wrapper;\n        this.has_cells = true;\n        this.cell_to_corresponding_source_line = new Map();\n        this.cm_editor_to_cell = new Map();\n        this.overrides_registry = overrides_registry;\n        this.code_extractors = foreign_code_extractors;\n        this.language = language;\n        this._proxy = new Proxy(this, {\n            get: function (target, prop, receiver) {\n                if (!(prop in target)) {\n                    console.warn(`Unimplemented method ${prop} for VirtualEditorForNotebook`);\n                    return;\n                }\n                else {\n                    return Reflect.get(target, prop, receiver);\n                }\n            }\n        });\n        return this._proxy;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.cm_editor_to_cell.clear();\n        this.cell_to_corresponding_source_line.clear();\n        super.dispose();\n        // just to be sure\n        this.forEveryBlockEditor = null;\n        this._proxy = null;\n    }\n    transform_from_notebook_to_root(cell, position) {\n        // TODO: if cell is not known, refresh\n        let shift = this.cell_to_corresponding_source_line.get(cell);\n        if (shift === undefined) {\n            throw Error('Cell not found in cell_line_map');\n        }\n        return Object.assign(Object.assign({}, position), { line: position.line + shift });\n    }\n    transform_editor_to_root(cm_editor, position) {\n        let cell = this.cm_editor_to_cell.get(cm_editor);\n        return this.transform_from_notebook_to_root(cell, position);\n    }\n    transform_from_root_to_editor(pos) {\n        // from notebook to editor space\n        return this.virtual_document.transform_source_to_editor(pos);\n    }\n    get_editor_index(position) {\n        let cell = this.get_cell_at(position);\n        return this.notebook.widgets.findIndex(other_cell => {\n            return cell === other_cell;\n        });\n    }\n    get_cm_editor(position) {\n        return this.get_editor_at_root_line(position);\n    }\n    addKeyMap(map, bottom) {\n        return;\n    }\n    addLineClass(line, where, _class) {\n        return undefined;\n    }\n    addLineWidget(line, node, options) {\n        return undefined;\n    }\n    addOverlay(mode, options) {\n        for (let cell of this.notebook.widgets) {\n            // TODO: use some more intelligent strategy to determine editors to test\n            let cm_editor = cell.editor;\n            cm_editor.editor.addOverlay(mode, options);\n        }\n    }\n    addPanel(node, \n    // @ts-ignore\n    options\n    // @ts-ignore\n    ) {\n        return undefined;\n    }\n    charCoords(pos, mode) {\n        try {\n            let editor = this.get_editor_at_root_line(pos);\n            return editor.charCoords(pos, mode);\n        }\n        catch (e) {\n            console.log(e);\n            return { bottom: 0, left: 0, right: 0, top: 0 };\n        }\n    }\n    coordsChar(object, mode) {\n        for (let cell of this.notebook.widgets) {\n            // TODO: use some more intelligent strategy to determine editors to test\n            let cm_editor = cell.editor;\n            let pos = cm_editor.editor.coordsChar(object, mode);\n            if (pos.outside === 1) {\n                continue;\n            }\n            return this.transform_from_notebook_to_root(cell, pos);\n        }\n    }\n    cursorCoords(where, mode) {\n        if (typeof where !== 'boolean') {\n            let editor = this.get_editor_at_root_line(where);\n            return editor.cursorCoords(this.transform_from_root_to_editor(where));\n        }\n        return { bottom: 0, left: 0, top: 0 };\n    }\n    get any_editor() {\n        return this.notebook.widgets[0].editor.editor;\n    }\n    defaultCharWidth() {\n        return this.any_editor.defaultCharWidth();\n    }\n    defaultTextHeight() {\n        return this.any_editor.defaultTextHeight();\n    }\n    endOperation() {\n        for (let cell of this.notebook.widgets) {\n            let cm_editor = cell.editor;\n            cm_editor.editor.endOperation();\n        }\n    }\n    execCommand(name) {\n        for (let cell of this.notebook.widgets) {\n            let cm_editor = cell.editor;\n            cm_editor.editor.execCommand(name);\n        }\n    }\n    getDoc() {\n        let dummy_doc = new DocDispatcher(this);\n        // @ts-ignore\n        return dummy_doc;\n    }\n    get_editor_at_root_line(pos) {\n        return this.virtual_document.root.get_editor_at_source_line(pos);\n    }\n    getTokenAt(pos, precise) {\n        if (pos === undefined) {\n            return;\n        }\n        let editor = this.get_editor_at_root_line(pos);\n        return editor.getTokenAt(this.transform_from_root_to_editor(pos));\n    }\n    getTokenTypeAt(pos) {\n        let editor = this.virtual_document.get_editor_at_source_line(pos);\n        return editor.getTokenTypeAt(this.transform_from_root_to_editor(pos));\n    }\n    // TODO: make a mapper class, with mapping function only\n    get_cell_at(pos) {\n        let cm_editor = this.get_editor_at_virtual_line(pos);\n        return this.cm_editor_to_cell.get(cm_editor);\n    }\n    get_editor_at_virtual_line(pos) {\n        return this.virtual_document.get_editor_at_virtual_line(pos);\n    }\n    perform_documents_update() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.virtual_document.clear();\n        this.cell_to_corresponding_source_line.clear();\n        this.cm_editor_to_cell.clear();\n        if (this.notebook.isDisposed) {\n            return;\n        }\n        this.notebook.widgets.every(cell => {\n            let codemirror_editor = cell.editor;\n            let cm_editor = codemirror_editor.editor;\n            this.cm_editor_to_cell.set(cm_editor, cell);\n            if (cell.model.type === 'code') {\n                let cell_code = cm_editor.getValue();\n                // every code cell is placed into the cell-map\n                this.cell_to_corresponding_source_line.set(cell, this.virtual_document.last_source_line);\n                this.virtual_document.append_code_block(cell_code, cm_editor);\n            }\n            return true;\n        });\n    }\n    getWrapperElement() {\n        return this.wrapper;\n    }\n    heightAtLine(line, mode, includeWidgets) {\n        return 0;\n    }\n    isReadOnly() {\n        return false;\n    }\n    lineAtHeight(height, mode) {\n        return 0;\n    }\n    addEventListener(type, listener) {\n        this.forEveryBlockEditor(cm_editor => {\n            cm_editor.getWrapperElement().addEventListener(type, listener);\n        });\n    }\n    forEveryBlockEditor(callback, monitor_for_new_blocks = true) {\n        const cells_with_handlers = new Set();\n        for (let cell of this.notebook.widgets) {\n            let cm_editor = cell.editor.editor;\n            if (cell.model.type === 'code') {\n                cells_with_handlers.add(cell);\n                callback(cm_editor);\n            }\n        }\n        if (monitor_for_new_blocks) {\n            this.notebook.activeCellChanged.connect((notebook, cell) => {\n                if (cell == null) {\n                    return;\n                }\n                let cm_editor = cell.editor.editor;\n                if (!cells_with_handlers.has(cell) && cell.model.type === 'code') {\n                    callback(cm_editor);\n                }\n            });\n        }\n    }\n    /**\n     * Find a cell in notebook which uses given CodeMirror editor.\n     * This function is O(n) - when looking up many cells\n     * using a hashmap based approach may be more efficient.\n     * @param cm_editor\n     */\n    find_cell_by_editor(cm_editor) {\n        let cells = this.notebook.widgets;\n        for (let i = 0; i < cells.length; i++) {\n            let cell = cells[i];\n            let cell_editor = cell.editor.editor;\n            if (cell_editor === cm_editor) {\n                return {\n                    cell_id: i,\n                    cell: cell\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=notebook.js.map","import { foreign_code_extractors } from '../../extractors/defaults';\nimport { language_specific_overrides } from '../../magics/defaults';\nimport { until_ready } from '../../utils';\nimport { VirtualEditorForNotebook } from '../../virtual/editors/notebook';\nimport { KiteConnector } from './components/completion';\nimport { JupyterLabWidgetAdapter } from './jl_adapter';\nexport class NotebookAdapter extends JupyterLabWidgetAdapter {\n    constructor(editor_widget, jumper, app, completion_manager, rendermime_registry, connection_manager, state) {\n        super(app, editor_widget, rendermime_registry, 'completer:invoke-notebook', connection_manager, state);\n        this.is_ready = () => {\n            var _a;\n            return (!this.widget.isDisposed &&\n                this.widget.context.isReady &&\n                this.widget.content.isVisible &&\n                this.widget.content.widgets.length > 0 &&\n                ((_a = this.widget.context.sessionContext.session) === null || _a === void 0 ? void 0 : _a.kernel) != null);\n        };\n        this.editor = editor_widget.content;\n        this.completion_manager = completion_manager;\n        this.jumper = jumper;\n        this.init_once_ready().catch(console.warn);\n    }\n    async update_language_info() {\n        this._language_info = (await this.widget.context.sessionContext.session.kernel.info).language_info;\n    }\n    async on_kernel_changed(_session, change) {\n        if (!change.newValue) {\n            console.log('LSP: kernel was shut down');\n            return;\n        }\n        try {\n            await this.update_language_info();\n            console.log(`LSP: Changed to ${this._language_info.name} kernel, reconnecting`);\n            await until_ready(this.is_ready, -1);\n            this.reload_connection();\n        }\n        catch (err) {\n            console.warn(err);\n            // try to reconnect anyway\n            this.reload_connection();\n        }\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.widget.context.sessionContext.kernelChanged.disconnect(this.on_kernel_changed, this);\n        this.widget.content.activeCellChanged.disconnect(this.on_completions, this);\n        if (this.current_completion_handler) {\n            delete this.current_completion_handler.connector;\n            delete this.current_completion_handler.editor;\n            delete this.current_completion_handler;\n        }\n        super.dispose();\n    }\n    get document_path() {\n        return this.widget.context.path;\n    }\n    language_info() {\n        return this._language_info;\n    }\n    get mime_type() {\n        let language_metadata = this.language_info();\n        if (!language_metadata) {\n            // fallback to the code cell mime type if no kernel in use\n            return this.widget.content.codeMimetype;\n        }\n        return language_metadata.mimetype;\n    }\n    get language_file_extension() {\n        let language_metadata = this.language_info();\n        if (!language_metadata) {\n            return null;\n        }\n        return language_metadata.file_extension.replace('.', '');\n    }\n    find_ce_editor(cm_editor) {\n        return this.virtual_editor.cm_editor_to_cell.get(cm_editor).editor;\n    }\n    async init_once_ready() {\n        console.log('LSP: waiting for', this.document_path, 'to fully load');\n        await this.widget.context.sessionContext.ready;\n        await until_ready(this.is_ready, -1);\n        await this.update_language_info();\n        console.log('LSP:', this.document_path, 'ready for connection');\n        this.virtual_editor = new VirtualEditorForNotebook(this.widget.content, this.widget.node, () => this.language, () => this.language_file_extension, language_specific_overrides, foreign_code_extractors, () => this.document_path);\n        this.connect_contentChanged_signal();\n        // connect the document, but do not open it as the adapter will handle this\n        // after registering all features\n        this.connect_document(this.virtual_editor.virtual_document, false).catch(console.warn);\n        this.widget.context.sessionContext.kernelChanged.connect(this.on_kernel_changed, this);\n    }\n    set_completion_connector(cell) {\n        if (this.current_completion_connector) {\n            delete this.current_completion_connector;\n        }\n        this.current_completion_connector = new KiteConnector({\n            editor: cell.editor,\n            connections: this.connection_manager.connections,\n            virtual_editor: this.virtual_editor,\n            session: this.widget.sessionContext.session\n        });\n    }\n    connect_completion() {\n        // see https://github.com/jupyterlab/jupyterlab/blob/c0e9eb94668832d1208ad3b00a9791ef181eca4c/packages/completer-extension/src/index.ts#L198-L213\n        const cell = this.widget.content.activeCell;\n        console.log('Connecting Completion Notebook');\n        if (cell == null) {\n            return;\n        }\n        this.set_completion_connector(cell);\n        const handler = this.completion_manager.register({\n            connector: this.current_completion_connector,\n            editor: cell.editor,\n            parent: this.widget\n        });\n        this.current_completion_handler = handler;\n        this.registerKiteModules(handler, cell.editor, this.state);\n        this.widget.content.activeCellChanged.connect(this.on_completions, this);\n    }\n    on_completions(notebook, cell) {\n        if (cell == null) {\n            return;\n        }\n        this.current_completion_connector.abort();\n        this.set_completion_connector(cell);\n        this.current_completion_handler.editor = cell.editor;\n        this.current_completion_handler.connector = this.current_completion_connector;\n    }\n}\n//# sourceMappingURL=notebook.js.map","import { CommandEntryPoint } from './adapters/codemirror/feature';\nimport { PositionConverter } from './converter';\nexport const file_editor_adapters = new Map();\nexport const notebook_adapters = new Map();\nfunction is_context_menu_over_token(adapter) {\n    let position = adapter.get_position_from_context_menu();\n    if (!position) {\n        return false;\n    }\n    let token = adapter.virtual_editor.getTokenAt(position);\n    return token.string !== '';\n}\nclass LSPCommandManager {\n    constructor(app, palette, tracker, suffix) {\n        this.app = app;\n        this.palette = palette;\n        this.tracker = tracker;\n        this.suffix = suffix;\n        this.add_to_palette = true;\n        this.category = 'Language Server Protocol';\n    }\n    add(commands) {\n        for (let cmd of commands) {\n            let id = this.create_id(cmd);\n            this.app.commands.addCommand(id, {\n                execute: () => this.execute(cmd),\n                isEnabled: () => this.is_enabled(cmd),\n                isVisible: () => this.is_visible(cmd),\n                label: cmd.label\n            });\n            if (this.should_attach(cmd)) {\n                this.attach_command(cmd);\n            }\n            if (this.add_to_palette) {\n                this.palette.addItem({ command: id, category: this.category });\n            }\n        }\n    }\n    should_attach(command) {\n        if (command.attach_to == null) {\n            return true;\n        }\n        return command.attach_to.has(this.entry_point);\n    }\n    create_id(command) {\n        return 'lsp:' + command.id + '-' + this.suffix;\n    }\n}\n/**\n * Contextual commands, with the context retrieved from the ContextMenu\n * position (if open) or from the cursor in the current widget.\n */\nexport class ContextCommandManager extends LSPCommandManager {\n    constructor(app, palette, tracker, suffix, rank_group, rank_group_size) {\n        super(app, palette, tracker, suffix);\n        this.rank_group = rank_group;\n        this.rank_group_size = rank_group_size;\n    }\n    attach_command(command) {\n        this.app.contextMenu.addItem({\n            selector: this.selector,\n            command: this.create_id(command),\n            rank: this.get_rank(command)\n        });\n    }\n    add_context_separator(position_in_group) {\n        this.app.contextMenu.addItem({\n            type: 'separator',\n            selector: this.selector,\n            rank: this.rank_group + position_in_group\n        });\n    }\n    execute(command) {\n        let context = this.get_context();\n        if (context) {\n            command.execute(context);\n        }\n    }\n    get is_context_menu_open() {\n        return this.app.contextMenu.menu.isAttached;\n    }\n    get is_widget_current() {\n        // is the current widget of given type (notebook/editor)\n        // also the currently used widget in the entire app?\n        return (this.tracker.currentWidget != null &&\n            this.tracker.currentWidget === this.app.shell.currentWidget);\n    }\n    is_enabled() {\n        if (this.is_context_menu_open) {\n            return is_context_menu_over_token(this.current_adapter);\n        }\n        else {\n            return this.is_widget_current;\n        }\n    }\n    get_context() {\n        let context = null;\n        if (this.is_context_menu_open) {\n            try {\n                context = this.current_adapter.get_context_from_context_menu();\n            }\n            catch (e) {\n                console.warn('contextMenu is attached, but could not get the context', e);\n                context = null;\n            }\n        }\n        if (context == null) {\n            context = this.context_from_active_document();\n        }\n        return context;\n    }\n    is_visible(command) {\n        var _a;\n        try {\n            let context = this.get_context();\n            return (context != null &&\n                this.current_adapter && ((_a = context.connection) === null || _a === void 0 ? void 0 : _a.isReady) &&\n                command.is_enabled(context));\n        }\n        catch (e) {\n            console.warn('is_visible failed', e);\n            return false;\n        }\n    }\n    get_rank(command) {\n        let is_relative = command.is_rank_relative == null ? true : command.is_rank_relative;\n        if (is_relative && this.rank_group != null && this.rank_group_size) {\n            let relative = command.rank != null ? command.rank : 0;\n            return this.rank_group + relative / this.rank_group_size;\n        }\n        else {\n            return command.rank != null ? command.rank : Infinity;\n        }\n    }\n}\nexport class NotebookCommandManager extends ContextCommandManager {\n    constructor() {\n        super(...arguments);\n        this.selector = '.jp-Notebook .jp-CodeCell .jp-Editor';\n        this.entry_point = CommandEntryPoint.CellContextMenu;\n    }\n    get current_adapter() {\n        let notebook = this.tracker.currentWidget;\n        return notebook_adapters.get(notebook.id);\n    }\n    context_from_active_document() {\n        var _a, _b;\n        if (!this.is_widget_current) {\n            return null;\n        }\n        let notebook = this.tracker.currentWidget;\n        let cell = notebook.content.activeCell;\n        let editor = cell.editor;\n        let ce_cursor = editor.getCursorPosition();\n        let cm_cursor = PositionConverter.ce_to_cm(ce_cursor);\n        let virtual_editor = (_a = this.current_adapter) === null || _a === void 0 ? void 0 : _a.virtual_editor;\n        if (!virtual_editor) {\n            return null;\n        }\n        let root_position = virtual_editor.transform_from_notebook_to_root(cell, cm_cursor);\n        return (_b = this.current_adapter) === null || _b === void 0 ? void 0 : _b.get_context(root_position);\n    }\n}\nexport class FileEditorCommandManager extends ContextCommandManager {\n    constructor() {\n        super(...arguments);\n        this.selector = '.jp-FileEditor';\n        this.entry_point = CommandEntryPoint.FileEditorContextMenu;\n    }\n    get current_adapter() {\n        var _a, _b;\n        let fileEditorId = (_b = (_a = this.tracker.currentWidget) === null || _a === void 0 ? void 0 : _a.content) === null || _b === void 0 ? void 0 : _b.id;\n        return fileEditorId && file_editor_adapters.get(fileEditorId);\n    }\n    context_from_active_document() {\n        var _a;\n        if (!this.is_widget_current) {\n            return null;\n        }\n        let editor = this.tracker.currentWidget.content.editor;\n        let ce_cursor = editor.getCursorPosition();\n        let root_position = PositionConverter.ce_to_cm(ce_cursor);\n        return (_a = this.current_adapter) === null || _a === void 0 ? void 0 : _a.get_context(root_position);\n    }\n}\n//# sourceMappingURL=command_manager.js.map","import { toggle } from './adapters/jupyterlab/kite_completer';\nexport const category = 'kite';\nexport const cmdIds = {\n    tutorial: 'kite:tutorial',\n    copilot: 'kite:copilot',\n    settings: 'kite:settings',\n    help: 'kite:help',\n    toggleDocs: 'kite:toggle-docs'\n};\nconst paletteCommands = [\n    {\n        id: cmdIds.copilot,\n        options: {\n            label: 'Kite: Open Copilot',\n            execute: () => {\n                window.open('kite://home');\n            }\n        }\n    },\n    {\n        id: cmdIds.settings,\n        options: {\n            label: 'Kite: Engine Settings',\n            execute: () => {\n                window.open('kite://settings');\n            }\n        }\n    },\n    {\n        id: cmdIds.help,\n        options: {\n            label: 'Kite: Help',\n            execute: () => {\n                window.open('https://help.kite.com/category/138-jupyterlab-plugin');\n            }\n        }\n    },\n    {\n        id: cmdIds.toggleDocs,\n        options: {\n            label: 'Kite: Toggle Docs Panel',\n            execute: () => {\n                toggle();\n            }\n        }\n    }\n];\nexport function registerKiteCommands(app, palette) {\n    // Register palette commands\n    paletteCommands.forEach(cmd => {\n        app.commands.addCommand(cmd.id, cmd.options);\n        palette.addItem({ command: cmd.id, category });\n    });\n}\n//# sourceMappingURL=kite_commands.js.map","import { category, cmdIds } from './kite_commands';\nimport { VirtualDocument } from './virtual/document';\nexport const onboardingShownKey = 'onboardingShown';\nexport class KiteOnboarding {\n    constructor(app, palette, documentManager, state, connectionManager) {\n        this.app = app;\n        this.palette = palette;\n        this.documentManager = documentManager;\n        this.state = state;\n        this.connectionManager = connectionManager;\n        this.registerCommand();\n    }\n    registerCommand() {\n        const cmd = {\n            id: cmdIds.tutorial,\n            options: {\n                label: 'Kite: Tutorial',\n                execute: () => {\n                    this._show();\n                }\n            }\n        };\n        if (this.app.commands.hasCommand(cmd.id)) {\n            return;\n        }\n        this.app.commands.addCommand(cmd.id, cmd.options);\n        this.palette.addItem({ command: cmd.id, category });\n    }\n    async showOnBoot() {\n        const onboardingShown = await this.state.fetch(onboardingShownKey);\n        if (!onboardingShown) {\n            this._show();\n        }\n        this.state.save(onboardingShownKey, true);\n    }\n    async _fetch() {\n        // Enable connection even without open document\n        const emptyVirtualDocument = new VirtualDocument('python', '', {}, {}, false, '.py', false);\n        const options = {\n            virtual_document: emptyVirtualDocument,\n            language: 'python',\n            document_path: ''\n        };\n        const connection = await this.connectionManager.connect(options);\n        if (connection) {\n            return connection.fetchKiteOnboarding();\n        }\n        else {\n            return '';\n        }\n    }\n    async _show() {\n        const filename = await this._fetch();\n        if (filename) {\n            this.documentManager.openOrReveal(filename);\n        }\n    }\n}\n//# sourceMappingURL=kite_onboarding.js.map","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./kite_accessible.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { ServerConnection } from '@jupyterlab/services';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { ListModel } from '@jupyterlab/extensionmanager';\nimport { INotification } from 'jupyterlab_toastify';\nimport React from 'react';\nimport Semver from 'semver';\nimport { ILanguageServerManager } from './tokens';\nimport { VirtualDocument } from './virtual/document';\nimport '../style/kite_accessible.css';\nvar Health;\n(function (Health) {\n    Health[\"RequirementsNotMet\"] = \"RequirementsNotMet\";\n    Health[\"KiteEngineNotInstalled\"] = \"KiteNotInstalled\";\n    Health[\"BelowMinJLabVersion\"] = \"BelowMinJLabVersion\";\n    Health[\"IncompatibleJLabLSPPlugin\"] = \"HasIncompatibleJLabLSP\";\n    Health[\"JLabKiteHasUpdate\"] = \"JLabKiteHasUpdate\";\n    Health[\"Healthy\"] = \"Healthy\";\n})(Health || (Health = {}));\nconst _MinJlabVersion = '2.2.0';\n// KiteAccessible must access fetchInstalled, etc\nexport class KiteAccessible extends ListModel {\n    constructor(serviceManager, settings, connectionManager) {\n        super(serviceManager, settings);\n        this.connectionManager = connectionManager;\n    }\n    async checkHealth() {\n        try {\n            const health = await this.getHealth();\n            await this.notifyHealth(health);\n            if (health === Health.IncompatibleJLabLSPPlugin) {\n                this.trackIncompatiblity();\n            }\n        }\n        catch (e) {\n            console.log('Health check failed:', e);\n        }\n    }\n    async notifyHealth(health) {\n        const baseToastOptions = {\n            autoClose: false,\n            closeOnClick: false,\n            className: '--jp-kite-notifcontainer'\n        };\n        let id;\n        switch (health) {\n            case Health.RequirementsNotMet:\n                id = await INotification.notify(React.createElement(InnerNotif, { title: \"Kite is missing some dependencies\" },\n                    React.createElement(\"p\", { className: \"--jp-kite-innernotif-main-msg\" }, \"The jupyterlab-kite extension will not work because you using an unsupported version of JupyterLab and you are missing the desktop application.\"),\n                    React.createElement(\"p\", null, \"To fix this, please upgrade JupyterLab to version 2.2 or later and install the Kite Engine desktop application.\"),\n                    React.createElement(ButtonBar, { label: \"Fix This\", onClick: () => {\n                            window.open('https://www.kite.com/download?utm_source=jupyterlab-plugin&utm_content=update-jlab', '_blank');\n                            INotification.dismiss(id);\n                        } })), Object.assign(Object.assign({}, baseToastOptions), { type: 'error' }));\n                break;\n            case Health.BelowMinJLabVersion:\n                id = await INotification.notify(React.createElement(InnerNotif, { title: \"Kite is missing some dependencies\" },\n                    React.createElement(\"p\", { className: \"--jp-kite-innernotif-main-msg\" }, \"The jupyterlab-kite extension will not work because you are using an unsupported version of JupyterLab.\"),\n                    React.createElement(\"p\", null, \"To fix this, please upgrade JupyterLab to version 2.2 or later.\"),\n                    React.createElement(ButtonBar, { label: \"Fix This\", onClick: () => {\n                            window.open('https://stackoverflow.com/questions/55772171/how-to-update-jupyterlab-using-conda-or-pip', '_blank');\n                            INotification.dismiss(id);\n                        } })), Object.assign(Object.assign({}, baseToastOptions), { type: 'error' }));\n                break;\n            case Health.KiteEngineNotInstalled:\n                id = await INotification.notify(React.createElement(InnerNotif, { title: \"Kite is missing some dependencies\" },\n                    React.createElement(\"p\", { className: \"--jp-kite-innernotif-main-msg\" }, \"The jupyterlab-kite extension will not work because you are missing the Kite Engine desktop application.\"),\n                    React.createElement(\"p\", null, \"To fix this, please install the Kite Engine desktop application.\"),\n                    React.createElement(ButtonBar, { label: \"Fix This\", onClick: () => {\n                            window.open('https://www.kite.com/download?utm_source=jupyterlab-plugin', '_blank');\n                            INotification.dismiss(id);\n                        } })), Object.assign(Object.assign({}, baseToastOptions), { type: 'error' }));\n                break;\n            case Health.IncompatibleJLabLSPPlugin:\n                id = await INotification.notify(React.createElement(InnerNotif, { title: \"Kite may not work properly in your environment\" },\n                    React.createElement(\"p\", { className: \"--jp-kite-innernotif-main-msg\" }, \"The jupyterlab-kite extension is incompatible with your JupyterLab configuration.\"),\n                    React.createElement(\"p\", null, \"It will not work with the jupyterlab-lsp extension.\"),\n                    React.createElement(ButtonBar, { label: \"Learn More\", onClick: () => {\n                            window.open('https://help.kite.com/article/143-how-to-install-the-jupyterlab-plugin#troubleshooting', '_blank');\n                            INotification.dismiss(id);\n                        } })), Object.assign(Object.assign({}, baseToastOptions), { type: 'warning' }));\n                break;\n            case Health.JLabKiteHasUpdate:\n                id = await INotification.notify(React.createElement(React.Fragment, null,\n                    React.createElement(InnerNotif, { title: \"There is a new version of Kite available\" },\n                        React.createElement(\"p\", { className: \"--jp-kite-innernotif-main-msg\" }, \"Please update your jupyterlab-kite extension with the terminal commands:\"),\n                        React.createElement(\"ul\", { className: \"--jp-kite-innernotif-list --jp-kite-innernotif-no-bullets\" },\n                            React.createElement(\"li\", { className: \"--jp-kite-innernotif-li\" }, \"pip install --upgrade jupyter-kite\"),\n                            React.createElement(\"li\", { className: \"--jp-kite-innernotif-li\" }, \"jupyter labextension update @kiteco/jupyterlab-kite\")),\n                        React.createElement(ButtonBar, { label: \"Update\", onClick: () => {\n                                window.open('https://help.kite.com/article/143-how-to-install-the-jupyterlab-plugin#updating-the-plugin');\n                                INotification.dismiss(id);\n                            } }))), Object.assign(Object.assign({}, baseToastOptions), { type: 'info' }));\n                break;\n        }\n    }\n    async getHealth() {\n        const installed = await this.fetchKiteInstalled();\n        const version = PageConfig.getOption('appVersion');\n        if (!installed && Semver.lt(version, _MinJlabVersion)) {\n            return Health.RequirementsNotMet;\n        }\n        else if (!installed) {\n            return Health.KiteEngineNotInstalled;\n        }\n        else if (Semver.lt(version, _MinJlabVersion)) {\n            return Health.BelowMinJLabVersion;\n        }\n        const pluginMap = await this.queryInstalled(false);\n        if (pluginMap['@krassowski/jupyterlab-lsp']) {\n            return Health.IncompatibleJLabLSPPlugin;\n        }\n        if (ListModel.entryHasUpdate(pluginMap['@kiteco/jupyterlab-kite'])) {\n            return Health.JLabKiteHasUpdate;\n        }\n        return Health.Healthy;\n    }\n    async trackIncompatiblity() {\n        // Allow using the connection without an actual doucment open\n        const emptyVirtualDocument = new VirtualDocument('python', '', {}, {}, false, '.py', false);\n        const options = {\n            virtual_document: emptyVirtualDocument,\n            language: 'python',\n            document_path: ''\n        };\n        const connection = await this.connectionManager.connect(options);\n        connection.track('mixpanel', 'jupyterlab_incompatibility', {\n            type: 'jupyter-lab-lsp'\n        });\n    }\n    async fetchKiteInstalled() {\n        const resp = await ServerConnection.makeRequest(this.kiteInstalledUrl, { method: 'GET' }, ServerConnection.makeSettings());\n        return resp.ok && (await resp.json());\n    }\n    get kiteInstalledUrl() {\n        return URLExt.join(PageConfig.getBaseUrl(), ILanguageServerManager.URL_NS, 'kite_installed');\n    }\n}\nKiteAccessible.CreateAsync = async (serviceManager, registery, connectionManager) => {\n    // Use extensionmanager settings because KiteAccessible needs\n    // protected ListModel.queryInstalled\n    const settings = await registery.load('@jupyterlab/extensionmanager-extension:plugin');\n    return new KiteAccessible(serviceManager, settings, connectionManager);\n};\nfunction InnerNotif(props) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"p\", { className: \"--jp-kite-innernotif-title\" }, props.title),\n        React.createElement(\"div\", { className: \"--jp-kite-innernotif-body\" }, props.children)));\n}\nfunction ButtonBar(props) {\n    return (React.createElement(\"div\", { className: \"--jp-kite-buttonbar\" },\n        React.createElement(\"div\", { className: \"--jp-kite-buttonbar-spacer\" }),\n        React.createElement(\"button\", { className: \"--jp-kite-innernotif-button\", onClick: props.onClick }, props.label)));\n}\n//# sourceMappingURL=kite_accessible.js.map","import { Signal } from '@lumino/signaling';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { ILanguageServerManager } from './tokens';\nexport class LanguageServerManager {\n    constructor(options) {\n        this._sessionsChanged = new Signal(this);\n        this._sessions = new Map();\n        this._settings = options.settings || ServerConnection.makeSettings();\n        this._baseUrl = options.baseUrl || PageConfig.getBaseUrl();\n        this.fetchSessions().catch(console.warn);\n    }\n    get statusUrl() {\n        return URLExt.join(this._baseUrl, ILanguageServerManager.URL_NS, 'status');\n    }\n    get sessionsChanged() {\n        return this._sessionsChanged;\n    }\n    get sessions() {\n        return this._sessions;\n    }\n    getServerId(options) {\n        // most things speak language\n        for (const [key, session] of this._sessions.entries()) {\n            if (options.language) {\n                if (session.spec.languages &&\n                    session.spec.languages.indexOf(options.language) !== -1) {\n                    return key;\n                }\n            }\n        }\n        return '';\n    }\n    async fetchSessions() {\n        let response = await ServerConnection.makeRequest(this.statusUrl, { method: 'GET' }, this._settings);\n        if (!response.ok) {\n            throw new Error(response.statusText);\n        }\n        let sessions;\n        try {\n            sessions = (await response.json()).sessions;\n        }\n        catch (err) {\n            console.warn(err);\n            return;\n        }\n        for (const key of Object.keys(sessions)) {\n            if (this._sessions.has(key)) {\n                Object.assign(this._sessions.get(key), sessions[key]);\n            }\n            else {\n                this._sessions.set(key, sessions[key]);\n            }\n        }\n        const oldKeys = this._sessions.keys();\n        for (const oldKey in oldKeys) {\n            if (!sessions[oldKey]) {\n                this._sessions.delete(oldKey);\n            }\n        }\n        this._sessionsChanged.emit(void 0);\n    }\n}\n//# sourceMappingURL=manager.js.map","import { ILabShell, JupyterFrontEnd } from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { CodeMirrorEditor } from '@jupyterlab/codemirror';\nimport { ICompletionManager } from '@jupyterlab/completer';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { IEditorTracker } from '@jupyterlab/fileeditor';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IStateDB } from '@jupyterlab/statedb';\nimport { IStatusBar } from '@jupyterlab/statusbar';\nimport { FileEditorJumper } from '@krassowski/jupyterlab_go_to_definition/lib/jumpers/fileeditor';\nimport { NotebookJumper } from '@krassowski/jupyterlab_go_to_definition/lib/jumpers/notebook';\nimport '../style/index.css';\nimport { KiteStatus } from './adapters/jupyterlab/components/statusbar';\nimport { KiteStatusModel } from './adapters/jupyterlab/components/status_model';\nimport { FileEditorAdapter } from './adapters/jupyterlab/file_editor';\nimport { NotebookAdapter } from './adapters/jupyterlab/notebook';\nimport { file_editor_adapters, notebook_adapters } from './command_manager';\nimport { DocumentConnectionManager } from './connection_manager';\nimport { registerKiteCommands } from './kite_commands';\nimport { KiteOnboarding } from './kite_onboarding';\nimport { KiteAccessible } from './kite_accessible';\nimport { LanguageServerManager } from './manager';\nvar IPaths = JupyterFrontEnd.IPaths;\n/**\n * The plugin registration information.\n */\nconst plugin = {\n    id: '@kiteco/jupyterlab-kite:plugin',\n    requires: [\n        IEditorTracker,\n        INotebookTracker,\n        ISettingRegistry,\n        ICommandPalette,\n        IDocumentManager,\n        ICompletionManager,\n        IRenderMimeRegistry,\n        IPaths,\n        ILabShell,\n        IStatusBar,\n        IStateDB\n    ],\n    activate: async (app, fileEditorTracker, notebookTracker, settingRegistry, palette, documentManager, completion_manager, rendermime_registry, paths, labShell, status_bar, state) => {\n        registerKiteCommands(app, palette);\n        const language_server_manager = new LanguageServerManager({});\n        const kite_status_model = new KiteStatusModel();\n        const connection_manager = new DocumentConnectionManager({\n            language_server_manager,\n            kite_status_model\n        });\n        const ka = await KiteAccessible.CreateAsync(app.serviceManager, settingRegistry, connection_manager);\n        ka.checkHealth();\n        const onboarding_manager = new KiteOnboarding(app, palette, documentManager, state, connection_manager);\n        const status_bar_item = new KiteStatus(kite_status_model);\n        status_bar_item.model.connection_manager = connection_manager;\n        labShell.currentChanged.connect(() => {\n            const current = labShell.currentWidget;\n            if (!current) {\n                return;\n            }\n            let adapter = null;\n            if (notebookTracker.has(current)) {\n                let id = current.id;\n                adapter = notebook_adapters.get(id);\n            }\n            else if (fileEditorTracker.has(current)) {\n                let id = current.content.id;\n                adapter = file_editor_adapters.get(id);\n            }\n            if (adapter != null) {\n                status_bar_item.model.adapter = adapter;\n            }\n            onboarding_manager.showOnBoot();\n        });\n        status_bar.registerStatusItem('@kiteco/jupyterlab-kite:language-server-status', {\n            item: status_bar_item,\n            align: 'left',\n            rank: 1,\n            isActive: () => !!(labShell.currentWidget &&\n                (fileEditorTracker.currentWidget ||\n                    notebookTracker.currentWidget) &&\n                (labShell.currentWidget === fileEditorTracker.currentWidget ||\n                    labShell.currentWidget === notebookTracker.currentWidget))\n        });\n        fileEditorTracker.widgetUpdated.connect((_sender, _widget) => {\n            console.log(_sender);\n            console.log(_widget);\n        });\n        const connect_file_editor = (widget) => {\n            let fileEditor = widget.content;\n            if (fileEditor.editor instanceof CodeMirrorEditor) {\n                let jumper = new FileEditorJumper(widget, documentManager);\n                let adapter = new FileEditorAdapter(widget, jumper, app, completion_manager, rendermime_registry, connection_manager, state);\n                file_editor_adapters.set(fileEditor.id, adapter);\n                const disconnect = () => {\n                    file_editor_adapters.delete(fileEditor.id);\n                    widget.disposed.disconnect(disconnect);\n                    widget.context.pathChanged.disconnect(reconnect);\n                    adapter.dispose();\n                    if (status_bar_item.model.adapter === adapter) {\n                        status_bar_item.model.adapter = null;\n                    }\n                };\n                const reconnect = () => {\n                    disconnect();\n                    connect_file_editor(widget);\n                };\n                widget.disposed.connect(disconnect);\n                widget.context.pathChanged.connect(reconnect);\n                status_bar_item.model.adapter = adapter;\n            }\n        };\n        fileEditorTracker.widgetAdded.connect((sender, widget) => {\n            connect_file_editor(widget);\n        });\n        const connect_notebook = (widget) => {\n            // NOTE: assuming that the default cells content factory produces CodeMirror editors(!)\n            let jumper = new NotebookJumper(widget, documentManager);\n            let adapter = new NotebookAdapter(widget, jumper, app, completion_manager, rendermime_registry, connection_manager, state);\n            notebook_adapters.set(widget.id, adapter);\n            const disconnect = () => {\n                notebook_adapters.delete(widget.id);\n                widget.disposed.disconnect(disconnect);\n                widget.context.pathChanged.disconnect(reconnect);\n                adapter.dispose();\n                if (status_bar_item.model.adapter === adapter) {\n                    status_bar_item.model.adapter = null;\n                }\n            };\n            const reconnect = () => {\n                disconnect();\n                connect_notebook(widget);\n            };\n            widget.context.pathChanged.connect(reconnect);\n            widget.disposed.connect(disconnect);\n            status_bar_item.model.adapter = adapter;\n        };\n        notebookTracker.widgetAdded.connect(async (sender, widget) => {\n            connect_notebook(widget);\n        });\n    },\n    autoStart: true\n};\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n//# sourceMappingURL=index.js.map","import { PageConfig } from '@jupyterlab/coreutils';\nconst RE_PATH_ANCHOR = /^file:\\/\\/([^\\/]+|\\/[A-Z]:)/;\nexport async function sleep(timeout) {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve();\n        }, timeout);\n    });\n}\n// TODO: there is a JL native version of this which uses adaptive rate, maybe use instead?\nexport function until_ready(is_ready, max_retrials = 35, interval = 50, interval_modifier = (i) => i) {\n    return new Promise(async (resolve, reject) => {\n        let i = 0;\n        while (is_ready() !== true) {\n            i += 1;\n            if (max_retrials !== -1 && i > max_retrials) {\n                reject('Too many retrials');\n                break;\n            }\n            interval = interval_modifier(interval);\n            await sleep(interval);\n        }\n        resolve(is_ready);\n    });\n}\n/**\n * TODO: this is slightly modified copy paste from jupyterlab-go-to-definition/editors/codemirror/extension.ts;\n */\nexport function getModifierState(event, modifierKey) {\n    // Note: Safari does not support getModifierState on MouseEvent, see:\n    // https://github.com/krassowski/jupyterlab-go-to-definition/issues/3\n    // thus AltGraph and others are not supported on Safari\n    // Full list of modifier keys and mappings to physical keys on different OSes:\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n    if (event.getModifierState !== undefined) {\n        return event.getModifierState(modifierKey);\n    }\n    switch (modifierKey) {\n        case 'Shift':\n            return event.shiftKey;\n        case 'Alt':\n            return event.altKey;\n        case 'Control':\n            return event.ctrlKey;\n        case 'Meta':\n            return event.metaKey;\n        default:\n            console.warn(`State of the modifier key \"${modifierKey}\" could not be determined.`);\n    }\n}\nexport class DefaultMap extends Map {\n    constructor(default_factory, entries) {\n        super(entries);\n        this.default_factory = default_factory;\n    }\n    get(k) {\n        return this.get_or_create(k);\n    }\n    get_or_create(k, ...args) {\n        if (this.has(k)) {\n            return super.get(k);\n        }\n        else {\n            let v = this.default_factory(k, ...args);\n            this.set(k, v);\n            return v;\n        }\n    }\n}\nexport function server_root_uri() {\n    return PageConfig.getOption('rootUri');\n}\n/**\n * compare two URIs, discounting:\n * - drive capitalization\n * TODO: probably use vscode-uri\n */\nexport function uris_equal(a, b) {\n    const win_paths = is_win_path(a) && is_win_path(b);\n    if (win_paths) {\n        return normalize_win_path(a) === normalize_win_path(b);\n    }\n    else {\n        return a === b;\n    }\n}\n/**\n * grossly detect whether a URI represents a file on a windows drive\n */\nexport function is_win_path(uri) {\n    return uri.match(RE_PATH_ANCHOR);\n}\n/**\n * lowercase the drive component of a URI\n */\nexport function normalize_win_path(uri) {\n    return uri.replace(RE_PATH_ANCHOR, it => it.toLowerCase());\n}\nexport function uri_to_contents_path(child, parent) {\n    parent = parent || server_root_uri();\n    if (parent == null) {\n        return null;\n    }\n    if (child.startsWith(parent)) {\n        return child.replace(parent, '');\n    }\n    return null;\n}\n//# sourceMappingURL=utils.js.map","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".lsp-floating-console {\\n  position: absolute;\\n  width: 600px;\\n  height: 350px;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(255, 255, 255, 0.8);\\n  border: 3px solid rgba(204, 204, 204, 0.7);\\n  font-size: 12px;\\n  overflow-y: auto;\\n  margin: 0;\\n  list-style-type: none;\\n  padding: 5px;\\n}\\n\\n.lsp-code {\\n  font-family: monospace;\\n  background: #eee;\\n  border-radius: 2px;\\n  padding: 2px 5px;\\n}\\n\\n.lsp-kind {\\n  padding: 2px 5px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/console.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,QAAQ;EACR,SAAS;EACT,oCAAoC;EACpC,0CAA0C;EAC1C,eAAe;EACf,gBAAgB;EAChB,SAAS;EACT,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,gBAAgB;EAChB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".lsp-floating-console {\\n  position: absolute;\\n  width: 600px;\\n  height: 350px;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(255, 255, 255, 0.8);\\n  border: 3px solid rgba(204, 204, 204, 0.7);\\n  font-size: 12px;\\n  overflow-y: auto;\\n  margin: 0;\\n  list-style-type: none;\\n  padding: 5px;\\n}\\n\\n.lsp-code {\\n  font-family: monospace;\\n  background: #eee;\\n  border-radius: 2px;\\n  padding: 2px 5px;\\n}\\n\\n.lsp-kind {\\n  padding: 2px 5px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../css-loader/dist/cjs.js!./variables/base.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../css-loader/dist/cjs.js!./variables/cm-themes.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../css-loader/dist/cjs.js!./variables/jupyterlab-dark.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../../css-loader/dist/cjs.js!./variables/jupyterlab-light.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".cm-lsp-diagnostic {\\n  text-decoration-line: underline;\\n  /* For Chrome */\\n  text-decoration-skip-ink: none;\\n}\\n\\n.cm-lsp-diagnostic-Error {\\n  /*\\n    \\\"wavy\\\" would be ideal, but there seems to be a bug in Chrome which makes it\\n    fail to render the last character see:\\n    https://stackoverflow.com/questions/57559588/how-to-make-the-wavy-underline-extend-cover-all-the-characters-in-chrome\\n    an alternative would be to use background image trick to simulate the underline\\n  */\\n\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-error-decoration-color\\n  );\\n}\\n\\n.cm-lsp-diagnostic-Warning {\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-warning-decoration-color\\n  );\\n}\\n\\n.cm-lsp-diagnostic-Information {\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-information-decoration-color\\n  );\\n}\\n\\n.cm-lsp-diagnostic-Hint {\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-hint-decoration-color\\n  );\\n}\\n\\n/* hover */\\n.cm-lsp-hover-available {\\n  text-decoration: var(--jp-editor-mirror-lsp-hover-decoration-style);\\n  text-decoration-color: var(--jp-editor-mirror-lsp-hover-decoration-color);\\n}\\n\\n/* highlight */\\n.cm-lsp-highlight {\\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/highlight.css\"],\"names\":[],\"mappings\":\"AAKA;EACE,+BAA+B;EAC/B,eAAe;EACf,8BAA8B;AAChC;;AAEA;EACE;;;;;GAKC;;EAED;;GAEC;EACD;;GAEC;AACH;;AAEA;EACE;;GAEC;EACD;;GAEC;AACH;;AAEA;EACE;;GAEC;EACD;;GAEC;AACH;;AAEA;EACE;;GAEC;EACD;;GAEC;AACH;;AAEA,UAAU;AACV;EACE,mEAAmE;EACnE,yEAAyE;AAC3E;;AAEA,cAAc;AACd;EACE,wEAAwE;AAC1E\",\"sourcesContent\":[\"@import url('./variables/base.css');\\n@import url('./variables/cm-themes.css');\\n@import url('./variables/jupyterlab-dark.css');\\n@import url('./variables/jupyterlab-light.css');\\n\\n.cm-lsp-diagnostic {\\n  text-decoration-line: underline;\\n  /* For Chrome */\\n  text-decoration-skip-ink: none;\\n}\\n\\n.cm-lsp-diagnostic-Error {\\n  /*\\n    \\\"wavy\\\" would be ideal, but there seems to be a bug in Chrome which makes it\\n    fail to render the last character see:\\n    https://stackoverflow.com/questions/57559588/how-to-make-the-wavy-underline-extend-cover-all-the-characters-in-chrome\\n    an alternative would be to use background image trick to simulate the underline\\n  */\\n\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-error-decoration-color\\n  );\\n}\\n\\n.cm-lsp-diagnostic-Warning {\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-warning-decoration-color\\n  );\\n}\\n\\n.cm-lsp-diagnostic-Information {\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-information-decoration-color\\n  );\\n}\\n\\n.cm-lsp-diagnostic-Hint {\\n  text-decoration-style: var(\\n    --jp-editor-mirror-lsp-diagnostic-decoration-style\\n  );\\n  text-decoration-color: var(\\n    --jp-editor-mirror-lsp-diagnostic-hint-decoration-color\\n  );\\n}\\n\\n/* hover */\\n.cm-lsp-hover-available {\\n  text-decoration: var(--jp-editor-mirror-lsp-hover-decoration-style);\\n  text-decoration-color: var(--jp-editor-mirror-lsp-hover-decoration-color);\\n}\\n\\n/* highlight */\\n.cm-lsp-highlight {\\n  background-color: var(--jp-editor-mirror-lsp-highlight-background-color);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../css-loader/dist/cjs.js!./highlight.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../css-loader/dist/cjs.js!./logo.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jp-Completer-docpanel {\\n  overflow: auto;\\n}\\n.jp-Completer-docpanel.hidden {\\n  display: none;\\n}\\n\\n.jp-Completer-list {\\n  scrollbar-width: thin;\\n}\\n\\n.jp-Completer-type {\\n  display: table-cell;\\n  min-width: 24px;\\n  vertical-align: middle;\\n}\\n\\n.jp-Completer-monogram {\\n  display: table-cell;\\n}\\n\\n.jp-Completer-icon svg {\\n  vertical-align: middle;\\n}\\n\\n.jp-Completer-match {\\n  max-width: 320px;\\n  min-width: 180px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.jp-Completer-typeExtended {\\n  padding-left: 40px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/index.css\"],\"names\":[],\"mappings\":\"AAGA;EACE,cAAc;AAChB;AACA;EACE,aAAa;AACf;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;AACpB\",\"sourcesContent\":[\"@import url('./highlight.css');\\n@import url('./logo.css');\\n\\n.jp-Completer-docpanel {\\n  overflow: auto;\\n}\\n.jp-Completer-docpanel.hidden {\\n  display: none;\\n}\\n\\n.jp-Completer-list {\\n  scrollbar-width: thin;\\n}\\n\\n.jp-Completer-type {\\n  display: table-cell;\\n  min-width: 24px;\\n  vertical-align: middle;\\n}\\n\\n.jp-Completer-monogram {\\n  display: table-cell;\\n}\\n\\n.jp-Completer-icon svg {\\n  vertical-align: middle;\\n}\\n\\n.jp-Completer-match {\\n  max-width: 320px;\\n  min-width: 180px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.jp-Completer-typeExtended {\\n  padding-left: 40px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".--jp-kite-innernotif-title {\\n  margin-bottom: 0.5em;\\n  font-size: 1.1em\\n}\\n\\n.--jp-kite-innernotif-body {\\n  margin-bottom: 0.3em\\n}\\n\\n.--jp-kite-innernotif-main-msg {\\n  margin-bottom: 0.4em\\n}\\n\\n.--jp-kite-innernotif-list {\\n  /* override existing jlab list margin */\\n  margin: 0;\\n}\\n\\n.--jp-kite-innernotif-no-bullets {\\n  /* override existing jlab list margin */\\n  padding: 0;\\n  padding-left: 1em;\\n  list-style-type: none\\n}\\n\\n.--jp-kite-innernotif-li {\\n  margin-bottom: 0.2em;\\n}\\n\\n.--jp-kite-innernotif-button {\\n  padding: 0.5em 0.7em 0.5em 0.7em;\\n  border: solid var(--jp-border-width) var(--jp-border-color2);\\n  font-size: var(--jp-ui-font-size0);\\n  margin-top: 1px;\\n  margin-bottom: 1px;\\n  margin-right: 0px;\\n  margin-left: 3px;\\n  color: var(--jp-ui-font-color1);\\n  background-color: var(--jp-layout-color2);\\n}\\n\\n.--jp-kite-buttonbar {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  flex: 0 0 auto;\\n  margin-top: 0.4em;\\n}\\n\\n.--jp-kite-buttonbar-spacer {\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n}\\n\\n.--jp-kite-notifcontainer {\\n  width: 410px;\\n  right: 7em\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/kite_accessible.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;EACpB;AACF;;AAEA;EACE;AACF;;AAEA;EACE;AACF;;AAEA;EACE,uCAAuC;EACvC,SAAS;AACX;;AAEA;EACE,uCAAuC;EACvC,UAAU;EACV,iBAAiB;EACjB;AACF;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,gCAAgC;EAChC,4DAA4D;EAC5D,kCAAkC;EAClC,eAAe;EACf,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,+BAA+B;EAC/B,yCAAyC;AAC3C;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ;AACF\",\"sourcesContent\":[\".--jp-kite-innernotif-title {\\n  margin-bottom: 0.5em;\\n  font-size: 1.1em\\n}\\n\\n.--jp-kite-innernotif-body {\\n  margin-bottom: 0.3em\\n}\\n\\n.--jp-kite-innernotif-main-msg {\\n  margin-bottom: 0.4em\\n}\\n\\n.--jp-kite-innernotif-list {\\n  /* override existing jlab list margin */\\n  margin: 0;\\n}\\n\\n.--jp-kite-innernotif-no-bullets {\\n  /* override existing jlab list margin */\\n  padding: 0;\\n  padding-left: 1em;\\n  list-style-type: none\\n}\\n\\n.--jp-kite-innernotif-li {\\n  margin-bottom: 0.2em;\\n}\\n\\n.--jp-kite-innernotif-button {\\n  padding: 0.5em 0.7em 0.5em 0.7em;\\n  border: solid var(--jp-border-width) var(--jp-border-color2);\\n  font-size: var(--jp-ui-font-size0);\\n  margin-top: 1px;\\n  margin-bottom: 1px;\\n  margin-right: 0px;\\n  margin-left: 3px;\\n  color: var(--jp-ui-font-color1);\\n  background-color: var(--jp-layout-color2);\\n}\\n\\n.--jp-kite-buttonbar {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  flex: 0 0 auto;\\n  margin-top: 0.4em;\\n}\\n\\n.--jp-kite-buttonbar-spacer {\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n}\\n\\n.--jp-kite-notifcontainer {\\n  width: 410px;\\n  right: 7em\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body[data-jp-theme-light='true'] [data-icon='jupyterlab-kite:completion-icon'] {\\n  fill: #11182f;\\n  fill-opacity: 60%;\\n  transform: scale(0.6);\\n}\\n\\nbody[data-jp-theme-light='false'] [data-icon='jupyterlab-kite:completion-icon'] {\\n  fill: #d3d3d3;\\n  fill-opacity: 60%;\\n  transform: scale(0.6);\\n}\\n\\n[data-icon='jupyterlab-kite:status-icon'] {\\n  fill: var(--jp-ui-font-color1);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/logo.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,iBAAiB;EACjB,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,qBAAqB;AACvB;;AAEA;EACE,8BAA8B;AAChC\",\"sourcesContent\":[\"body[data-jp-theme-light='true'] [data-icon='jupyterlab-kite:completion-icon'] {\\n  fill: #11182f;\\n  fill-opacity: 60%;\\n  transform: scale(0.6);\\n}\\n\\nbody[data-jp-theme-light='false'] [data-icon='jupyterlab-kite:completion-icon'] {\\n  fill: #d3d3d3;\\n  fill-opacity: 60%;\\n  transform: scale(0.6);\\n}\\n\\n[data-icon='jupyterlab-kite:status-icon'] {\\n  fill: var(--jp-ui-font-color1);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".kite-statusbar-item {\\n  overflow: hidden;\\n  white-space: nowrap;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/statusbar.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,mBAAmB;AACrB\",\"sourcesContent\":[\".kite-statusbar-item {\\n  overflow: hidden;\\n  white-space: nowrap;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root {\\n  /* highlight */\\n  --jp-editor-mirror-lsp-highlight-background-color: var(--jp-layout-color2);\\n  /* diagnostics */\\n  --jp-editor-mirror-lsp-diagnostic-decoration-style: dashed;\\n  --jp-editor-mirror-lsp-diagnostic-error-decoration-color: var(\\n    --jp-error-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-warning-decoration-color: var(\\n    --jp-warn-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-information-decoration-color: var(\\n    --jp-info-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-hint-decoration-color: var(\\n    --jp-success-color1\\n  );\\n  /* hover */\\n  --jp-editor-mirror-lsp-hover-decoration-style: dotted;\\n  --jp-editor-mirror-lsp-hover-decoration-color: var(--jp-brand-color1);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/variables/base.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,cAAc;EACd,0EAA0E;EAC1E,gBAAgB;EAChB,0DAA0D;EAC1D;;GAEC;EACD;;GAEC;EACD;;GAEC;EACD;;GAEC;EACD,UAAU;EACV,qDAAqD;EACrD,qEAAqE;AACvE\",\"sourcesContent\":[\":root {\\n  /* highlight */\\n  --jp-editor-mirror-lsp-highlight-background-color: var(--jp-layout-color2);\\n  /* diagnostics */\\n  --jp-editor-mirror-lsp-diagnostic-decoration-style: dashed;\\n  --jp-editor-mirror-lsp-diagnostic-error-decoration-color: var(\\n    --jp-error-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-warning-decoration-color: var(\\n    --jp-warn-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-information-decoration-color: var(\\n    --jp-info-color1\\n  );\\n  --jp-editor-mirror-lsp-diagnostic-hint-decoration-color: var(\\n    --jp-success-color1\\n  );\\n  /* hover */\\n  --jp-editor-mirror-lsp-hover-decoration-style: dotted;\\n  --jp-editor-mirror-lsp-hover-decoration-color: var(--jp-brand-color1);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".cm-s-abcdef {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(144, 199, 255, 0.2);\\n}\\n\\n.cm-s-base16-dark {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-base16-light {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(186, 192, 161, 0.1);\\n}\\n\\n.cm-s-default {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-hopscotch {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(207, 18, 255, 0.2);\\n}\\n\\n.cm-s-material {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 255, 58, 0.2);\\n}\\n\\n.cm-s-mbo {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-material {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-mdn-like {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-seti {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-solarized {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-the-matrix {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.1);\\n}\\n\\n.cm-s-xq-light {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-zenburn {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/variables/cm-themes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,2EAA2E;AAC7E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,0EAA0E;AAC5E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,yEAAyE;AAC3E;;AAEA;EACE,2EAA2E;AAC7E\",\"sourcesContent\":[\".cm-s-abcdef {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(144, 199, 255, 0.2);\\n}\\n\\n.cm-s-base16-dark {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-base16-light {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(186, 192, 161, 0.1);\\n}\\n\\n.cm-s-default {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-hopscotch {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(207, 18, 255, 0.2);\\n}\\n\\n.cm-s-material {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 255, 58, 0.2);\\n}\\n\\n.cm-s-mbo {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-material {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-mdn-like {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-seti {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\\n.cm-s-solarized {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-the-matrix {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.1);\\n}\\n\\n.cm-s-xq-light {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\\n.cm-s-zenburn {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(239, 231, 171, 0.2);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body[data-jp-theme-light='false'] .cm-s-jupyter {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(151, 173, 255, 0.3);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/variables/jupyterlab-dark.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,2EAA2E;AAC7E\",\"sourcesContent\":[\"body[data-jp-theme-light='false'] .cm-s-jupyter {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(151, 173, 255, 0.3);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body[data-jp-theme-light='true'] .cm-s-jupyter {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@kiteco/jupyterlab-kite/style/variables/jupyterlab-light.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,yEAAyE;AAC3E\",\"sourcesContent\":[\"body[data-jp-theme-light='true'] .cm-s-jupyter {\\n  --jp-editor-mirror-lsp-highlight-background-color: rgba(18, 69, 255, 0.1);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}