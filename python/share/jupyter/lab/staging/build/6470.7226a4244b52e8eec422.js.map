{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/path-browserify/index.js","webpack://@jupyterlab/application-top/./node_modules/process/browser.js"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","_format","sep","pathObject","dir","root","base","name","ext","posix","resolve","resolvedPath","resolvedAbsolute","cwd","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","parse","ret","delimiter","win32","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","this","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","Array","push","Item","array","prototype","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask"],"mappings":"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","file":"6470.7226a4244b52e8eec422.js?v=7226a4244b52e8eec422","sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}