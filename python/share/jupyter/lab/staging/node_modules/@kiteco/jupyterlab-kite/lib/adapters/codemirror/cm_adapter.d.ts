import * as CodeMirror from 'codemirror';
import { VirtualEditor } from '../../virtual/editor';
import { VirtualDocument } from '../../virtual/document';
import { ILSPFeature } from './feature';
import { IJupyterLabComponentsManager } from '../jupyterlab/jl_adapter';
export declare class CodeMirrorAdapter {
    protected editor: VirtualEditor;
    protected virtual_document: VirtualDocument;
    protected jupyterlab_components: IJupyterLabComponentsManager;
    features: Map<string, ILSPFeature>;
    isDisposed: boolean;
    private last_change;
    constructor(editor: VirtualEditor, virtual_document: VirtualDocument, jupyterlab_components: IJupyterLabComponentsManager, features?: ILSPFeature[]);
    updateAfterChange(): Promise<boolean>;
    invalidateLastChange(): void;
    saveChange: (doc: CodeMirror.Doc, change: CodeMirror.EditorChange) => void;
    dispose(): void;
}
