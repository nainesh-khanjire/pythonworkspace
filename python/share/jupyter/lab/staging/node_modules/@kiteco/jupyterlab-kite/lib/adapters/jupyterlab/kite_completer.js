import { Completer } from '@jupyterlab/completer';
export const hideDocsKey = 'hideDocs';
export let shouldHideDocs = false;
export let state;
/**
 * CompletionHandler's Completer property is readonly,
 * so while we can extend its protected methods,
 * "this" will still be bound to the base class.
 */
export class KiteCompleter extends Completer {
    constructor(options, stateDB) {
        super(options);
        state = stateDB;
        state.fetch(hideDocsKey).then(value => {
            if (value) {
                console.log('[Kite] Stored Hide Docs State:', value);
                shouldHideDocs = value;
            }
        });
    }
    onUpdateRequest(msg) {
        var _a, _b;
        super.onUpdateRequest(msg);
        const docpanel = this.node.querySelector('.jp-Completer-docpanel');
        if (shouldHideDocs) {
            (_a = docpanel) === null || _a === void 0 ? void 0 : _a.classList.add('hidden');
        }
        else {
            (_b = docpanel) === null || _b === void 0 ? void 0 : _b.classList.remove('hidden');
        }
    }
}
export function toggle() {
    shouldHideDocs = !shouldHideDocs;
    state.save(hideDocsKey, shouldHideDocs);
}
//# sourceMappingURL=kite_completer.js.map