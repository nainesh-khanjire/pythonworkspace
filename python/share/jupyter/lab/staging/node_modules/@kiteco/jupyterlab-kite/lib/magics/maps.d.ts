import { IMagicOverride, IMagicOverrideRule, replacer } from './overrides';
declare abstract class MagicsMap extends Map<RegExp, string | replacer> {
    protected constructor(magic_overrides: IMagicOverrideRule[]);
    abstract override_for(code: string): string | null;
    protected _override_for(code: string): string | null;
}
declare abstract class ReversibleMagicsMap extends MagicsMap {
    protected abstract type(overrides: IMagicOverrideRule[]): any;
    private overrides;
    constructor(magic_overrides: IMagicOverride[]);
    get reverse(): MagicsMap;
}
export declare class CellMagicsMap extends ReversibleMagicsMap {
    type(overrides: IMagicOverride[]): CellMagicsMap;
    override_for(cell: string): string | null;
}
export declare class LineMagicsMap extends ReversibleMagicsMap {
    type(overrides: IMagicOverride[]): LineMagicsMap;
    override_for(line: string): string | null;
    replace_all(raw_lines: string[], map?: MagicsMap): {
        lines: string[];
        skip_inspect: boolean[];
    };
    reverse_replace_all(raw_lines: string[]): string[];
}
export {};
