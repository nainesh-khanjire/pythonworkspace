import { ISignal } from '@lumino/signaling';
import { ServerConnection } from '@jupyterlab/services';
import * as SCHEMA from './_schema';
export declare type TLanguageServerId = string;
export declare type TLanguageId = string;
export declare type TSessionMap = Map<TLanguageServerId, SCHEMA.LanguageServerSession>;
export interface ILanguageServerManager {
    sessionsChanged: ISignal<ILanguageServerManager, void>;
    sessions: TSessionMap;
    getServerId(options: ILanguageServerManager.IGetServerIdOptions): TLanguageServerId;
    fetchSessions(): Promise<void>;
    statusUrl: string;
}
export declare namespace ILanguageServerManager {
    const URL_NS = "lsp";
    interface IOptions {
        settings?: ServerConnection.ISettings;
        baseUrl?: string;
    }
    interface IGetServerIdOptions {
        language?: TLanguageId;
        mimeType?: string;
    }
}
