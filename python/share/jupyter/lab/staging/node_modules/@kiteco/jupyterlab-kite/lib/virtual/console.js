import '../../style/console.css';
export class EditorLogConsole {
}
export class FloatingConsole extends EditorLogConsole {
    constructor() {
        super();
        this.element = document.createElement('ul');
        this.element.className = 'lsp-floating-console';
        document.body.appendChild(this.element);
    }
    append(text, kind = 'log') {
        let entry = document.createElement('li');
        entry.innerHTML = '<span class="lsp-kind">' + kind + '</span>' + text;
        this.element.appendChild(entry);
        this.element.scrollTop = this.element.scrollHeight;
    }
    to_string(args) {
        return args
            .map(arg => '<span class="lsp-code">' + JSON.stringify(arg) + '</span>')
            .join(', ');
    }
    log(...args) {
        this.append(this.to_string(args), 'log');
    }
    warn(...args) {
        this.append(this.to_string(args), 'warn');
    }
    error(...args) {
        this.append(this.to_string(args), 'error');
    }
}
export class BrowserConsole extends EditorLogConsole {
    log(...args) {
        console.log('LSP: ', ...args);
    }
    warn(...args) {
        console.warn('LSP: ', ...args);
    }
    error(...args) {
        console.error('LSP: ', ...args);
    }
}
export function create_console(kind) {
    if (kind === 'browser') {
        return new BrowserConsole();
    }
    else {
        return new FloatingConsole();
    }
}
//# sourceMappingURL=console.js.map