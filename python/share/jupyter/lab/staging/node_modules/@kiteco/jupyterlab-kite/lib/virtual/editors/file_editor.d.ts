import { VirtualEditor } from '../editor';
import * as CodeMirror from 'codemirror';
import { IEditorPosition, IRootPosition, IVirtualPosition } from '../../positioning';
export declare class VirtualFileEditor extends VirtualEditor {
    protected cm_editor: CodeMirror.Editor;
    has_cells: boolean;
    constructor(language: () => string, file_extension: () => string, path: () => string, cm_editor: CodeMirror.Editor);
    transform_virtual_to_editor(position: IVirtualPosition): IEditorPosition;
    transform_editor_to_root(cm_editor: CodeMirror.Editor, position: IEditorPosition): IRootPosition;
    get_editor_index(position: CodeMirror.Position): number;
    get_cm_editor(position: IRootPosition): CodeMirror.Editor;
    protected perform_documents_update(): void;
    addEventListener(type: string, listener: EventListenerOrEventListenerObject): void;
    forEveryBlockEditor(callback: (cm_editor: CodeMirror.Editor) => void): void;
}
