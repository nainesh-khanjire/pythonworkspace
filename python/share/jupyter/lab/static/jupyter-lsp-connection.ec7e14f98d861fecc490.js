(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[8016],{11976:(t,e,n)=>{"use strict";n.r(e);n.d(e,{LSPConnection:()=>r});var i=n(26470);var s=n.n(i);var o=n(58217);var a=n.n(o);var c=n(4576);class r extends o.LspWsConnection{constructor(t){super(t);this.closing_manually=false;this.documentsToOpen=[];this.status_model=t.kite_status_model}sendOpenWhenReady(t){if(this.isReady){this._sendOpen(t)}else{this.documentsToOpen.push(t)}}onServerInitialized(t){super.onServerInitialized(t);while(this.documentsToOpen.length){const t=this.documentsToOpen.pop();if(t){this._sendOpen(t)}}}async track(t,e,n){try{await this.connection.sendRequest("kite/track",{to:t,event:e,props:n})}catch(i){console.warn(`Could not track ${e}, ${n} to ${t}`)}}async fetchKiteOnboarding(){let t;try{t=await this.connection.sendRequest("kite/onboarding");return i.basename(t)}catch(e){console.warn("Could not get Kite Onboarding file.")}return""}async fetchKiteStatus(t){let e;try{e=await this.connection.sendRequest("kite/status",{uri:t.uri});if(this.status_model){this.status_model.status=e}}catch(n){console.warn("Kite Status could not be fetched. Setting to not ready.");if(this.status_model){this.status_model.status=null}}}sendSelection(t,e,n){try{this.connection.sendNotification("kite/selection",{positions:[{line:t.line,character:t.ch}],textDocument:{uri:e.uri},text:n})}catch(i){console.warn("[Kite] Selection Notification Error:",i)}this.fetchKiteStatus(e)}sendSelectiveChange(t,e){this._sendChange([t],e)}sendFullTextChange(t,e){this._sendChange([{text:t}],e)}isRenameSupported(){return!!(this.serverCapabilities&&this.serverCapabilities.renameProvider)}async rename(t,e,n,i=true){if(!this.isReady||!this.isRenameSupported()){return}const s={textDocument:{uri:e.uri},position:{line:t.line,character:t.ch},newName:n};const o=await this.connection.sendRequest("textDocument/rename",s);if(i){this.emit("renamed",o)}return o}initializeParams(){const t=super.initializeParams();t.initializationOptions={kiteTypesEnabled:true};return t}connect(t){super.connect(t);(0,c.EU)((()=>this.isConnected),-1).then((()=>{this.connection.onClose((()=>{this.isConnected=false;this.emit("close",this.closing_manually)}))})).catch((()=>{console.error("Could not connect onClose signal")}));return this}close(){try{this.closing_manually=true;super.close()}catch(t){this.closing_manually=false}}_sendOpen(t){this.sendOpen(t);this.fetchKiteStatus(t)}_sendChange(t,e){if(!this.isConnected||!this.isInitialized){return}const n={textDocument:{uri:e.uri,version:e.version},contentChanges:t};this.connection.sendNotification("textDocument/didChange",n);e.version++;this.fetchKiteStatus(e)}}}}]);
//# sourceMappingURL=jupyter-lsp-connection.ec7e14f98d861fecc490.js.map?v=ec7e14f98d861fecc490